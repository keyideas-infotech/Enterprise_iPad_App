//
//  treatmentType.m
//  Measurements
//
//  Created by User on 07/02/13.
//
//

#define kBgQueue dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)
#import "treatmentType.h"
#import "WSAssetPicker.h"
#import <QuartzCore/QuartzCore.h>
#import "specialInstruction.h"
#import "AboutViewController.h"
#import "leadMeasurementInfotab2.h"
#import "OverlayView.h"
#import "UIImage+Scale.h"
#import "PresetImages.h"

#define ACCEPTABLE_CHARECTERS @" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_.- "

@interface treatmentType ()
{
    
    NSArray * optionArray;
    UIImageView * iMV1;
    UIImageView * iMV2;
    UIPopoverController * popover;
    NSData *dataImage, *dataImage_tab2;
    NSMutableArray * arrTab1;
    NSMutableArray * arrTab2;
    leadMeasurementInfotab2* leadMeasObj;
    leadMeasurementInfotab2 *leadMeasObj2;
    leadMeasurementInfotab2 *leadMeasObj3;
    
}

@end

@implementation treatmentType
@synthesize pickerController = _pickerController;
@synthesize scrollView = _scrollView;
@synthesize scrollView_tab2 = _scrollView_tab2;
@synthesize scrollFortab1;
@synthesize pageControl = _pageControl;
@synthesize pageControlInUse = _pageControlInUse;
@synthesize library;
@synthesize scrollFortab2;
@synthesize selectedTreatmentType;
@synthesize strLocalLeadID, appdelObj,modeValue,scrollView_forsketch,scrollView_forsketch_tab2;
@synthesize strLocalMeasurementLeadID,popOver;
@synthesize custName,custAdd,custEmail,custPhone,techName,techPhone,salesPerson, view1;
@synthesize txfdControlPosition,txfdDepth,txfdHeight,txfdMaterial,txfdOptionalFeature,txfdQuality,txfdRolltype,txfdRoomLabel,txfdTreatment,txfdWidth, optionTable, txfdlayer, txfdExtensionB, txfdOldtreatment,txfdMounttype, viewforMounttypeOM,txfdleftOM, txfdwidthOM, txfdrightOM,txfdtotalwidthOM, txfdtopOM, txfdheightOM, txfdbottomOM, txfdtotalheightOM, viewforControlls, navigationTitle,txfdbracketOM,productNameLbl,productnameTF,form_oneBtn, form_twoBtn,viewfortabtwo_Controlls,productnameTF_tab2, selectedTreatmentType_two,note;
@synthesize addOptionBtn,txfdDepth_inch,txfdHeight_inch,txfdWidth_inch,txfdbottomOM_inch,txfdbracketOM_inch,txfdheightOM_inch,txfdleftOM_inch,txfdrightOM_inch,txfdtopOM_inch,txfdwidthOM_inch;
@synthesize txftotalHeightOM_ft,txftotalHeightOM_inch,txftotalWidthOM_ft,txftotalWidthOM_inch;
@synthesize formNumberClicked,scrollView_forpresetsketch_tab2;

@synthesize txt_center_ft,txt_center_inch,txt_left_ft,txt_left_inch,txt_right_ft,txt_right_inch,scrollView_forpresetsketch;


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation {
    return UIInterfaceOrientationIsPortrait(toInterfaceOrientation);
}
// iOS6
- (BOOL)shouldAutorotate {
    return YES;
}
// iOS6
- (NSUInteger)supportedInterfaceOrientations {
    return UIInterfaceOrientationMaskPortrait;
}
// Added after comment
- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation
{
    
    return UIInterfaceOrientationPortrait;
    
}

- (void)viewDidLoad
{
    
    
    [super viewDidLoad];
    firstselection=0;
    secondselection=0;
    firstchoose=0;
    secondchoose=0;
    send_success=0;
    tab1valid_success=0;
    tab2valid_success=0;
    imgdupload_status=0;
    conalert_status=0;
    netwrok_fail=0;
    
    [viewforControlls removeFromSuperview];
    [viewfortabtwo_Controlls removeFromSuperview];
     room_label_arr=[NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other",nil];
    //////NSLog(@"leadid1=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]);
    [self clear_userDefault_Values];
    ////NSLog(@"leadid2=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]);
    strLocalLeadID=  [[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"];
    imageDataArr = [[NSMutableArray alloc]init];
    imageDataArr_tab2 = [[NSMutableArray alloc]init];
    sketch_imagedataArr_tab1 = [[NSMutableArray alloc]init];
    sketch_imagedataArr_tab2 = [[NSMutableArray alloc]init];
    nullmeasurementid = [[NSMutableArray alloc]init];
    tfoptionalFeatureArr = [[NSMutableArray alloc]init];
    imageUrlArr = [[NSMutableArray alloc]init];
    imageNameArr = [[NSMutableArray alloc]init];
    tab1ClickedFlag = 0;
    tab2ClickedFlag = 0;
    appdelObj =  (AppDelegate *)[[UIApplication sharedApplication]delegate];
    modeValue = appdelObj.mode;
    [appdelObj.arr_presketch_images removeAllObjects];
    [appdelObj.arr_presketch_images_tab2 removeAllObjects];
    //NSLog(@"selectedTreatmentType=%@",selectedTreatmentType);
    
    //////NSLog(@"clicked_table=%i",formNumberClicked);
    ////NSLog(@"selectedTreatmentType=%@",selectedTreatmentType);
    ////////NSLog(@"userde=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"midvalue"]);
    
    index = 1;
    indexforsketch = 1;
    index_tab2 = 1;
    indexforsketch2 = 1;
    view_inst_imageBtn.hidden = YES;
    leadMeasObj2 = [[leadMeasurementInfotab2 alloc]init];
    leadMeasObj3 = [[leadMeasurementInfotab2 alloc]init];
    detail_scrollView.layer.masksToBounds = YES;
    detail_scrollView.layer.cornerRadius = 10.0;
    specStr = @"";
    form_oneBtn.layer.masksToBounds = YES;
    form_oneBtn.layer.cornerRadius = 5.0;
    form_oneBtn.layer.borderWidth = 1.0;
    form_oneBtn.layer.borderColor = [UIColor darkGrayColor].CGColor;
    form_twoBtn.layer.masksToBounds = YES;
    form_twoBtn.layer.cornerRadius = 5.0;
    form_twoBtn.layer.borderWidth = 1.0;
    form_twoBtn.layer.borderColor = [UIColor darkGrayColor].CGColor;
    form_oneArr = [NSArray arrayWithObjects:@"Roller Shade",@"Roman Shade", @"Woven Wood",@"Wood Blinds",@"XL Pleat",@"Cellular Shade", nil];
    formtwoArr = [NSArray arrayWithObjects:@"XL Vertical",@"Panel Systems",@"Drapery", nil];
    
    self.navigationTitle.text = @"Measurement";
    
    self.scrollView = [[UIScrollView alloc]init];
    self.scrollView.frame = CGRectMake(0, 777, 768, 111);
    [self.scrollFortab1 addSubview:self.scrollView];
    picLbl = [[UILabel alloc] initWithFrame:CGRectMake(30, 40, 100, 30)];
    picLbl.backgroundColor = [UIColor clearColor];
    picLbl.text = @"Pictures:";
    //    [self.scrollView addSubview:picLbl];
    
    self.scrollView_tab2 = [[UIScrollView alloc]init];
    self.scrollView_tab2.frame = CGRectMake(0, 777, 768, 111);
    [self.scrollFortab2 addSubview:self.scrollView_tab2];
    picLbl_tab2 = [[UILabel alloc] initWithFrame:CGRectMake(30, 40, 100, 30)];
    picLbl_tab2.backgroundColor = [UIColor clearColor];
    picLbl_tab2.text = @"Pictures:";
    //    [self.scrollView_tab2 addSubview:picLbl_tab2];
    
    
    self.scrollView_forsketch = [[UIScrollView alloc]init];
    self.scrollView_forsketch.frame = CGRectMake(0, 777+100, 768, 111);
    [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    sketchLbl = [[UILabel alloc] initWithFrame:CGRectMake(30, 40, 100, 30)];
    sketchLbl.backgroundColor = [UIColor clearColor];
    sketchLbl.text = @"Sketch:";
    //    [self.scrollView_forsketch addSubview:sketchLbl];
    
    self.scrollView_forsketch_tab2 = [[UIScrollView alloc]init];
    self.scrollView_forsketch_tab2.frame = CGRectMake(0, 777+100, 768, 111);
    [self.scrollFortab2 addSubview:self.scrollView_forsketch_tab2];
    sketchLbl_tab2 = [[UILabel alloc] initWithFrame:CGRectMake(30, 40, 100, 30)];
    sketchLbl_tab2.backgroundColor = [UIColor clearColor];
    sketchLbl_tab2.text = @"Sketch:";
    //    [self.scrollView_forsketch_tab2 addSubview:sketchLbl_tab2];
    
    self.scrollView_forpresetsketch= [[UIScrollView alloc]init];
    self.scrollView_forpresetsketch_tab2= [[UIScrollView alloc]init];
    
    
    if ([modeValue isEqualToString:@"new"]){
        noteText = @"";
        noteText_tab2 = @"";
        if ([selectedTreatmentType isEqualToString:@"1"]) {
            self.scrollView_tab2.hidden = YES;
            self.scrollView.hidden = NO;
            tab1flag = 1;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"Roller Shade";
            self.productNameLbl.text = @"SHADES + BLINDS";
            form_oneBtn.backgroundColor = [UIColor grayColor];
            tab1ClickedFlag = 1;
            labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Roll Type",@"Optional Features",@"Extention Bracket",@"Old Treatment",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
            [self arrangeView:1];
        }
        else if ([selectedTreatmentType isEqualToString:@"2"])
        {
            
            tab1flag = 1;
            self.scrollView_tab2.hidden = YES;
            self.scrollView.hidden = NO;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            self.productNameLbl.text = @"SHADES + BLINDS";
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"Woven Wood";
            form_oneBtn.backgroundColor = [UIColor grayColor];
            tab1ClickedFlag = 1;
            labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Type",@"Optional Features",@"Extention Bracket",@"Mount Type2",@"Old Treatment",@"Head Rail Size",@"Cord Type",@"TDBU",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)",@"Lining", nil];
            [self arrangeView:101];
            
            
        }
        else if ([selectedTreatmentType isEqualToString:@"3"])
        {
            self.scrollView_tab2.hidden = NO;
            self.scrollView.hidden = YES;
            tab2flag = 1;
            
            selectedTreatmentType_two = selectedTreatmentType;
            self.productnameTF_tab2.hidden = NO;
            self.productnameTF.hidden = YES;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = YES;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = NO;
            [[NSUserDefaults standardUserDefaults]setValue:@"2" forKey:@"formType"];
            self.productnameTF_tab2.text = @"XL Vertical";
            form_twoBtn.backgroundColor = [UIColor grayColor];
            tab2ClickedFlag = 1;
            self.productNameLbl.text = @"Drapery + Hardware and Verticals";
            labelArr_tab2  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Pair or Single",@"Total Width Coverage",@"Left",@"Left(inch)",@"Width",@"Width(inch)",@"Right",@"Right(inch)",@"Total Width",@"Total Width(inch)",@"Hardware width",@"Window /Wall Height",@"Top",@"Top(inch)",@"Height",@"Height(inch)",@"Total Height",@"Total Height(inch)",@"Top Of Track",@"Top2",@"Top2(inch)",@"Height2",@"Height2(inch)",@"Top Of Track2",@"Top Of Track2(inch)",@"Bottom of crown to floor",@"Ceiling to floor",@"Mount Type",@"Cord side",@"Extention Bracket",@"Old Treatment", nil];
            [self arrangetabtwo_View:301];
        }
        else if ([selectedTreatmentType isEqualToString:@"4"])
        {
            tab2flag = 1;
            self.scrollView_tab2.hidden = NO;
            self.scrollView.hidden = YES;
            selectedTreatmentType_two = selectedTreatmentType;
            self.productnameTF_tab2.hidden = NO;
            self.productnameTF.hidden = YES;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = YES;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = NO;
            [[NSUserDefaults standardUserDefaults]setValue:@"2" forKey:@"formType"];
            self.productnameTF_tab2.text = @"Drapery";
            self.productNameLbl.text = @"Drapery + Hardware and Verticals";
            form_twoBtn.backgroundColor = [UIColor grayColor];
            tab2ClickedFlag = 1;
            labelArr_tab2  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Pair or Single",@"Drapery Width Coverage",@"Left",@"Left(inch)",@"Width",@"Width(inch)",@"Right",@"Right(inch)",@"Total Width",@"Total Width(inch)",@"Hardware width",@"Window /Wall Height",@"Top",@"Top(inch)",@"Height",@"Height(inch)",@"Total Height",@"Total Height(inch)",@"Top Of Pole",@"Top2",@"Top2(inch)",@"Height2",@"Height2(inch)",@"Top Of Pole2",@"Top Of Pole2(inch)",@"Bottom of crown to floor",@"Ceiling to floor",@"Finished Length",@"Mount Type",@"Functionality",@"Extention Bracket",@"Old Treatment",@"Return",@"Puddle",@"Off the floor", nil];
            [self arrangetabtwo_View:401];
        }
        else if ([selectedTreatmentType isEqualToString:@"5"]){
            tab1flag = 1;
            self.scrollView_tab2.hidden = YES;
            self.scrollView.hidden = NO;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            self.productNameLbl.text = @"SHADES + BLINDS";
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"Roman Shade";
            form_oneBtn.backgroundColor = [UIColor grayColor];
            tab1ClickedFlag = 1;
            labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Type",@"Optional Features",@"Extention Bracket",@"Mount Type2",@"Old Treatment",@"Head Rail Size",@"Cord Type",@"TDBU",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)",@"Lining", nil];
            [self arrangeView:501];
        }
        else if ([selectedTreatmentType isEqualToString:@"9"]){
            tab2flag = 1;
            self.scrollView_tab2.hidden = NO;
            self.scrollView.hidden = YES;
            selectedTreatmentType_two = selectedTreatmentType;
            self.productnameTF_tab2.hidden = NO;
            self.productnameTF.hidden = YES;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = YES;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = NO;
            [[NSUserDefaults standardUserDefaults]setValue:@"2" forKey:@"formType"];
            self.productnameTF_tab2.text = @"Panel Systems";
            self.productNameLbl.text = @"Drapery + Hardware and Verticals";
            form_twoBtn.backgroundColor = [UIColor grayColor];
            tab2ClickedFlag = 1;
            labelArr_tab2  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Pair or Single",@"Panel Width Coverage",@"Left",@"Left(inch)",@"Width",@"Width(inch)",@"Right",@"Right(inch)",@"Total Width",@"Total Width(inch)",@"Hardware width",@"Window /Wall Height",@"Top",@"Top(inch)",@"Height",@"Height(inch)",@"Total Height",@"Total Height(inch)",@"Top Of Track",@"Top2",@"Top2(inch)",@"Height2",@"Height2(inch)",@"Top Of Track2",@"Top Of Track2(inch)",@"Bottom of crown to floor",@"Ceiling to floor",@"Mount Type",@"System",@"Cord side",@"Extention Bracket",@"Old Treatment", nil];
            [self arrangetabtwo_View:901];
        }
        else if ([selectedTreatmentType isEqualToString:@"6"]){
            tab1flag = 1;
            self.scrollView_tab2.hidden = YES;
            self.scrollView.hidden = NO;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"Wood Blinds";
            self.productNameLbl.text = @"SHADES + BLINDS";
            //        CGRect frame = addOptionBtn.frame;
            //        frame.origin.y = 707;
            //        addOptionBtn.frame = frame;
            form_oneBtn.backgroundColor = [UIColor grayColor];
            tab1ClickedFlag = 1;
            labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Tilt Type",@"Mount Type2",@"Cord Type",@"TDBU",@"Spacer Needed",@"Old Treatment",@"Control Type",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
            [self arrangeView:601];
        }
        else if ([selectedTreatmentType isEqualToString:@"2"]){
            tab1flag = 1;
            self.scrollView_tab2.hidden = YES;
            self.scrollView.hidden = NO;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"Woven Wood";
            self.productNameLbl.text = @"SHADES + BLINDS";
            form_oneBtn.backgroundColor = [UIColor grayColor];
            [self arrangeView:201];
        }
        else if ([selectedTreatmentType isEqualToString:@"7"]){
            tab1flag = 1;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"XL Pleat";
            self.productNameLbl.text = @"SHADES + BLINDS";
            //        CGRect frame = addOptionBtn.frame;
            //        frame.origin.y = 707;
            //        addOptionBtn.frame = frame;
            form_oneBtn.backgroundColor = [UIColor grayColor];
            tab1ClickedFlag = 1;
            labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Optional Features",@"Mount Type2",@"Cord Type",@"TDBU",@"Extention Bracket",@"Old Treatment",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
            [self arrangeView:701];
        }
        else if ([selectedTreatmentType isEqualToString:@"8"]){
            tab1flag = 1;
            self.scrollView_tab2.hidden = YES;
            self.scrollView.hidden = NO;
            self.productnameTF_tab2.hidden = YES;
            self.productnameTF.hidden = NO;
            ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
            ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
            [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
            self.productnameTF.text = @"Cellular Shade";
            self.productNameLbl.text = @"SHADES + BLINDS";
            
            form_oneBtn.backgroundColor = [UIColor grayColor];
            tab1ClickedFlag = 1;
            labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Optional Features",@"Mount Type2",@"Cord Type",@"TDBU",@"Extention Bracket",@"Old Treatment",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
            [self arrangeView:701];
        }
    }
    viewforsketch = [[SmoothLineView alloc]initWithFrame:CGRectMake(100, 200, 568, 550)];
    ////////NSLog(@"leadID=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]);
    
    
    self.viewforMounttypeOM.frame = CGRectMake(26, 514, 683, 267);
    self.viewforMounttypeOM.hidden = YES;
    UIImageView *imgpt = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"dropdown2.png"]];
    imgpt.frame = CGRectMake(137, 5, 20, 20);
    [productnameTF addSubview:imgpt];
    
    UIImageView *imgpt_2 = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"dropdown2.png"]];
    imgpt_2.frame = CGRectMake(137, 5, 20, 20);
    [productnameTF_tab2 addSubview:imgpt_2];
    
    
    
    
    self.library = [[ALAssetsLibrary alloc] init];
    arrTab1 = [[NSMutableArray alloc]init];
    arrTab2 = [[NSMutableArray alloc]init];
    ////////NSLog(@"strLocalLeadIDmodeValue = %@",modeValue);
    
    if ([strLocalLeadID isKindOfClass:[NSNull class]]) {
        
    }
    else{
        ////////NSLog(@"strLocalLeadID data present");
        [self checkAndCreateDatabase];
        [self readDataFromDatabase];
        if ([modeValue isEqualToString:@"edit"]){
            [self gotoEdit];
            
        }
        
        
        strLocalLeadID = nil;
        
    }
  	
    [optionTable setHidden:YES];
    //NSLog(@"modeValue...%@",modeValue);
    
    if ([modeValue isEqualToString:@"new"])
    {
        
         ((UITextField *)[self.view viewWithTag:1040]).text =@"1";
         ((UITextField *)[self.view viewWithTag:1041]).text =@"1";
        
    }
    if([((UITextField *)[self.view viewWithTag:1040]).text length]==0||[((UITextField *)[self.view viewWithTag:1040]).text isEqualToString:@"(null)"])
    {
        
          ((UITextField *)[self.view viewWithTag:1040]).text =@"1";
          //((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
        
    }
    if([((UITextField *)[self.view viewWithTag:1041]).text length]==0||[((UITextField *)[self.view viewWithTag:1041]).text isEqualToString:@"(null)"])
    {
        ((UITextField *)[self.view viewWithTag:1041]).text =@"1";
       // ((UITextField *)[self.view viewWithTag:1040]).hidden = YES;
    }
    
    
    
}

-(void)viewDidAppear:(BOOL)animated
{
    NSLog(@"appdelObj.arr_presketch_images.count %i",appdelObj.arr_presketch_images.count);
    //added 11 march
    if(appdelObj.arr_presketch_images.count>0)
    {
        
        /* scrollFortab1.contentSize=CGSizeMake(scrollFortab1.contentSize.width, 1000);
         scrollFortab2.contentSize=CGSizeMake(scrollFortab1.contentSize.width, 1300);*/
        
        [self set_preset_scrollView];
    }
    if(appdelObj.arr_presketch_images_tab2.count>0)
    {
        
        [self set_preset_scrollView_tab2];
    }
    //    scrollView_forsketch.backgroundColor = [UIColor redColor];
    NSLog(@"self.scrollView_forsketch.frame.origin.y %f",self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height+20);
    NSLog(@"self.scrollView.frame.origin.y %f",scrollView_forpresetsketch_tab2.frame.origin.y);
    
    NSLog(@"scrollFortab1 content size%f",scrollFortab1.contentSize.height);
    
    if(scrollFortab1.contentSize.height<615)
    {
        scrollFortab1.contentSize=CGSizeMake(scrollFortab1.contentSize.width, 615);
    }
    
    scrollFortab1.scrollEnabled=YES;
    
}


-(void)gotoEdit
{
    
    
    tab1flag = 1;
    tab2flag = 1;
    sketchImageData_tab1 = [[NSData alloc]init];
    sketchImageData_tab2 = [[NSData alloc]init];
    
    [self checkAndCreateDatabase];
    [self readDataFromDatabaseforMeasurements];
    windowSideMarkText = leadMeasObj.windowSidemark;
    
    
    materialText = leadMeasObj.material;
    
    
    if (formNumberClicked == 1)
    {
        
        [self form_onePressed:@""];
        
    }
    else if (formNumberClicked == 2)
    {
        
        form_twoBtn.backgroundColor = [UIColor grayColor];
        form_oneBtn.backgroundColor = [UIColor clearColor];
        productnameTF.hidden = YES;
        self.viewforControlls.hidden = YES;
        
    }
    
    if ([appdelObj.fromView isEqualToString:@"install"])
    {
        
        [submitBtn setTitle:@"Done" forState:UIControlStateNormal];
        view_inst_imageBtn.hidden = NO;
        addOptionBtn.hidden = YES;
        
    }
}

-(void)arrangeView:(int)tagVal
{
    
    NSLog(@".....arrangeView......");
    firstselection=1;
    secondselection=0;
      row = 0;
    col = 0;
    noneFlag = 0;
    [self.viewforControlls removeFromSuperview];
    [scrollFortab1 removeFromSuperview];
    viewforControlls = [[UIView alloc]init];
    scrollFortab1 = [[UIScrollView alloc]initWithFrame:CGRectMake(46, 350, 680, 560)];
    for (int i= 0; i<[labelArr count]; i++) {
        UILabel *nameLbl;
        if ([[labelArr objectAtIndex:i] isEqualToString:@"Width"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col*250+0, row*40+10, 180, 21)];
        }
        else if ([[labelArr objectAtIndex:i] isEqualToString:@"Width(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col*250+0, row*40+10, 180, 21)];
        }
        else if ([[labelArr objectAtIndex:i] isEqualToString:@"Height"]){
            row = row-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col*250+0, row*40+10, 180, 21)];
        }
        else if ([[labelArr objectAtIndex:i] isEqualToString:@"Height(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col*250+0, row*40+10, 180, 21)];
        }
        else if ([[labelArr objectAtIndex:i] isEqualToString:@"Depth"]){
            row = row-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(485, row*40+10, 180, 21)];
        }
        else if ([[labelArr objectAtIndex:i] isEqualToString:@"Depth(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col*250+0, row*40+10, 180, 21)];
        }
        else{
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col*350+0, row*40+10, 180, 21)];
        }
        nameLbl.text = [labelArr objectAtIndex:i];
        nameLbl.backgroundColor = [UIColor clearColor];
        nameLbl.font = [UIFont fontWithName:@"Arial" size:17];
        [self.viewforControlls addSubview:nameLbl];
        if ([nameLbl.text isEqualToString:@"Room Label"])
        {
            
            
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+95, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            [viewforControlls addSubview:lbl];
            
            
        }
        if ([nameLbl.text isEqualToString:@"Control Position"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*38, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 5;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Left";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*38, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 55;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"Right";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Roll Type"]){
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*38, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 6;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 55, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.adjustsFontSizeToFitWidth = YES;
            yesLbl.text = @"Regular";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*38, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 56;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 80, 50)];
            noLbl.text = @"Reverse";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
        }
        else if ([nameLbl.text isEqualToString:@"Extention Bracket"]){
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*38, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 8;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 80, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*38, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [radioBtn2 setSelected:YES];
            radioBtn2.tag = 58;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 80, 50)];
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
        }
        else if ([nameLbl.text isEqualToString:@"Old Treatment"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 9;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [radioBtn2 setSelected:YES];
            radioBtn2.tag = 59;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            if (tagVal == 601 || tagVal == 1 || tagVal == 701) {
                //////NSLog(@"tagvalue");
                col = col - 1;
                row = row+1;
            }
            
        }
        else if ([nameLbl.text isEqualToString:@"Mount Type"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [radioBtn1 setSelected:YES];
            radioBtn1.tag = 10;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"IM";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 60;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"OM";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
            col = col - 1;
            row = row+1;
        }
        else if ([nameLbl.text isEqualToString:@"Type"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*38, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 11;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 55, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.adjustsFontSizeToFitWidth = YES;
            yesLbl.text = @"Standard";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*38, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag =11+50;
            [viewforControlls addSubview:radioBtn2];
            
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"Water Fall";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Mount Type2"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 12;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Wall";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+145+60, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 12+50;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.text = @"Ceiling";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Cord Type"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 13;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Cord";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 13+50;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"Con-Loop";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Lining"]) {
            CGRect frame = nameLbl.frame;
            frame.origin.y = (row-3)*40+10;
            nameLbl.frame = frame;
            
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, (row-3)*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 1000+13;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"U";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+50, (row-3)*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 1000+14;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"P";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
            UIButton *radioBtn3 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn3.frame = CGRectMake(col*372+130+50+50, (row-3)*39, 50,50);
            [radioBtn3 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn3 setBackgroundColor:[UIColor clearColor]];
            [radioBtn3 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn3 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn3.tag = 1000+15;
            [viewforControlls addSubview:radioBtn3];
            
            UILabel *noLbl2 = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn3.frame.origin.x+radioBtn3.frame.size.width-15, radioBtn3.frame.origin.y, 70, 50)];
            noLbl2.adjustsFontSizeToFitWidth = YES;
            noLbl2.text = @"B";
            [noLbl2 setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl2];
            
           
        }
        else if ([nameLbl.text isEqualToString:@"TDBU"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag =14;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 14+50;
            [viewforControlls addSubview:radioBtn2];
            radioBtn2.selected = YES;
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            if (tagVal == 501 || tagVal ==101) {
                //////NSLog(@"tagvalue");
                col = col - 1;
                row = row+1;
            }
        }
        else if ([nameLbl.text isEqualToString:@"Tilt Type"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*38, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 15;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Wand";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*38, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 15+50;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"Cord";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Spacer Needed"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 16;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+75, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [radioBtn2 setSelected:YES];
            radioBtn2.tag = 16+50;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Control Type"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col*372+130, row*39, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 17;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewforControlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 70, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Standard";
            
            [viewforControlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col*372+130+105, row*39, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 17+50;
            [viewforControlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-10, radioBtn2.frame.origin.y, 85, 50)];
            noLbl.text = @"both on left";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl];
            
            UIButton *radioBtn3 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn3.frame = CGRectMake(noLbl.frame.origin.x+noLbl.frame.size.width, row*39, 50,50);
            [radioBtn3 addTarget:self action:@selector(radioButtonPressed:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn3 setBackgroundColor:[UIColor clearColor]];
            [radioBtn3 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn3 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn3.tag = 17+51;
            [viewforControlls addSubview:radioBtn3];
            
            UILabel *noLbl2 = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn3.frame.origin.x+radioBtn3.frame.size.width-10, radioBtn2.frame.origin.y, 120, 50)];
            noLbl2.text = @"both on Right";
            [noLbl2 setBackgroundColor:[UIColor clearColor]];
            [viewforControlls addSubview:noLbl2];
            if (tagVal == 601) {
                //////NSLog(@"tagvalue");
                col = col - 1;
                row = row+1;
            }
            
        }
        else if ([nameLbl.text isEqualToString:@"Width"]) {
            row = row+1;
            //            col = col-1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+45, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewforControlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col*372+0, row*40+7-15, 50, 30)];
            txtF.text = @"0";
            txtF.tag =tagVal+i;
        }
        else if ([nameLbl.text isEqualToString:@"Width(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col-1)*372+50, row*40+7-15, 50, 30)];
            txtF.text = @"0";
            col = col-1;
            txtF.tag =tagVal+i;
        }
        else if ([nameLbl.text isEqualToString:@"Height"]) {
            row = row+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+50, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //           [viewforControlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col*325-80, row*40+7-15, 50, 30)];
            txtF.text = @"0";
            txtF.tag =tagVal+i;
        }
        else if ([nameLbl.text isEqualToString:@"Height(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col+1)*325-80+50, (row-1)*40+7-15, 50, 30)];
            txtF.text = @"0";
            col = col -1;
            row = row -1;
            txtF.tag =tagVal+i;
        }
        else if ([nameLbl.text isEqualToString:@"Depth"]) {
            row = row+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+45, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewforControlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col*372+560-80, row*40+7-15, 50, 30)];
            txtF.text = @"0";
            txtF.tag =tagVal+i;
        }
        else if ([nameLbl.text isEqualToString:@"Depth(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col-1)*372+560-80+50, row*40+7-15, 50, 30)];
            txtF.text = @"0";
            col = col -1;
            txtF.tag =tagVal+i;
        }
        else{
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col*372+150, row*40+7, 158, 30)];
            img = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"dropdown2.png"]];
            img.frame = CGRectMake(137, 5, 20, 20);
            if ([nameLbl.text isEqualToString:@"Window Side Mark"]){
                
            }
            else if ([nameLbl.text isEqualToString:@"Material"]){
                
            }
            else{
                [txtF addSubview:img];
            }
            
        }
        txtF.borderStyle = UITextBorderStyleRoundedRect;
        txtF.delegate = self;
        txtF.tag =tagVal+i;
        if (txtF.tag == 10) {
            txtF.tag = 100;
            txtF.adjustsFontSizeToFitWidth = YES;
        }
        
        if (i == 2) {
            txtF.text = @"1";
        }
        if (txtF.tag == 6) {
            //////NSLog(@"is6");
            txtF.tag = 600;
        }
        txtF.borderStyle = UITextBorderStyleBezel;
        txtF.font=[UIFont systemFontOfSize:14.0];
        if(txtF.tag==100)
        {
            txtF.tag = 0;
            
            UITextView *txt_view=[[UITextView alloc]initWithFrame:CGRectMake(txtF.frame.origin.x, txtF.frame.origin.y-10, txtF.frame.size.width, txtF.frame.size.height+20)];
            txt_view.layer.borderColor = [UIColor grayColor].CGColor;
            txt_view.layer.borderWidth=2.0;
            txt_view.delegate=self;
            txt_view.tag=100;
            txt_view.font=[UIFont systemFontOfSize:14.0];
            img.frame=CGRectMake(img.frame.origin.x, img.frame.origin.y+10, img.frame.size.width, img.frame.size.height);
            [txt_view addSubview:img];
            [self.viewforControlls addSubview:txt_view];
            
        }
        else
        [self.viewforControlls addSubview:txtF];
        if (col == 1) {
            col = 0;
            row++;
        }
        else{
            col++;
        }
        if ([selectedTreatmentType isEqualToString:@"1"]) {
            if (txtF.tag ==11||txtF.tag ==12||txtF.tag ==13||txtF.tag ==14||txtF.tag ==15||txtF.tag ==16) {
                txtF.keyboardType = UIKeyboardTypeNumberPad;
            }
        }
        if (([selectedTreatmentType isEqualToString:@"2"] && txtF.tag == 115)||([selectedTreatmentType isEqualToString:@"2"] && txtF.tag == 117 )||([selectedTreatmentType isEqualToString:@"2"] && txtF.tag == 119)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"2"] && txtF.tag == 116)||([selectedTreatmentType isEqualToString:@"2"] && txtF.tag == 118 )||([selectedTreatmentType isEqualToString:@"2"] && txtF.tag == 120)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 515)||([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 516)||([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 517)||([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 518 )||([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 519 )||([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 520)||([selectedTreatmentType isEqualToString:@"5"] && txtF.tag == 520)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 613)||([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 615 )||([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 617)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 614)||([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 616 )||([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 618)||([selectedTreatmentType isEqualToString:@"6"] && txtF.tag == 619)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"7"] && txtF.tag == 713)||([selectedTreatmentType isEqualToString:@"7"] && txtF.tag == 715 )||([selectedTreatmentType isEqualToString:@"7"] && txtF.tag == 717)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"7"] && txtF.tag == 714)||([selectedTreatmentType isEqualToString:@"7"] && txtF.tag == 716 )||([selectedTreatmentType isEqualToString:@"7"] && txtF.tag == 718)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"8"] && txtF.tag == 713)||([selectedTreatmentType isEqualToString:@"8"] && txtF.tag == 715 )||([selectedTreatmentType isEqualToString:@"8"] && txtF.tag == 717)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType isEqualToString:@"8"] && txtF.tag == 714)||([selectedTreatmentType isEqualToString:@"8"] && txtF.tag == 716 )||([selectedTreatmentType isEqualToString:@"8"] && txtF.tag == 718)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        
    }
    if ([labelArr count]%2 == 0) {
        scrollFortab1.contentSize = CGSizeMake(680, 20*[labelArr count]);
        scrollFortab1.backgroundColor = [UIColor whiteColor];
        viewforControlls.frame = CGRectMake(0, 0, 680,20*[labelArr count] );
    }
    else{
        scrollFortab1.contentSize = CGSizeMake(680, 20*[labelArr count]+18);
        scrollFortab1.backgroundColor = [UIColor whiteColor];
        viewforControlls.frame = CGRectMake(0, 0, 680,20*[labelArr count]+18 );
    }
    [scrollFortab1 addSubview:viewforControlls];
    //////NSLog(@"1a");
    [self.view addSubview:scrollFortab1];
    if ([modeValue isEqualToString:@"edit"])
    {
        firstchoose=1;
    }
    
    //added 11 march
    [self.scrollFortab1 addSubview:self.scrollView_forpresetsketch];
    [preset_sketchLbl removeFromSuperview];
    preset_sketchLbl = [[UILabel alloc] initWithFrame:CGRectMake(30, 40, 140, 30)];
    preset_sketchLbl.backgroundColor = [UIColor clearColor];
    preset_sketchLbl.text = @"Preset Sketch:";
    [self.scrollView_forpresetsketch addSubview:preset_sketchLbl];
    if(appdelObj.arr_presketch_images.count==0)
    {
        preset_sketchLbl.hidden=YES;
    }
    
}

-(void)arrangetabtwo_View:(int)tagVal
{
    
    
  
    NSLog(@"....arrangetabtwo_View....");
    
    secondselection=1;
    firstselection=0;
    
    ////NSLog(@"labelArr_tab2 count %i",[labelArr_tab2 count]);
    
    row_tab2 = 0;
    col_tab2 = 0;
    [self.viewfortabtwo_Controlls removeFromSuperview];
    [scrollFortab2 removeFromSuperview];
    viewfortabtwo_Controlls = [[UIView alloc]init];
    scrollFortab2 = [[UIScrollView alloc]initWithFrame:CGRectMake(46, 350, 700, 560)];
    viewfortabtwo_Controlls.backgroundColor = [UIColor whiteColor];
    for (int i= 0; i<[labelArr_tab2 count]; i++)
    {
        
        UILabel *nameLbl;
        if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Left"])
        {
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Left(inch)"])
        {
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Width"])
        {
            row_tab2 = row_tab2-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350-210+15, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Width(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350-210+15, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Right"]){
            row_tab2 = row_tab2-2;
            //            col_tab2 = col_tab2-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+210+70+30, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Right(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+30, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Total Width"]){
            row_tab2 = row_tab2-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+70+45, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Total Width(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+45, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Height"]){
            row_tab2 = row_tab2-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2-1)*350+160, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Height(inch)"]){
            
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2-1)*350+160, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Total Height"]){
            row_tab2 = row_tab2-2;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2+1)*350-30, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Total Height(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2+1)*350-30, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top2"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top2(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Height2"]){
            row_tab2 = row_tab2-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2-1)*350+160, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Height2(inch)"]){
            
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2-1)*350+160, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top Of Track2"]||[[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top Of Pole2"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2+1)*350-30, (row_tab2-1)*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top Of Track2(inch)"]||[[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Top Of Pole2(inch)"]){
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake((col_tab2+1)*350-30, row_tab2*40+15, 180, 21)];
        }
        else if ([[labelArr_tab2 objectAtIndex:i] isEqualToString:@"Ceiling to floor"]){
            row_tab2 = row_tab2+1;
            col_tab2 =col_tab2-1;
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
                else{
            nameLbl = [[UILabel alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40+15, 180, 21)];
        }
        nameLbl.text = [labelArr_tab2 objectAtIndex:i];
        nameLbl.backgroundColor = [UIColor clearColor];
        nameLbl.font = [UIFont fontWithName:@"Arial" size:17];
        [self.viewfortabtwo_Controlls addSubview:nameLbl];
        if ([nameLbl.text isEqualToString:@"Room Label"])
        {
            
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+95, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            [viewfortabtwo_Controlls addSubview:lbl];
            
        }
        if ([nameLbl.text isEqualToString:@"Pair or Single"])
        {
            
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*38, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 70;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"PR";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+130+65, row_tab2*38, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 71;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UIButton *radioBtn3;
            
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"L";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
            
            radioBtn3 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn3.frame = CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width, row_tab2*38, 50,50);
            [radioBtn3 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn3 setBackgroundColor:[UIColor clearColor]];
            [radioBtn3 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn3 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn3.tag = 72;
            [viewfortabtwo_Controlls addSubview:radioBtn3];
            
            UILabel *noLbl2 = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn3.frame.origin.x+radioBtn3.frame.size.width-15, radioBtn3.frame.origin.y, 70, 50)];
            noLbl2.adjustsFontSizeToFitWidth = YES;
            noLbl2.text = @"C";
            [noLbl2 setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl2];
            
            if (tagVal == 401)
            {
                
            }
            else
            {
                
                noLbl2.hidden = YES;
                radioBtn3.hidden = YES;
                radioBtn3.frame = CGRectMake(radioBtn2.frame.origin.x, radioBtn2.frame.origin.y, 50,50);
                
            }
            
            
            UIButton *radioBtn4 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn4.frame = CGRectMake(radioBtn3.frame.origin.x+radioBtn3.frame.size.width, row_tab2*38, 50,50);
            [radioBtn4 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn4 setBackgroundColor:[UIColor clearColor]];
            [radioBtn4 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn4 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn4.tag = 73;
            [viewfortabtwo_Controlls addSubview:radioBtn4];
            
            UILabel *noLbl3 = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn4.frame.origin.x+radioBtn4.frame.size.width-15, radioBtn3.frame.origin.y, 70, 50)];
            noLbl3.adjustsFontSizeToFitWidth = YES;
            noLbl3.text = @"R";
            [noLbl3 setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl3];
            
            
        }
        
        else if ([nameLbl.text isEqualToString:@"Ceiling to floor"])
        {
            
            
            
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 74;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Left";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            
            txt_left_ft=[[UITextField alloc]init];
            txt_left_ft.frame=CGRectMake(col_tab2*372+150, row_tab2*40+40, 49, 30);
            txt_left_ft.borderStyle = UITextBorderStyleBezel;
            txt_left_ft.text=@"0";
            [viewfortabtwo_Controlls addSubview:txt_left_ft];
            txt_left_inch=[[UITextField alloc]init];
            txt_left_inch.frame=CGRectMake(col_tab2*372+150+txt_left_ft.frame.size.width, row_tab2*40+40, 49, 30);
            txt_left_inch.text=@"0";
            txt_left_inch.borderStyle = UITextBorderStyleBezel;
            [viewfortabtwo_Controlls addSubview:txt_left_inch];
            
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width+100, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 75;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.adjustsFontSizeToFitWidth = YES;
            noLbl.text = @"Center";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
            
            txt_center_ft=[[UITextField alloc]init];
            txt_center_ft.frame=CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width+120, row_tab2*40+40, 49, 30);
            txt_center_ft.borderStyle = UITextBorderStyleBezel;
            txt_center_ft.text=@"0";
            [viewfortabtwo_Controlls addSubview:txt_center_ft];
            txt_center_inch=[[UITextField alloc]init];
            txt_center_inch.frame=CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width+120+txt_center_ft.frame.size.width, row_tab2*40+40, 49, 30);
            txt_center_inch.borderStyle = UITextBorderStyleBezel;
            txt_center_inch.text=@"0";
            [viewfortabtwo_Controlls addSubview:txt_center_inch];
            
            
            UIButton *radioBtn3 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn3.frame = CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width+100, row_tab2*40, 50,50);
            [radioBtn3 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn3 setBackgroundColor:[UIColor clearColor]];
            [radioBtn3 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn3 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn3.selected=YES;
          
            radioBtn3.tag = 76;
            [viewfortabtwo_Controlls addSubview:radioBtn3];
            
            
            UILabel *noLbl2 = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn3.frame.origin.x+radioBtn3.frame.size.width-15, radioBtn3.frame.origin.y, 70, 50)];
            noLbl2.adjustsFontSizeToFitWidth = YES;
            noLbl2.text = @"Right";
            [noLbl2 setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl2];
            
            
            
          /*  UITextField *txtfd = [[UITextField alloc] initWithFrame:CGRectMake(noLbl2.frame.origin.x+noLbl2.frame.size.width+10, noLbl2.frame.origin.y+10, 150, 30)];
            txtfd.borderStyle = UITextBorderStyleBezel;
            txtfd.tag = 1000+6;
            txtfd.delegate = self;
            [viewfortabtwo_Controlls addSubview:txtfd];
            txtfd.hidden = YES;*/
            
            
            txt_right_ft=[[UITextField alloc]init];
            txt_right_ft.frame=CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width+120, row_tab2*40+40, 49, 30);
            txt_right_ft.borderStyle = UITextBorderStyleBezel;
            txt_right_ft.text=@"0";
            [viewfortabtwo_Controlls addSubview:txt_right_ft];
            
            
            txt_right_inch=[[UITextField alloc]init];
            txt_right_inch.frame=CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width+120+txt_center_ft.frame.size.width, row_tab2*40+40, 49, 30);
            txt_right_inch.borderStyle = UITextBorderStyleBezel;
            txt_right_inch.text=@"0";
            [viewfortabtwo_Controlls addSubview:txt_right_inch];
            txt_center_inch.keyboardType = UIKeyboardTypeNumberPad;
            txt_center_ft.keyboardType = UIKeyboardTypeNumberPad;
            txt_left_ft.keyboardType = UIKeyboardTypeNumberPad;
            txt_left_inch.keyboardType = UIKeyboardTypeNumberPad;
            txt_right_ft.keyboardType = UIKeyboardTypeNumberPad;
            txt_right_inch.keyboardType = UIKeyboardTypeNumberPad;
            
            
            
            txt_center_inch.delegate=self;
            txt_center_ft.delegate=self;
            txt_left_ft.delegate=self;
            txt_left_inch.delegate=self;
            txt_right_ft.delegate=self;
            txt_right_inch.delegate=self;
            
            row_tab2 = row_tab2+2;
            col_tab2 = col_tab2-1;
            
            
        }
        else if ([nameLbl.text isEqualToString:@"Extention Bracket"]){
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 77;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 80, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+130+75, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 78;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 80, 50)];
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
        }
        else if ([nameLbl.text isEqualToString:@"Old Treatment"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 79;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+130+75, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 80;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Mount Type"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 81;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Wall";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+145+60, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 82;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 70, 50)];
            noLbl.text = @"Ceiling";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Functionality"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 83;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Dec";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+130+75, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 84;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"Func";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"System"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 85;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Cord";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+130+75, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 86;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"Wand";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Cord side"]) {
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake(col_tab2*372+130, row_tab2*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 87;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 50, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"L";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(col_tab2*372+130+75, row_tab2*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 88;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 50, 50)];
            noLbl.text = @"R";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
        }
        else if ([nameLbl.text isEqualToString:@"Drapery Width Coverage"]||[nameLbl.text isEqualToString:@"Panel Width Coverage"]||[nameLbl.text isEqualToString:@"Total Width Coverage"]) {
            CGRect frame = nameLbl.frame;
            frame.size.width = 220;
            frame.origin.x = (col_tab2-1)*350+0;
            frame.origin.y = (row_tab2+1)*40+15;
            nameLbl.frame = frame;
            row_tab2 = row_tab2+1;
        }
        
        else if ([nameLbl.text isEqualToString:@"Window /Wall Height"]){
            CGRect frame = nameLbl.frame;
            frame.size.width = 220;
            frame.origin.x = (col_tab2-1)*350+0;
            frame.origin.y = (row_tab2+1)*40+15;
            nameLbl.frame = frame;
            row_tab2 = row_tab2+1;
        }
        else if ([nameLbl.text isEqualToString:@"Left"]) {
            row_tab2 = row_tab2+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+30, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //           [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*372, row_tab2*40, 50, 30)];
            txtF.text = @"0";
        }
        else if ([nameLbl.text isEqualToString:@"Left(inch)"]) {
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*372+50, row_tab2*40, 50, 30)];
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
        }
        else if ([nameLbl.text isEqualToString:@"Width"]){
            row_tab2 = row_tab2+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+45, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*350-210+15, row_tab2*40, 50, 30)];
            txtF.text = @"0";
        }
        else if ([nameLbl.text isEqualToString:@"Width(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2+1)*350-210+50+15, (row_tab2-1)*40, 50, 30)];
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
        }
        else if ([nameLbl.text isEqualToString:@"Right"]){
            row_tab2 = row_tab2+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+43, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*350+210+70+30, row_tab2*40, 50, 30)];
            txtF.text = @"0";
        }
        else if ([nameLbl.text isEqualToString:@"Right(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*350+210+70+50+30, row_tab2*40, 50, 30)];
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
        }
        else if ([nameLbl.text isEqualToString:@"Total Width"]){
            row_tab2 = row_tab2+1;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*350+70+45, row_tab2*40, 50, 30)];
            txtF.userInteractionEnabled = NO;
            txtF.text=@"0";
        }
        else if ([nameLbl.text isEqualToString:@"Total Width(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*350+400+70+45, (row_tab2-1)*40, 50, 30)];
            col_tab2 = col_tab2-1;
            txtF.text=@"0";
            txtF.userInteractionEnabled = NO;
        }
        else if ([nameLbl.text isEqualToString:@"Top"]){
            row_tab2 = row_tab2+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+30, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40, 50, 30)];
            txtF.text = @"0";
            
        }
        else if ([nameLbl.text isEqualToString:@"Top(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*350+50, row_tab2*40, 50, 30)];
            
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
        }
        else if ([nameLbl.text isEqualToString:@"Height"]){
            row_tab2 = row_tab2+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+50, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*350+160, row_tab2*40, 50, 30)];
            txtF.text = @"0";
            
        }
        else if ([nameLbl.text isEqualToString:@"Height(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2)*350+160+50, (row_tab2-1)*40, 50, 30)];
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
            
        }
        else if ([nameLbl.text isEqualToString:@"Total Height"]){
            row_tab2 = row_tab2+1;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2+1)*350-30, row_tab2*40, 50, 30)];
            txtF.userInteractionEnabled = NO;
            txtF.text = @"0";
        }
        else if ([nameLbl.text isEqualToString:@"Total Height(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2)*350-30+50, row_tab2*40, 50, 30)];
            txtF.userInteractionEnabled = NO;
            txtF.text=@"0";
            col_tab2 = col_tab2-1;
            
        }
        else if ([nameLbl.text isEqualToString:@"Top Of Pole"]||[nameLbl.text isEqualToString:@"Top Of Track"]){
            CGRect frame = nameLbl.frame;
            frame.origin.x = (col_tab2-1)*350+0;
            frame.origin.y = (row_tab2+1)*40+15;
            //            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*372+150, (row_tab2+1)*40+10, 158, 30)];
            nameLbl.frame = frame;
            row_tab2 = row_tab2+1;
        }
        else if ([nameLbl.text isEqualToString:@"Top2"]){
            row_tab2 = row_tab2+1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+30, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*350+0, row_tab2*40, 50, 30)];
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            txtF.text = @"0";
        }
        else if ([nameLbl.text isEqualToString:@"Top2(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*350+50, row_tab2*40, 50, 30)];
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
        }
        else if ([nameLbl.text isEqualToString:@"Height2"]){
            //            row_tab2 = row_tab2-1;
            UILabel *lbl = [[UILabel alloc]initWithFrame:CGRectMake(nameLbl.frame.origin.x+50, nameLbl.frame.origin.y, 15, 15)];
            lbl.text = @"*";
            lbl.textColor = [UIColor redColor];
            //            [viewfortabtwo_Controlls addSubview:lbl];
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*350+160, (row_tab2+1)*40, 50, 30)];
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            txtF.text = @"0";
        }
        else if ([nameLbl.text isEqualToString:@"Height2(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2)*350+160+50, (row_tab2)*40, 50, 30)];
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            txtF.text = @"0";
            col_tab2 = col_tab2-1;
            
        }
        else if ([nameLbl.text isEqualToString:@"Top Of Track2"]||[nameLbl.text isEqualToString:@"Top Of Pole2"]){
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2+1)*350-30, row_tab2*40, 50, 30)];
            txtF.userInteractionEnabled = NO;
            txtF.text=@"0";
        }
        else if ([nameLbl.text isEqualToString:@"Top Of Track2(inch)"]||[nameLbl.text isEqualToString:@"Top Of Pole2(inch)"]){
            nameLbl.hidden = YES;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2)*350-30+50, row_tab2*40, 50, 30)];
            txtF.text=@"0";
            txtF.userInteractionEnabled = NO;
        }
        else if ([nameLbl.text isEqualToString:@"Bottom of crown to floor"]){
            nameLbl.numberOfLines = 2;
            CGRect namelbl_frame = nameLbl.frame;
            namelbl_frame.size.height = 40;
            namelbl_frame.size.width = 130;
            namelbl_frame.origin.y = row_tab2*40+10;
            nameLbl.frame = namelbl_frame;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*372+150, row_tab2*40+10, 50, 30)];
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            txtF.text=@"0";
            
           
            txt_bottum_inch = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*372+150+50, row_tab2*40+10, 50, 30)];
            //txtF.borderStyle = UITextBorderStyleRoundedRect;
            txt_bottum_inch.delegate = self;
            txt_bottum_inch.keyboardType = UIKeyboardTypeNumberPad;
            txt_bottum_inch.borderStyle = UITextBorderStyleBezel;
            txt_bottum_inch.text=@"0";
            [self.viewfortabtwo_Controlls addSubview:txt_bottum_inch];
            
        }
        else if ([nameLbl.text isEqualToString:@"Return"]){
            nameLbl.numberOfLines = 2;
            CGRect namelbl_frame = nameLbl.frame;
            namelbl_frame.size.height = 40;
            namelbl_frame.size.width = 130;
            namelbl_frame.origin.x = (col_tab2-1)*350+0;
            namelbl_frame.origin.y = (row_tab2+1)*40+10;
            nameLbl.frame = namelbl_frame;
            
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake((col_tab2-1)*372+130, (row_tab2+1)*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 91;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            UILabel *yesLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn1.frame.origin.x+radioBtn1.frame.size.width-15, radioBtn1.frame.origin.y, 80, 50)];
            [yesLbl setBackgroundColor:[UIColor clearColor]];
            yesLbl.text = @"Yes";
            [viewfortabtwo_Controlls addSubview:yesLbl];
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake((col_tab2-1)*372+130+75, (row_tab2+1)*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 92;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            UILabel *noLbl = [[UILabel alloc]initWithFrame:CGRectMake(radioBtn2.frame.origin.x+radioBtn2.frame.size.width-15, radioBtn2.frame.origin.y, 80, 50)];
            noLbl.text = @"No";
            [noLbl setBackgroundColor:[UIColor clearColor]];
            [viewfortabtwo_Controlls addSubview:noLbl];
            
            
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*372+320, (row_tab2+1)*40+10, 50, 30)];
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            txtF.hidden = YES;
            txtF.text=@"0";
            
            txt_return_inch = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*372+320+50, (row_tab2+1)*40+10, 50, 30)];
            //txtF.borderStyle = UITextBorderStyleRoundedRect;
            txt_return_inch.delegate = self;
            txt_return_inch.borderStyle = UITextBorderStyleBezel;
            txt_return_inch.keyboardType = UIKeyboardTypeNumberPad;
            txt_return_inch.text=@"0";
            [self.viewfortabtwo_Controlls addSubview:txt_return_inch];
            txt_return_inch.hidden = YES;
            
            row_tab2 = row_tab2+2;
            col_tab2 = col_tab2-2;
            
            
            
            
        }
        else if ([nameLbl.text isEqualToString:@"Puddle"]){
            UIButton *radioBtn1 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn1.frame = CGRectMake((col_tab2)*372-17, (row_tab2)*40, 50,50);
            [radioBtn1 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn1 setBackgroundColor:[UIColor clearColor]];
            [radioBtn1 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn1 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn1.tag = 93;
            [radioBtn1 setContentMode:UIViewContentModeScaleAspectFit];
            [viewfortabtwo_Controlls addSubview:radioBtn1];
            
            
            CGRect namelbl_frame = nameLbl.frame;
            namelbl_frame.origin.x = namelbl_frame.origin.x+23;
            namelbl_frame.size.width = 70;
            nameLbl.frame = namelbl_frame;
            
            UIButton *radioBtn2 = [UIButton buttonWithType:UIButtonTypeCustom];
            radioBtn2.frame = CGRectMake(nameLbl.frame.origin.x+nameLbl.frame.size.width+37, (row_tab2)*40, 50,50);
            [radioBtn2 addTarget:self action:@selector(radioButtonPressed_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [radioBtn2 setBackgroundColor:[UIColor clearColor]];
            [radioBtn2 setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateSelected];
            [radioBtn2 setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            radioBtn2.tag = 94;
            [viewfortabtwo_Controlls addSubview:radioBtn2];
            
            
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2)*372+320, (row_tab2)*40+10, 50, 30)];
            txtF.hidden = YES;
            txtF.text=@"0";
            
            txt_puddle_inch = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2)*372+320+50, (row_tab2)*40+10, 50, 30)];
            //txtF.borderStyle = UITextBorderStyleRoundedRect;
            txt_puddle_inch.delegate = self;
            txt_puddle_inch.borderStyle = UITextBorderStyleBezel;
            txt_puddle_inch.keyboardType = UIKeyboardTypeNumberPad;
            txt_puddle_inch.text=@"0";
            txt_puddle_inch.hidden=YES;
            [self.viewfortabtwo_Controlls addSubview:txt_puddle_inch];
            
            
        }
        else if ([nameLbl.text isEqualToString:@"Off the floor"])
        {
            
            
            CGRect namelbl_frame = nameLbl.frame;
            namelbl_frame.origin.x = namelbl_frame.origin.x-180;
            nameLbl.frame = namelbl_frame;
            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*372+320, (row_tab2)*40+10, 50, 30)];
            txtF.hidden = YES;
            txtF.text=@"0";
            
            
            txt_offthefloor_inch = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*372+320+50, (row_tab2)*40+10, 50, 30)];
            //txtF.borderStyle = UITextBorderStyleRoundedRect;
            txt_offthefloor_inch.delegate = self;
            txt_offthefloor_inch.borderStyle = UITextBorderStyleBezel;
            txt_offthefloor_inch.keyboardType = UIKeyboardTypeNumberPad;
            txt_offthefloor_inch.text=@"0";
            txt_offthefloor_inch.hidden=YES;
            [self.viewfortabtwo_Controlls addSubview:txt_offthefloor_inch];
            
            
            
        }
//        else if ([nameLbl.text isEqualToString:@"Hardware width"]){
////            row_tab2 = row_tab2+1;
//            
//            //            [viewfortabtwo_Controlls addSubview:lbl];
//            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2+1)*350-210+15, row_tab2*40, 50, 30)];
//            
//        }
//        else if ([nameLbl.text isEqualToString:@"Hardware width(inch)"]){
//            nameLbl.hidden = YES;
//            txtF = [[UITextField alloc]initWithFrame:CGRectMake((col_tab2-1)*350+50, row_tab2*40, 50, 30)];
//            
//            txtF.text = @"0";
//            col_tab2 = col_tab2-1;
//        }
        else
        {
            
            txtF = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*372+150, row_tab2*40+10, 158, 30)];
            UIImageView *img = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"dropdown2.png"]];
            img.frame = CGRectMake(137, 5, 20, 20);
            
            if ([nameLbl.text isEqualToString:@"Window Side Mark"])
            {
                
            }
            else if ([nameLbl.text isEqualToString:@"Material"])
            {
                
            }
            else if ([nameLbl.text isEqualToString:@"Hardware width"])
            {
                
                txtF.frame=CGRectMake(col_tab2*372+150, row_tab2*40+10, 50, 30);
                txtF.text=@"0";
                txt_hard_inch = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*372+150+50, row_tab2*40+10, 50, 30)];
                //txtF.borderStyle = UITextBorderStyleRoundedRect;
                txt_hard_inch.delegate = self;
                txt_hard_inch.borderStyle = UITextBorderStyleBezel;
                txt_hard_inch.text=@"0";
                txt_hard_inch.keyboardType = UIKeyboardTypeNumberPad;
                [self.viewfortabtwo_Controlls addSubview:txt_hard_inch];
                
            }
            else if ([nameLbl.text isEqualToString:@"Top Of Pole"])
            {
                
            }
            else if ([nameLbl.text isEqualToString:@"Top Of Track"]){
                
            }
            else if ([nameLbl.text isEqualToString:@"Return"])
            {
                
            }
            else if ([nameLbl.text isEqualToString:@"Puddle"])
            {
                
            }
            else if ([nameLbl.text isEqualToString:@"Off the floor"]){
                
            }
            else if ([nameLbl.text isEqualToString:@"Finished Length"])
            {
                
                txtF.frame=CGRectMake(col_tab2*372+150, row_tab2*40+10, 50, 30);
                txtF.text=@"0";
                txt_finished_inch = [[UITextField alloc]initWithFrame:CGRectMake(col_tab2*372+150+50, row_tab2*40+10, 50, 30)];
                //txtF.borderStyle = UITextBorderStyleRoundedRect;
                txt_finished_inch.delegate = self;
                txt_finished_inch.borderStyle = UITextBorderStyleBezel;
                txt_finished_inch.keyboardType = UIKeyboardTypeNumberPad;
                txt_finished_inch.text=@"0";
                [self.viewfortabtwo_Controlls addSubview:txt_finished_inch];
            }
            else if ([nameLbl.text isEqualToString:@"Drapery Width Coverage"]){
                
            }
            else if ([nameLbl.text isEqualToString:@"Window /Wall Height"]){
                
            }
            else if ([nameLbl.text isEqualToString:@"Total Width"]){
                
            }
            
            else
            {
                [txtF addSubview:img];
            }
            
        }
        txtF.borderStyle = UITextBorderStyleRoundedRect;
        txtF.delegate = self;
        txtF.tag =tagVal+i;
        
        
        if (i == 2) {
            txtF.text = @"1";
        }
        
        txtF.borderStyle = UITextBorderStyleBezel;
        [self.viewfortabtwo_Controlls addSubview:txtF];
        if (col_tab2 == 1)
        {
            col_tab2 = 0;
            row_tab2++;
        }
        else{
            col_tab2++;
        }
        
        if (([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 307)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 308)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 309)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 310)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 311)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 312)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 315)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 316)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 317)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 318)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 319)||([selectedTreatmentType_two isEqualToString:@"3"] && txtF.tag == 320)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
            
        }
        
        if (([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 407)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 408)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 409)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 410)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 411)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 412)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 415)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 416)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 417)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 418)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 419)||([selectedTreatmentType_two isEqualToString:@"4"] && txtF.tag == 420)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        if (([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 907)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 908)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 909)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 910)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 911)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 912)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 915)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 916)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 917)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 918)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 919)||([selectedTreatmentType_two isEqualToString:@"9"] && txtF.tag == 920)) {
            txtF.keyboardType = UIKeyboardTypeNumberPad;
        }
        
    }
    if ([labelArr_tab2 count]%2 == 0) {
        scrollFortab2.contentSize = CGSizeMake(680,20*[labelArr_tab2 count]+100);
        scrollFortab2.backgroundColor = [UIColor whiteColor];
        viewfortabtwo_Controlls.frame = CGRectMake(0, 0, 680, 20*[labelArr_tab2 count]+100);
        
    }
    else{
        scrollFortab2.contentSize = CGSizeMake(680,20*[labelArr_tab2 count]+100);
        scrollFortab2.backgroundColor = [UIColor whiteColor];
        viewfortabtwo_Controlls.frame = CGRectMake(0, 0, 680, 20*[labelArr_tab2 count]-20+100);
    }
    [scrollFortab2 setBackgroundColor:[UIColor clearColor]];
    ////NSLog(@"viewfortabtwo_Controlls.frame %f %f",viewfortabtwo_Controlls.frame.size.height,viewfortabtwo_Controlls.frame.size.width);
    ////NSLog(@"scrollFortab2.contentSize %f %f",scrollFortab2.contentSize.height,scrollFortab2.contentSize.width);
    ////NSLog(@"scrollFortab2.size %f %f",scrollFortab2.frame.size.height,scrollFortab2.frame.size.width);
    [scrollFortab2 addSubview:viewfortabtwo_Controlls];
    [self.view addSubview:scrollFortab2];
    
    if([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        CGRect frame = txtfd.frame;
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
        
        CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
        scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        self.scrollView_forsketch_tab2.frame= scrVframe;
        scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        CGRect frame = txtfd.frame;
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
        
        CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
        scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        self.scrollView_forsketch_tab2.frame= scrVframe;
        scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
        CGRect frame = txtfd.frame;
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
        
        CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
        scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        self.scrollView_forsketch_tab2.frame= scrVframe;
        scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
    }
    if ([modeValue isEqualToString:@"edit"])
    {
        secondchoose=1;
    }
    
    //added 11 march
    
    [self.scrollFortab2 addSubview:self.scrollView_forpresetsketch_tab2];
    [preset_sketchLbl_tab2 removeFromSuperview];
    preset_sketchLbl_tab2 = [[UILabel alloc] initWithFrame:CGRectMake(30, 40, 140, 30)];
    preset_sketchLbl_tab2.backgroundColor = [UIColor clearColor];
    preset_sketchLbl_tab2.text = @"Preset Sketch:";
    [self.scrollView_forpresetsketch_tab2 addSubview:preset_sketchLbl_tab2];
    scrollFortab1.hidden=YES;
    
    if(appdelObj.arr_presketch_images.count==0)
    {
        
        preset_sketchLbl.hidden=YES;
        
    }
    
    
}


-(void)rearrangeView
{
    
    
     NSLog(@"....selectedTreatmentType%@",selectedTreatmentType);
     //NSLog(@"....self.productnameTF.text%@",self.productnameTF.text);
    
    if ([self.productnameTF.text isEqualToString:@"Roller Shade"] && [selectedTreatmentType isEqualToString:@"1"]) {
        [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
        self.productnameTF.text = @"Roller Shade";
        self.productNameLbl.text = @"SHADES + BLINDS";
        scrollFortab2.hidden = YES;
        ////////NSLog(@"1a");
        
        labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Roll Type",@"Optional Features",@"Extention Bracket",@"Old Treatment",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
        [self arrangeView:1];
    }
    else if ([selectedTreatmentType isEqualToString:@"5"]){
        self.productNameLbl.text = @"SHADES + BLINDS";
        [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
        self.productnameTF.text = @"Roman Shade";
        form_oneBtn.backgroundColor = [UIColor grayColor];
        
        labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Type",@"Optional Features",@"Extention Bracket",@"Mount Type2",@"Old Treatment",@"Head Rail Size",@"Cord Type",@"TDBU",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)",@"Lining", nil];
        [self arrangeView:501];
    }
    else if ([self.productnameTF.text isEqualToString:@"Wood Blinds"]&&[selectedTreatmentType isEqualToString:@"6"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
        self.productnameTF.text = @"Wood Blinds";
        self.productNameLbl.text = @"SHADES + BLINDS";
        form_oneBtn.backgroundColor = [UIColor grayColor];
        ////////NSLog(@"woode");
        labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Tilt Type",@"Mount Type2",@"Cord Type",@"TDBU",@"Spacer Needed",@"Old Treatment",@"Control Type",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
        [self arrangeView:601];
    }
    
    else if ([selectedTreatmentType isEqualToString:@"2"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
        self.productnameTF.text = @"Woven Wood";
        self.productNameLbl.text = @"SHADES + BLINDS";
        form_oneBtn.backgroundColor = [UIColor grayColor];
        labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Type",@"Optional Features",@"Extention Bracket",@"Mount Type2",@"Old Treatment",@"Head Rail Size",@"Cord Type",@"TDBU",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)",@"Lining", nil];
        [self arrangeView:101];
    }
    else if ([selectedTreatmentType isEqualToString:@"7"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
        self.productnameTF.text = @"XL Pleat";
        self.productNameLbl.text = @"SHADES + BLINDS";
        
        form_oneBtn.backgroundColor = [UIColor grayColor];
        
        labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Optional Features",@"Mount Type2",@"Cord Type",@"TDBU",@"Extention Bracket",@"Old Treatment",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
        [self arrangeView:701];
    }
    else if ([selectedTreatmentType isEqualToString:@"8"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"1" forKey:@"formType"];
        self.productnameTF.text = @"Cellular Shade";
        self.productNameLbl.text = @"SHADES + BLINDS";
        
        form_oneBtn.backgroundColor = [UIColor grayColor];
        
        labelArr  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Control Position",@"Optional Features",@"Mount Type2",@"Cord Type",@"TDBU",@"Extention Bracket",@"Old Treatment",@"Mount Type",@"Width",@"Width(inch)",@"Height",@"Height(inch)",@"Depth",@"Depth(inch)", nil];
        [self arrangeView:701];
    }
    [self.scrollFortab1 addSubview:self.scrollView];
    ////NSLog(@"imageDataArr.count = %i and imageDataArr_edit.count = %i",imageDataArr.count, imageDataArr_edit.count);
    if(imageDataArr.count>0 || imageDataArr_edit.count>0){
        [self.scrollView addSubview:picLbl];
    }
    [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    if(sketch_imagedataArr_tab1.count>0){
        [self.scrollView_forsketch addSubview:sketchLbl];
    }
    
    //    ((UITextField *)[self.viewforControlls viewWithTag:2]).text = windowSideMarkText;;
    //    ((UITextField *)[self.viewforControlls viewWithTag:6]).text = materialText;
    //    ((UITextField *)[self.viewforControlls viewWithTag:102]).text = windowSideMarkText;;
    //    ((UITextField *)[self.viewforControlls viewWithTag:106]).text = materialText;
    //    ((UITextField *)[self.viewforControlls viewWithTag:502]).text = windowSideMarkText;;
    //    ((UITextField *)[self.viewforControlls viewWithTag:506]).text = materialText;
    //    ((UITextField *)[self.viewforControlls viewWithTag:602]).text = windowSideMarkText;;
    //    ((UITextField *)[self.viewforControlls viewWithTag:613]).text = materialText;
    //    ((UITextField *)[self.viewforControlls viewWithTag:702]).text = windowSideMarkText;;
    //    ((UITextField *)[self.viewforControlls viewWithTag:705]).text = materialText;
    
    
    
    //    ((UITextField *)[self.viewforControlls viewWithTag:11]).text = width_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:12]).text = width_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:13]).text = height_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:14]).text = height_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:15]).text = depth_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:16]).text = depth_i_form1_text;
    //
    //    ((UITextField *)[self.viewforControlls viewWithTag:115]).text = width_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:116]).text = width_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:117]).text = height_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:118]).text = height_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:119]).text = depth_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:120]).text = depth_i_form1_text;
    //
    //    ((UITextField *)[self.viewforControlls viewWithTag:613]).text = width_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:614]).text = width_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:615]).text = height_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:616]).text = height_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:617]).text = depth_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:618]).text = depth_i_form1_text;
    //
    //    ((UITextField *)[self.viewforControlls viewWithTag:713]).text = width_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:714]).text = width_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:715]).text = height_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:716]).text = height_i_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:717]).text = depth_f_form1_text;
    //    ((UITextField *)[self.viewforControlls viewWithTag:718]).text = depth_i_form1_text;
    //
    //
    //
    //    txfdleftOM.text = left_f_form1_text;
    //    txfdleftOM_inch.text = left_i_form1_text;
    //    txfdwidthOM.text = width_f_form1_text;
    //    txfdwidthOM_inch.text = width_i_form1_text;
    //    txfdrightOM.text = right_f_form1_text;
    //    txfdrightOM_inch.text = right_i_form1_text;
    //    txfdbottomOM.text = bottom_f_form1_text;
    //    txfdbottomOM_inch.text = bottom_i_form1_text;
    //    txftotalWidthOM_ft .text = total_width_f_form1_text;
    //    txftotalWidthOM_inch.text = total_width_i_form1_text;
    //
    //    txfdtopOM.text = top_f_form1_text;
    //    txfdtopOM_inch.text = top_i_form1_text;
    //    txfdheightOM.text = height_f_form1_text;
    //    txfdheightOM_inch.text = height_i_form1_text;
    //    txfdbottomOM.text = bottom_f_form1_text;
    //    txfdbottomOM_inch.text = bottom_i_form1_text;
    //    txftotalHeightOM_ft.text = total_height_f_form1_text;
    //    txftotalHeightOM_inch.text = total_height_i_form1_text;
    //
    //     //////NSLog(@"bottom_i_form1_text2=%@",bottom_i_form1_text);
}

-(void)rearrangeView_tab2{
    if ([selectedTreatmentType_two isEqualToString:@"3"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"2" forKey:@"formType"];
        self.productnameTF_tab2.text = @"XL Vertical";
        form_twoBtn.backgroundColor = [UIColor grayColor];
        //        CGRect frame = addOptionBtn.frame;
        //        frame.origin.y = 570+140;
        //        addOptionBtn.frame = frame;
        
        self.productNameLbl.text = @"Drapery + Hardware and Verticals";
        labelArr_tab2  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Pair or Single",@"Drapery Width Coverage",@"Left",@"Left(inch)",@"Width",@"Width(inch)",@"Right",@"Right(inch)",@"Total Width",@"Total Width(inch)",@"Hardware width",@"Window /Wall Height",@"Top",@"Top(inch)",@"Height",@"Height(inch)",@"Total Height",@"Total Height(inch)",@"Top Of Track",@"Top2",@"Top2(inch)",@"Height2",@"Height2(inch)",@"Top Of Track2",@"Top Of Track2(inch)",@"Bottom of crown to floor",@"Ceiling to floor",@"Mount Type",@"Cord side",@"Extention Bracket",@"Old Treatment", nil];
        [self arrangetabtwo_View:301];
    }
    else if ([selectedTreatmentType_two isEqualToString:@"4"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"2" forKey:@"formType"];
        self.productnameTF_tab2.text = @"Drapery";
        self.productNameLbl.text = @"Drapery + Hardware and Verticals";
        form_twoBtn.backgroundColor = [UIColor grayColor];
        labelArr_tab2  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Pair or Single",@"Drapery Width Coverage",@"Left",@"Left(inch)",@"Width",@"Width(inch)",@"Right",@"Right(inch)",@"Total Width",@"Total Width(inch)",@"Hardware width",@"Window /Wall Height",@"Top",@"Top(inch)",@"Height",@"Height(inch)",@"Total Height",@"Total Height(inch)",@"Top Of Pole",@"Top2",@"Top2(inch)",@"Height2",@"Height2(inch)",@"Top Of Pole2",@"Top Of Pole2(inch)",@"Bottom of crown to floor",@"Ceiling to floor",@"Finished Length",@"Mount Type",@"Functionality",@"Extention Bracket",@"Old Treatment",@"Return",@"Puddle",@"Off the floor", nil];
        [self arrangetabtwo_View:401];
    }
    else if ([selectedTreatmentType_two isEqualToString:@"9"]){
        [[NSUserDefaults standardUserDefaults]setValue:@"2" forKey:@"formType"];
        self.productnameTF_tab2.text = @"Panel Systems";
        self.productNameLbl.text = @"Drapery + Hardware and Verticals";
        form_twoBtn.backgroundColor = [UIColor grayColor];
        labelArr_tab2  = [[NSArray alloc]initWithObjects:@"Room Label",@"Window Side Mark",@"Layer",@"Material",@"Pair or Single",@"Drapery Width Coverage",@"Left",@"Left(inch)",@"Width",@"Width(inch)",@"Right",@"Right(inch)",@"Total Width",@"Total Width(inch)",@"Hardware width",@"Window /Wall Height",@"Top",@"Top(inch)",@"Height",@"Height(inch)",@"Total Height",@"Total Height(inch)",@"Top Of Track",@"Top2",@"Top2(inch)",@"Height2",@"Height2(inch)",@"Top Of Track2",@"Top Of Track2(inch)",@"Bottom of crown to floor",@"Ceiling to floor",@"Mount Type",@"System",@"Cord side",@"Extention Bracket",@"Old Treatment", nil];
        [self arrangetabtwo_View:901];
    }
    [self.scrollFortab2 addSubview:self.scrollView_tab2];
    if(imageDataArr_tab2.count>0 || imageDataArr_tab2_edit.count>0){
        [self.scrollView_tab2 addSubview:picLbl_tab2];
    }
    [self.scrollFortab2 addSubview:self.scrollView_forsketch_tab2];
    if(sketch_imagedataArr_tab2.count>0){
        [self.scrollView_forsketch_tab2 addSubview:sketchLbl_tab2];
    }
    
    UITextField *textField5 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302];
    UITextField *textField6 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402];
    UITextField *textField7 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902];
    UITextField *textField55 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306];
    UITextField *textField66 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406];
    UITextField *textField77 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906];
    textField5.text = windowSideMarkText;
    textField6.text = windowSideMarkText;
    textField7.text = windowSideMarkText;
    
    textField55.text = materialText;
    textField66.text = materialText;
    textField77.text = materialText;
    
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306]).text = pairorsingleText;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text = left_f_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text = left_i_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text = width_f_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text = width_i_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text = right_f_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text = right_i_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:313]).text = total_width_f_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:314]).text = total_width_i_text;
    //     ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:316]).text = hardware_width_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text = top_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text = top_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text = height_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text = height_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:321]).text = total_height_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:322]).text = total_height_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text = topofpole_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text = ceilingtofloor_text;
    //
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406]).text = pairorsingleText;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text = left_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text = left_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text = width_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text = width_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text = right_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text = right_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:413]).text = total_width_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:414]).text = total_width_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:416]).text = hardware_width_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text = top_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text = top_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text = height_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text = height_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:421]).text = total_height_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:422]).text = total_height_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text = topofpole_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text = ceilingtofloor_text;
    //
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906]).text = pairorsingleText;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text = left_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text = left_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text = width_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text = width_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text = right_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text = right_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text = total_width_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:914]).text = total_width_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:916]).text = hardware_width_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text = top_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text = top_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text = height_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text = height_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text = total_height_f_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:922]).text = total_height_i_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text = topofpole_text;
    //    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text = ceilingtofloor_text;
    
    
}

- (IBAction)form_onePressed:(id)sender
{
    
    
    firstselection=1;
    secondselection=0;
    
    
    textF_touch_flag_tab1 = 1;
    tab1ClickedFlag = 1;
    ////////NSLog(@"selectettform1=%@",selectedTreatmentType);
    self.productNameLbl.text = @"SHADES + BLINDS";
    form_oneBtn.backgroundColor = [UIColor grayColor];
    form_twoBtn.backgroundColor = [UIColor clearColor];
    if ([modeValue isEqualToString:@"edit"]) {
        if([arrTab1 count]>0){
        }
        //        tab1flag = 1;
    }
    self.scrollFortab1.hidden = NO;
    self.scrollFortab2.hidden = YES;
    self.scrollView.hidden = NO;
    self.scrollView_tab2.hidden = YES;
    self.viewforControlls.hidden = NO;
    //////NSLog(@"tab1flag=%i, tab1ClickedFlag = %i ",tab1flag,tab1ClickedFlag);
    
    if ([modeValue isEqualToString:@"new"] && tab1flag == 0) {
        ////////NSLog(@"tab1flag = 0");
        productnameTF.text =@"Roller Shade";
        selectedTreatmentType = @"1";
        labelArr  = nil;
        tab1flag = 1;
        [self rearrangeView];
    }
    if ([modeValue isEqualToString:@"edit"] && tab1flag !=0 && tab1ClickedFlag ==0) {
        productnameTF.text =@"Roller Shade";
        selectedTreatmentType = @"1";
        labelArr  = nil;
        tab1flag = 1;
        [self rearrangeView];
    }
    else if ([modeValue isEqualToString:@"edit"] && tab1flag ==0 ){
        productnameTF.text =@"Roller Shade";
        selectedTreatmentType = @"1";
        tab1flag = 1;
        [self rearrangeView];
    }
    
    //     tab2flag = 1;
    productnameTF_tab2.hidden = YES;
    productnameTF.hidden = NO;
    ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
    ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
    //    [self savetabtwo_Value];
    
    if ([tabone_Arr count]==0) {
        
    }
    else{
        //    [self setValues_TabOne];
    }
    if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES) {
        viewforMounttypeOM.hidden = NO;
        if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
            CGRect txfdframe = viewforMounttypeOM.frame;
            
            CGRect scr_view_forimage = self.scrollView.frame;
            scr_view_forimage.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height-20;
            self.scrollView.frame = scr_view_forimage;
            
            CGRect scrVframe = self.scrollView_forsketch.frame;
            
            
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10+120;
            self.scrollView_forsketch.frame= scrVframe;
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
        }
        [self.scrollView_forsketch setContentSize:CGSizeMake((170*indexforsketch),98)];
    }
    
    scrollFortab2.hidden = YES;
    if(viewfortabtwo_Controlls){
        viewfortabtwo_Controlls.hidden = NO;
    }
    [self.scrollFortab1 addSubview:self.scrollView];
    [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    //////NSLog(@"windowSideMarkText=%@",windowSideMarkText);
    //    UITextField *textField1 = (UITextField *)[self.viewforControlls viewWithTag:2];
    //    UITextField *textField2 = (UITextField *)[self.viewforControlls viewWithTag:102];
    //    UITextField *textField6 = (UITextField *)[self.viewforControlls viewWithTag:602];
    //    UITextField *textField7 = (UITextField *)[self.viewforControlls viewWithTag:702];
    //
    //        textField1.text = windowSideMarkText;
    //        textField2.text = windowSideMarkText;
    //        textField6.text = windowSideMarkText;
    //        textField7.text = windowSideMarkText;
    //
    //    UITextField *textField11 = (UITextField *)[self.viewforControlls viewWithTag:6];
    //    UITextField *textField22 = (UITextField *)[self.viewforControlls viewWithTag:106];
    //    UITextField *textField66 = (UITextField *)[self.viewforControlls viewWithTag:613];
    //    UITextField *textField77 = (UITextField *)[self.viewforControlls viewWithTag:705];
    //        textField11.text = materialText;
    //        textField22.text = materialText;
    //        textField66.text = materialText;
    //        textField77.text = materialText;
    
    //added 11 march
    if(appdelObj.arr_presketch_images.count>0)
    [self set_preset_scrollView];
    
    NSLog(@"scrollFortab1 content size%f",scrollFortab1.contentSize.height);
    
    if(scrollFortab1.contentSize.height<615)
    {
        scrollFortab1.contentSize=CGSizeMake(scrollFortab1.contentSize.width, 615);
    }
    
    scrollFortab1.scrollEnabled=YES;
    
}
//added 11 march
-(void)set_preset_scrollView{
    CGRect frame33 = scrollView_forpresetsketch.frame;
    frame33.origin.x = 0;
    frame33.size.width = 768;
    frame33.size.height = 111;
    scrollView_forpresetsketch.frame = frame33;
    NSLog(@"imageDataArr count.....%i",imageDataArr.count);
    
    if (imageDataArr.count ==0) {
        if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
            CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
            CGRect scrVframe = self.scrollView_forsketch.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100;
            self.scrollView_forsketch.frame= scrVframe;
            
        }
        
        if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
            CGRect txfdframe = viewforMounttypeOM.frame;
            CGRect scrVframe = self.scrollView_forsketch.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10;
            self.scrollView_forsketch.frame= scrVframe;
        }
        
    }
    if(sketch_imagedataArr_tab1.count !=0 && imageDataArr.count ==0){
        self.scrollView.hidden = YES;
        self.scrollView_forsketch.hidden = NO;
        CGRect frame1 = scrollView_forpresetsketch.frame;
        frame1.origin.y = self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height+20;
        scrollView_forpresetsketch.frame = frame1;
        
        CGRect frame = scrollView_forpresetsketch.frame;
        frame.origin.y = self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height+20;
        scrollView_forpresetsketch.frame = frame;
    }
    if(sketch_imagedataArr_tab1.count ==0 && imageDataArr.count !=0){
        self.scrollView.hidden = NO;
        self.scrollView_forsketch.hidden = YES;
        CGRect frame = scrollView_forpresetsketch.frame;
        frame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
        scrollView_forpresetsketch.frame = frame;
    }
    if(sketch_imagedataArr_tab1.count !=0 && imageDataArr.count !=0){
        self.scrollView.hidden = NO;
        self.scrollView_forsketch.hidden = NO;
        CGRect frame = scrollView_forpresetsketch.frame;
        frame.origin.y = self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height+20;
        scrollView_forpresetsketch.frame = frame;
    }
    if(sketch_imagedataArr_tab1.count ==0 && imageDataArr.count ==0){
        NSLog(@"both_zero");
        self.scrollView.hidden = YES;
        self.scrollView_forsketch.hidden = YES;
        if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
            CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
            CGRect scrVframe = self.scrollView_forpresetsketch.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100;
            self.scrollView_forpresetsketch.frame= scrVframe;
            
        }
        
        if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
            CGRect txfdframe = viewforMounttypeOM.frame;
            CGRect scrVframe = self.scrollView_forpresetsketch.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10;
            self.scrollView_forpresetsketch.frame= scrVframe;
        }
        
    }
    NSLog(@"appdelObj.arr_presketch_images.count11 %i",appdelObj.arr_presketch_images.count);
    NSLog(@"preset y cordinate%f",scrollView_forpresetsketch.frame.origin.y);
    
    
    for(UIImageView *view in self.scrollView_forpresetsketch.subviews){
        if (view.tag == 43) {
            //NSLog(@"yes tag");
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
            
        }
    }
    if (appdelObj.arr_presketch_images.count==0) {
        preset_sketchLbl.hidden = YES;
    }
    else{
        preset_sketchLbl.hidden = NO;
        for(int i=0;i<appdelObj.arr_presketch_images.count;i++){
            imgView2 = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
            imgView2.image =[UIImage imageWithData:[appdelObj.arr_presketch_images objectAtIndex:i]];
            imgView2.userInteractionEnabled = YES;
            UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
            delbtn.frame = CGRectMake(0, 0, 15, 15);
            [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
            delbtn.tag = 1001+i;
            delbtn.alpha = 1.0;
            delbtn.userInteractionEnabled = YES;
            [delbtn addTarget:self action:@selector(delete_preset_sketch_image_Tapped:) forControlEvents:UIControlEventTouchUpInside];
            [self.scrollView_forpresetsketch touchesShouldCancelInContentView:delbtn];
            [imgView2 addSubview:delbtn];
            [self.scrollView_forpresetsketch addSubview:imgView2];
        }
    }
    [self.scrollView_forpresetsketch setContentSize:CGSizeMake((170*appdelObj.arr_presketch_images.count)+150,98)];
    
    scrollFortab1.contentSize = CGSizeMake(scrollFortab1.contentSize.width, self.scrollView_forpresetsketch.frame.origin.y+self.scrollView_forpresetsketch.frame.size.height+50);
}
//added 11 march
-(void)set_preset_scrollView_tab2{
    CGRect frame33 = scrollView_forpresetsketch_tab2.frame;
    frame33.origin.x = 0;
    frame33.size.width = 768;
    frame33.size.height = 111;
    scrollView_forpresetsketch_tab2.frame = frame33;
    
    
    if (imageDataArr_tab2.count ==0) {
        UIButton *txtfd;
        if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
            
            
        }
        CGRect imageScrollFrame = self.scrollView_forsketch_tab2.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
        
        self.scrollView_forsketch_tab2.frame = imageScrollFrame;
    }
    else{
        UIButton *txtfd;
        if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
            
            
        }
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
        
        self.scrollView_tab2.frame = imageScrollFrame;
        
    }
    
    
    if(sketch_imagedataArr_tab2.count !=0 && imageDataArr_tab2.count ==0){
        self.scrollView_tab2.hidden = YES;
        self.scrollView_forsketch_tab2.hidden = NO;
        CGRect frame = scrollView_forpresetsketch_tab2.frame;
        frame.origin.y = self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height+20;
        
        scrollView_forpresetsketch_tab2.frame = frame;
    }
    if(sketch_imagedataArr_tab2.count ==0 && imageDataArr_tab2.count !=0){
        self.scrollView_tab2.hidden = NO;
        self.scrollView_forsketch_tab2.hidden = YES;
        CGRect frame = scrollView_forpresetsketch_tab2.frame;
        frame.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        
        scrollView_forpresetsketch_tab2.frame = frame;
    }
    if(sketch_imagedataArr_tab2.count !=0 && imageDataArr_tab2.count !=0){
        self.scrollView_tab2.hidden = NO;
        self.scrollView_forsketch_tab2.hidden = NO;
        
        CGRect frame = scrollView_forsketch_tab2.frame;
        frame.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        scrollView_forsketch_tab2.frame = frame;
        
        CGRect frame2 = scrollView_forpresetsketch_tab2.frame;
        frame2.origin.y = self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height+20;
        scrollView_forpresetsketch_tab2.frame = frame2;
    }
    if(sketch_imagedataArr_tab2.count ==0 && imageDataArr_tab2.count ==0){
        NSLog(@"both_zero");
        self.scrollView_tab2.hidden = YES;
        self.scrollView_forsketch_tab2.hidden = YES;
        UIButton *txtfd;
        if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
            txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
            
            
        }
        CGRect imageScrollFrame = self.scrollView_forpresetsketch_tab2.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
        
        self.scrollView_forpresetsketch_tab2.frame = imageScrollFrame;
    }
    NSLog(@"appdelObj.arr_presketch_images_tab2.count %i",appdelObj.arr_presketch_images_tab2.count);
    for(UIImageView *view in self.scrollView_forpresetsketch_tab2.subviews){
        if (view.tag == 43) {
            //NSLog(@"yes tag");
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
            
        }
    }
    if (appdelObj.arr_presketch_images_tab2.count==0) {
        preset_sketchLbl_tab2.hidden = YES;
    }
    else{
        preset_sketchLbl_tab2.hidden = NO;
        for(int i=0;i<appdelObj.arr_presketch_images_tab2.count;i++){
            imgView2 = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
            imgView2.image =[UIImage imageWithData:[appdelObj.arr_presketch_images_tab2 objectAtIndex:i]];
            imgView2.userInteractionEnabled = YES;
            UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
            delbtn.frame = CGRectMake(0, 0, 15, 15);
            [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
            delbtn.tag = 2001+i;
            delbtn.alpha = 1.0;
            delbtn.userInteractionEnabled = YES;
            [delbtn addTarget:self action:@selector(delete_preset_sketch_image_Tapped_tab2:) forControlEvents:UIControlEventTouchUpInside];
            [self.scrollView_forpresetsketch_tab2 touchesShouldCancelInContentView:delbtn];
            [imgView2 addSubview:delbtn];
            [self.scrollView_forpresetsketch_tab2 addSubview:imgView2];
            [self.scrollView_forpresetsketch_tab2 setUserInteractionEnabled:YES];
            [self.scrollView_forpresetsketch_tab2 setContentSize:CGSizeMake((170*appdelObj.arr_presketch_images_tab2.count)+150,98)];

        }
            }
   
    scrollFortab2.contentSize = CGSizeMake(scrollFortab2.contentSize.width, self.scrollView_forpresetsketch_tab2.frame.origin.y+self.scrollView_forpresetsketch_tab2.frame.size.height+50);
}

-(void)form_twoPressed
{
    
    firstselection=0;
    secondselection=1;
    textF_touch_flag_tab2 = 1;
    tab2ClickedFlag = 1;
    ////////NSLog(@"selectett=%@",selectedTreatmentType);
    self.productNameLbl.text = @"Drapery + Hardware and Verticals";
    form_twoBtn.backgroundColor = [UIColor grayColor];
    form_oneBtn.backgroundColor = [UIColor clearColor];
    
    self.scrollFortab1.hidden = YES;
    self.scrollView.hidden = YES;
    self.scrollFortab2.hidden = NO;
    self.scrollView_tab2.hidden = NO;
    ////NSLog(@"tab2flag=%i, tab2ClickedFlag = %i,tab1flag=%i, tab1ClickedFlag = %i ",tab2flag,tab2ClickedFlag,tab1flag,tab1ClickedFlag);
    //////NSLog(@"modevalue == %@",modeValue);
    if (tab2flag == 0) {
        //        productnameTF_tab2.text =@"XL Vertical";
        
        labelArr_tab2  = nil;
        if ([modeValue isEqualToString:@"new"] && tab2ClickedFlag == 0) {
            selectedTreatmentType_two = @"3";
            tab2flag = 1;
            [self rearrangeView_tab2];
        }
        if ([modeValue isEqualToString:@"new"] && tab2ClickedFlag == 1) {
            selectedTreatmentType_two = @"3";
            tab2flag = 1;
            [self rearrangeView_tab2];
        }
        if([modeValue isEqualToString:@"edit"]   && tab2ClickedFlag == 0){
            selectedTreatmentType_two = @"3";
            tab2flag = 1;
            [self rearrangeView_tab2];
        }
        else if([modeValue isEqualToString:@"edit"]   && tab2ClickedFlag == 1){
            selectedTreatmentType_two = @"3";
            tab2flag = 1;
            [self rearrangeView_tab2];
        }
    }
    if ([modeValue isEqualToString:@"edit"] && tab2flag == 0 && tab2ClickedFlag == 1){
        
        tab2flag = 1;
        
    }
    productnameTF_tab2.hidden = NO;
    productnameTF.hidden = YES;
    ((UITextField *)[self.view viewWithTag:1040]).hidden = YES;
    ((UITextField *)[self.view viewWithTag:1041]).hidden = NO;
    
    if ([tabtwo_Arr count]==0) {
        
    }
    else{
        
    }
    if(viewforControlls){
        viewforControlls.hidden = YES;
    }
    if (viewforMounttypeOM) {
        viewforMounttypeOM.hidden = YES;
    }
//    [self setValues_TabTwo_forEdit];
    [self.scrollFortab2 addSubview:self.scrollView_tab2];
    [self.scrollFortab2 addSubview:self.scrollView_forsketch_tab2];
    [self set_scrollview_forsketch];
    
    
    
    UITextField *textField5 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302];
    UITextField *textField6 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402];
    UITextField *textField7 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902];
    UITextField *textField55 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306];
    UITextField *textField66 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406];
    UITextField *textField77 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906];
    
    if([modeValue isEqualToString:@"new"])
    {
        
        
        textField5.text = windowSideMarkText;
        textField6.text = windowSideMarkText;
        textField7.text = windowSideMarkText;
        
        textField55.text = materialText;
        textField66.text = materialText;
        textField77.text = materialText;
        
        
    }
    
    
    //added 11 march
    [self set_preset_scrollView_tab2];
    
    
    
    
}

- (IBAction)form_twoPressed:(id)sender{
    [self form_twoPressed];
    
}

- (IBAction)infobtnPressed:(id)sender{
    AboutViewController *about = [self.storyboard instantiateViewControllerWithIdentifier:@"abt"];
    [self presentViewController:about animated:YES completion:nil];
}

-(void)savetabone_Values{
    
    if (productnameTF.text.length == 0) {
        
    }
    else{
        product_namefor_tab1 = productnameTF.text;
    }
    if ([productnameTF.text isEqualToString:@"Roller Shade"]) {
        tabone_Arr = [[NSMutableArray alloc]init];
        for(int i=0;i<[labelArr count];i++){
            if (((UITextField *)[self.viewforControlls viewWithTag:i+1]).text.length == 0) {
                [tabone_Arr addObject:@""];
                
            }
            else{
                [tabone_Arr addObject:((UITextField *)[self.viewforControlls viewWithTag:i+1]).text];
            }
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Roman Shade"]){
        tabone_Arr = [[NSMutableArray alloc]init];
        for(int i=0;i<[labelArr count];i++){
            if (((UITextField *)[self.viewforControlls viewWithTag:i+101]).text.length == 0) {
                [tabone_Arr addObject:@""];
            }
            else{
                [tabone_Arr addObject:((UITextField *)[self.viewforControlls viewWithTag:i+101]).text];
            }
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Wood Blinds"]){
        tabone_Arr = [[NSMutableArray alloc]init];
        for(int i=0;i<[labelArr count];i++){
            if (((UITextField *)[self.viewforControlls viewWithTag:i+601]).text.length == 0) {
                [tabone_Arr addObject:@""];
            }
            else{
                [tabone_Arr addObject:((UITextField *)[self.viewforControlls viewWithTag:i+601]).text];
            }
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"XL Pleat"]){
        tabone_Arr = [[NSMutableArray alloc]init];
        for(int i=0;i<[labelArr count];i++){
            
            if (((UITextField *)[self.viewforControlls viewWithTag:i+701]).text.length == 0) {
                [tabone_Arr addObject:@""];
            }
            else{
                [tabone_Arr addObject:((UITextField *)[self.viewforControlls viewWithTag:i+701]).text];
            }
        }
        
        
    }
    else if ([productnameTF.text isEqualToString:@"Cellular Shade"]){
        tabone_Arr = [[NSMutableArray alloc]init];
        for(int i=0;i<[labelArr count];i++){
            if (((UITextField *)[self.viewforControlls viewWithTag:i+701]).text.length == 0) {
                [tabone_Arr addObject:@""];
            }
            else{
                [tabone_Arr addObject:((UITextField *)[self.viewforControlls viewWithTag:i+701]).text];
            }
        }
        
    }
}

-(void)savetabtwo_Value{
    //    //////NSLog(@"%i",[labelArr_tab2 count]);
    if ([productnameTF_tab2.text isEqualToString:@"Drapery"]){
        tabtwo_Arr = [[NSMutableArray alloc]init];
        for(int i=0;i<[labelArr_tab2 count];i++){
            
            if (((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+401]).text.length == 0) {
                [tabtwo_Arr addObject:@""];
            }
            else{
                [tabtwo_Arr addObject:((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+401]).text];
            }
        }
        
        
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]){
        for(int i=0;i<[labelArr_tab2 count];i++){
            if (((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+901]).text.length == 0) {
                [tabtwo_Arr addObject:@""];
            }
            else{
                [tabtwo_Arr addObject:((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+901]).text];
            }
        }
        
    }
    else if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
        for(int i=0;i<[labelArr_tab2 count];i++){
            if (((UITextField *)[self.view viewWithTag:i+301]).text.length == 0) {
                [tabtwo_Arr addObject:@""];
                
            }
            else{
                [tabtwo_Arr addObject:((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+301]).text];
            }
            
        }
    }
    
}

-(void)setValues_TabOne{
    
    if ([productnameTF.text isEqualToString:@"Roller Shade"]) {
        ((UITextField *)[self.viewforControlls viewWithTag:2]).text =windowSideMarkText;
        ((UITextField *)[self.viewforControlls viewWithTag:600]).text =materialText;
        ((UITextField *)[self.viewforControlls viewWithTag:11]).text =width_f_form1_text;
        ((UITextField *)[self.viewforControlls viewWithTag:12]).text =width_i_form1_text;
        ((UITextField *)[self.viewforControlls viewWithTag:13]).text =height_f_form1_text;
        ((UITextField *)[self.viewforControlls viewWithTag:14]).text =height_i_form1_text;
        ((UITextField *)[self.viewforControlls viewWithTag:15]).text =depth_f_form1_text;
        ((UITextField *)[self.viewforControlls viewWithTag:16]).text =depth_i_form1_text;
        
        
    }
}

-(void)setValues_TabTwo
{
    if ([productnameTF_tab2.text isEqualToString:@"Drapery"]){
        for(int i=0;i<[tabtwo_Arr count];i++){
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+401]).text = [tabtwo_Arr objectAtIndex:i];
        }
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]){
        for(int i=0;i<[tabtwo_Arr count];i++){
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+901]).text = [tabtwo_Arr objectAtIndex:i];
        }
    }
    else if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
        for(int i=0;i<[tabtwo_Arr count];i++){
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i+301]).text = [tabtwo_Arr objectAtIndex:i];
        }
    }
    
    [self.scrollFortab2 addSubview:self.scrollView_tab2];
}

-(void)setValues_TabOne_forEdit
{
    
    
    
    //////NSLog(@"match data equals empty nsdata? %@",[sketchImageData_tab1 length] == 0 ? @"YES" : @"NO");
    if ([sketch_imagedataArr_tab1 count] == 0)
    {
        
    }
    else
    {
        //        //////NSLog(@"sketchImageData_tab1=%@",sketchImageData_tab1);
        [self set_sketchImage_tab1];
    }
    
    if ([leadMeasObj.mountType isEqualToString:@""]) {
        leadMeasObj.mountType = @"IM";
    }
    if([leadMeasObj.quantity length]==0||[leadMeasObj.quantity isEqualToString:@"(null)"])
    {
        leadMeasObj.quantity=@"1";
    }
    ((UITextField *)[self.view viewWithTag:1041]).hidden = YES;
    ((UITextField *)[self.view viewWithTag:1040]).hidden = NO;
    ((UITextField *)[self.view viewWithTag:1040]).text = leadMeasObj.quantity;
    
    if ([productnameTF.text isEqualToString:@"Roller Shade"]) {
        if ([leadMeasObj.controlPosition isEqualToString:@"L"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else if ([leadMeasObj.controlPosition isEqualToString:@"R"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        if ([leadMeasObj.rollType isEqualToString:@"REG"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:6]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:56]).selected = NO;
        }
        else if ([leadMeasObj.rollType isEqualToString:@"REV"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:56]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:6]).selected = NO;
        }
        if ([leadMeasObj.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else if ([leadMeasObj.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        if ([leadMeasObj.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = NO;
        }
        else if ([leadMeasObj.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = NO;
        }
        if ([leadMeasObj.mountType isEqualToString:@"IM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = NO;
        }
        else if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = NO;
        }
        //////NSLog(@"widnowsidemark = %@, material = %@",leadMeasObj.windowSidemark,leadMeasObj.material);
        
        
        NSLog(@".....leadMeasObj.winTitle%@",leadMeasObj.winTitle);
        
        if([leadMeasObj.roomLabel isEqualToString:@"OTHER"])
        {
            if([leadMeasObj.winTitle length]==0||[leadMeasObj.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewforControlls viewWithTag:1]).text = leadMeasObj.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewforControlls viewWithTag:1]).text = [NSString stringWithFormat:@"%@",leadMeasObj.winTitle];
            }
            
        }
        else
        {
            ((UITextField *)[self.viewforControlls viewWithTag:1]).text =leadMeasObj.roomLabel;
        }
        
        //((UITextField *)[self.viewforControlls viewWithTag:1]).text =leadMeasObj.roomLabel;
        ((UITextField *)[self.viewforControlls viewWithTag:2]).text =leadMeasObj.windowSidemark;
        ((UITextField *)[self.viewforControlls viewWithTag:3]).text =leadMeasObj.laye;
        ((UITextField *)[self.viewforControlls viewWithTag:600]).text =leadMeasObj.material;
        
        ((UITextField *)[self.viewforControlls viewWithTag:11]).text =leadMeasObj.widthFt;
        if ([leadMeasObj.widthInch isEqualToString:@"2/8"]) {
            leadMeasObj.widthInch = @"1/4";
        }
        if ([leadMeasObj.widthInch isEqualToString:@"4/8"]||[leadMeasObj.widthInch isEqualToString:@"2/4"]) {
            leadMeasObj.widthInch = @"1/2";
        }
        if ([leadMeasObj.widthInch isEqualToString:@"6/8"]) {
            leadMeasObj.widthInch = @"3/4";
        }

        ((UITextField *)[self.viewforControlls viewWithTag:12]).text =leadMeasObj.widthInch;
        ((UITextField *)[self.viewforControlls viewWithTag:13]).text =leadMeasObj.heightFt;
        if ([leadMeasObj.heightInch isEqualToString:@"2/8"]) {
            leadMeasObj.heightInch = @"1/4";
        }
        if ([leadMeasObj.heightInch isEqualToString:@"4/8"]||[leadMeasObj.heightInch isEqualToString:@"2/4"]) {
            leadMeasObj.heightInch = @"1/2";
        }
        if ([leadMeasObj.heightInch isEqualToString:@"6/8"]) {
            leadMeasObj.heightInch = @"3/4";
        }
        ((UITextField *)[self.viewforControlls viewWithTag:14]).text =leadMeasObj.heightInch;
        ((UITextField *)[self.viewforControlls viewWithTag:15]).text =leadMeasObj.depthFt;
        if ([leadMeasObj.depthInch isEqualToString:@"2/8"]) {
            leadMeasObj.depthInch = @"1/4";
        }
        if ([leadMeasObj.depthInch isEqualToString:@"4/8"]||[leadMeasObj.depthInch isEqualToString:@"2/4"]) {
            leadMeasObj.depthInch = @"1/2";
        }
        if ([leadMeasObj.depthInch isEqualToString:@"6/8"]) {
            leadMeasObj.depthInch = @"3/4";
        }
        ((UITextField *)[self.viewforControlls viewWithTag:16]).text =leadMeasObj.depthInch;
        installation_note_text = leadMeasObj.installationNote;
        noteText = leadMeasObj.notes;
        
        //////NSLog(@"widnowsidemark = %@, material = %@", ((UITextField *)[self.viewforControlls viewWithTag:2]).text, ((UITextField *)[self.viewforControlls viewWithTag:4]).text);
        if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            txfdwidthOM.text =leadMeasObj.widthFt ;
            txfdwidthOM_inch.text = leadMeasObj.widthInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch;
            txfdleftOM.text = leadMeasObj.leftFt;
            txfdleftOM_inch.text = leadMeasObj.leftInch;
            txfdwidthOM.text = leadMeasObj.widthFt;
            txfdwidthOM_inch.text = leadMeasObj.widthInch ;
            txfdrightOM.text = leadMeasObj.rightFt;
            txfdrightOM_inch.text =leadMeasObj.rightInch;
            txfdbracketOM.text = leadMeasObj.bracketFt;
            txfdbracketOM_inch.text = leadMeasObj.bracketInch;
            txfdtopOM.text =  leadMeasObj.topFt ;
            txfdtopOM_inch.text = leadMeasObj.topInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch ;
            txfdbottomOM.text = leadMeasObj.bottomFt;
            txfdbottomOM_inch.text = leadMeasObj.bottomInch;
            viewforMounttypeOM.hidden = NO;
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:16];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Roman Shade"])
    {
        
        
        if([leadMeasObj.lining isEqualToString:@"U"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:1013]).selected = YES;
        }
        else if ([leadMeasObj.lining isEqualToString:@"P"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:1014]).selected = YES;
        }
        else if ([leadMeasObj.lining isEqualToString:@"B"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:1015]).selected = YES;
        }
        //////NSLog(@"romanshade");
        //////NSLog(@"leadMeasObj==%@",leadMeasObj);
        if ([leadMeasObj.controlPosition isEqualToString:@"L"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else if ([leadMeasObj.controlPosition isEqualToString:@"R"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        if ([leadMeasObj.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else if ([leadMeasObj.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        if ([leadMeasObj.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = NO;
            
        }
        else if ([leadMeasObj.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = NO;
        }
        if ([leadMeasObj.mountType isEqualToString:@"IM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = NO;
        }
        else if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = NO;
        }
        
        if ([leadMeasObj.tdbu isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = NO;
        }
        else if ([leadMeasObj.tdbu isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = NO;
        }
        
        if ([leadMeasObj.mountType2 isEqualToString:@"W"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = NO;
        }
        else if ([leadMeasObj.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = NO;
        }
        if ([leadMeasObj.type isEqualToString:@"S"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:11]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:61]).selected = NO;
        }
        else if ([leadMeasObj.type isEqualToString:@"WF"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:61]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:11]).selected = NO;
        }
        if ([leadMeasObj.cordType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = NO;
        }
        else if ([leadMeasObj.cordType isEqualToString:@"CL"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = NO;
        }
        
        if ([leadMeasObj.headrailSize isEqualToString:@"0.75"]) {
            leadMeasObj.headrailSize = @"3/4";
        }
        else if ([leadMeasObj.headrailSize isEqualToString:@"1.75"]) {
            leadMeasObj.headrailSize = @"1 3/4";
        }
        else if ([leadMeasObj.headrailSize isEqualToString:@"2.50"]) {
            leadMeasObj.headrailSize = @"2 1/2";
        }
        
        if ([leadMeasObj.windowSidemark isEqualToString:@"(null)"]) {
            leadMeasObj.windowSidemark = @"";
        }
        if ([leadMeasObj.material isEqualToString:@"(null)"]) {
            leadMeasObj.material = @"";
        }
        
        if([leadMeasObj.roomLabel isEqualToString:@"OTHER"])
        {
            if([leadMeasObj.winTitle length]==0||[leadMeasObj.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewforControlls viewWithTag:501]).text = leadMeasObj.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewforControlls viewWithTag:501]).text = [NSString stringWithFormat:@"%@",leadMeasObj.winTitle];
            }
            
        }
        else
        {
            ((UITextField *)[self.viewforControlls viewWithTag:501]).text =leadMeasObj.roomLabel;
        }
        
        //((UITextField *)[self.viewforControlls viewWithTag:501]).text =leadMeasObj.roomLabel;
        ((UITextField *)[self.viewforControlls viewWithTag:502]).text =leadMeasObj.windowSidemark;
        ((UITextField *)[self.viewforControlls viewWithTag:503]).text =leadMeasObj.laye;
        ((UITextField *)[self.viewforControlls viewWithTag:506]).text =leadMeasObj.material;
        ((UITextField *)[self.viewforControlls viewWithTag:514]).text =leadMeasObj.headrailSize;
        ((UITextField *)[self.viewforControlls viewWithTag:515]).text =leadMeasObj.widthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:516]).text =leadMeasObj.widthInch;
        ((UITextField *)[self.viewforControlls viewWithTag:517]).text =leadMeasObj.heightFt;
        ((UITextField *)[self.viewforControlls viewWithTag:518]).text =leadMeasObj.heightInch;
        ((UITextField *)[self.viewforControlls viewWithTag:519]).text =leadMeasObj.depthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:521]).text =leadMeasObj.depthInch;
        installation_note_text = leadMeasObj.installationNote;
        noteText = leadMeasObj.notes;
        
        if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            txfdwidthOM.text =leadMeasObj.widthFt ;
            txfdwidthOM_inch.text = leadMeasObj.widthInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch;
            txfdleftOM.text = leadMeasObj.leftFt;
            txfdleftOM_inch.text = leadMeasObj.leftInch;
            txfdwidthOM.text = leadMeasObj.widthFt;
            txfdwidthOM_inch.text = leadMeasObj.widthInch ;
            txfdrightOM.text = leadMeasObj.rightFt;
            txfdrightOM_inch.text =leadMeasObj.rightInch;
            txfdbracketOM.text = leadMeasObj.bracketFt;
            txfdbracketOM_inch.text = leadMeasObj.bracketInch;
            txfdtopOM.text =  leadMeasObj.topFt ;
            txfdtopOM_inch.text = leadMeasObj.topInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch ;
            txfdbottomOM.text = leadMeasObj.bottomFt;
            txfdbottomOM_inch.text = leadMeasObj.bottomInch;
            viewforMounttypeOM.hidden = NO;
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:521];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Woven Wood"])
    {
      
        
         //NSLog(@"lining....%@",leadMeasObj.lining);
         //NSLog(@"leadMeasObj.headrailSize....%@",leadMeasObj.headrailSize);
        
        if([leadMeasObj.lining isEqualToString:@"U"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:1013]).selected = YES;
        }
        else if ([leadMeasObj.lining isEqualToString:@"P"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:1014]).selected = YES;
        }
        else if ([leadMeasObj.lining isEqualToString:@"B"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:1015]).selected = YES;
        }
        
        
        if ([leadMeasObj.controlPosition isEqualToString:@"L"])
        {
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else if ([leadMeasObj.controlPosition isEqualToString:@"R"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        if ([leadMeasObj.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else if ([leadMeasObj.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        if ([leadMeasObj.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = NO;
            
        }
        else if ([leadMeasObj.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = NO;
        }
        if ([leadMeasObj.mountType isEqualToString:@"IM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = NO;
        }
        else if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = NO;
        }
        
        if ([leadMeasObj.tdbu isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = NO;
        }
        else if ([leadMeasObj.tdbu isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = NO;
        }
        
        if ([leadMeasObj.mountType2 isEqualToString:@"W"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = NO;
        }
        else if ([leadMeasObj.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = NO;
        }
        if ([leadMeasObj.type isEqualToString:@"S"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:11]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:61]).selected = NO;
        }
        else if ([leadMeasObj.type isEqualToString:@"WF"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:61]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:11]).selected = NO;
        }
        if ([leadMeasObj.cordType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = NO;
        }
        else if ([leadMeasObj.cordType isEqualToString:@"CL"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = NO;
        }
        if ([leadMeasObj.windowSidemark isEqualToString:@"(null)"]) {
            leadMeasObj.windowSidemark = @"";
        }
        if ([leadMeasObj.material isEqualToString:@"(null)"]) {
            leadMeasObj.material = @"";
        }
        
        if([leadMeasObj.roomLabel isEqualToString:@"OTHER"])
        {
            
            if([leadMeasObj.winTitle length]==0||[leadMeasObj.winTitle isEqualToString:@"(null)"])
            {
                
                
                ((UITextField *)[self.viewforControlls viewWithTag:101]).text = leadMeasObj.roomLabel;
                
            }
            else
            {
                
                ((UITextField *)[self.viewforControlls viewWithTag:101]).text = [NSString stringWithFormat:@"%@",leadMeasObj.winTitle];
            }
            
            
        }
        
        else
        {
            ((UITextField *)[self.viewforControlls viewWithTag:101]).text =leadMeasObj.roomLabel;
        }
        
      //  ((UITextField *)[self.viewforControlls viewWithTag:101]).text =leadMeasObj.roomLabel;
        
        ((UITextField *)[self.viewforControlls viewWithTag:102]).text =leadMeasObj.windowSidemark;
        ((UITextField *)[self.viewforControlls viewWithTag:103]).text =leadMeasObj.laye;
        ((UITextField *)[self.viewforControlls viewWithTag:106]).text =leadMeasObj.material;
        ((UITextField *)[self.viewforControlls viewWithTag:115]).text =leadMeasObj.widthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:116]).text =leadMeasObj.widthInch;
        ((UITextField *)[self.viewforControlls viewWithTag:117]).text =leadMeasObj.heightFt;
        ((UITextField *)[self.viewforControlls viewWithTag:118]).text =leadMeasObj.heightInch;
        ((UITextField *)[self.viewforControlls viewWithTag:119]).text =leadMeasObj.depthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:121]).text =leadMeasObj.depthInch;
        if ([leadMeasObj.headrailSize isEqualToString:@"0.75"]) {
            leadMeasObj.headrailSize = @"3/4";
        }
        else if ([leadMeasObj.headrailSize isEqualToString:@"1.75"]) {
            leadMeasObj.headrailSize = @"1 3/4";
        }
        else if ([leadMeasObj.headrailSize isEqualToString:@"2.50"]) {
            leadMeasObj.headrailSize = @"2 1/2";
        }
        
        if ([leadMeasObj.windowSidemark isEqualToString:@"(null)"]) {
            leadMeasObj.windowSidemark = @"";
        }
        if ([leadMeasObj.material isEqualToString:@"(null)"]) {
            leadMeasObj.material = @"";
        }
       
        ((UITextField *)[self.viewforControlls viewWithTag:114]).text =leadMeasObj.headrailSize;
        
        installation_note_text = leadMeasObj.installationNote;
        noteText = leadMeasObj.notes;
        
        if ([leadMeasObj.mountType isEqualToString:@"OM"])
        {
            txfdwidthOM.text =leadMeasObj.widthFt ;
            txfdwidthOM_inch.text = leadMeasObj.widthInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch;
            txfdleftOM.text = leadMeasObj.leftFt;
            txfdleftOM_inch.text = leadMeasObj.leftInch;
            txfdwidthOM.text = leadMeasObj.widthFt;
            txfdwidthOM_inch.text = leadMeasObj.widthInch ;
            txfdrightOM.text = leadMeasObj.rightFt;
            txfdrightOM_inch.text =leadMeasObj.rightInch;
            txfdbracketOM.text = leadMeasObj.bracketFt;
            txfdbracketOM_inch.text = leadMeasObj.bracketInch;
            txfdtopOM.text =  leadMeasObj.topFt ;
            txfdtopOM_inch.text = leadMeasObj.topInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch ;
            txfdbottomOM.text = leadMeasObj.bottomFt;
            txfdbottomOM_inch.text = leadMeasObj.bottomInch;
            viewforMounttypeOM.hidden = NO;
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:121];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Wood Blinds"]){
        
        
        if ([leadMeasObj.controlPosition isEqualToString:@"L"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else if ([leadMeasObj.controlPosition isEqualToString:@"R"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        
        if ([leadMeasObj.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else if ([leadMeasObj.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        if ([leadMeasObj.spacerNeeded isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:16]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:66]).selected = NO;
        }
        else if ([leadMeasObj.spacerNeeded isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:66]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:16]).selected = NO;
        }
        if ([leadMeasObj.mountType isEqualToString:@"IM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = NO;
        }
        else if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = NO;
        }
        if ([leadMeasObj.cordType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = NO;
        }
        else if ([leadMeasObj.cordType isEqualToString:@"CL"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = NO;
        }
        if ([leadMeasObj.mountType2 isEqualToString:@"W"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = NO;
        }
        else if ([leadMeasObj.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = NO;
        }
        if ([leadMeasObj.tdbu isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = NO;
        }
        else if ([leadMeasObj.tdbu isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = NO;
        }
        if ([leadMeasObj.tiltType isEqualToString:@"W"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:15]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:65]).selected = NO;
        }
        else if ([leadMeasObj.tiltType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:65]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:15]).selected = NO;
        }
        if ([leadMeasObj.controlType isEqualToString:@"S"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:17]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:67]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:68]).selected = NO;
        }
        else if ([leadMeasObj.controlType isEqualToString:@"BOTHL"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:67]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:17]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:68]).selected = NO;
        }
        else if ([leadMeasObj.controlType isEqualToString:@"BOTHR"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:68]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:17]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:67]).selected = NO;
        }
        
        if([leadMeasObj.roomLabel isEqualToString:@"OTHER"])
        {
            if([leadMeasObj.winTitle length]==0||[leadMeasObj.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewforControlls viewWithTag:601]).text = leadMeasObj.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewforControlls viewWithTag:601]).text = [NSString stringWithFormat:@"%@",leadMeasObj.winTitle];
            }
            
        }
        else
        {
            ((UITextField *)[self.viewforControlls viewWithTag:601]).text =leadMeasObj.roomLabel;
        }
        
       // ((UITextField *)[self.viewforControlls viewWithTag:601]).text =leadMeasObj.roomLabel;
        ((UITextField *)[self.viewforControlls viewWithTag:602]).text =leadMeasObj.windowSidemark;
        ((UITextField *)[self.viewforControlls viewWithTag:603]).text =leadMeasObj.laye;
        ((UITextField *)[self.viewforControlls viewWithTag:613]).text =leadMeasObj.material;
        
        ((UITextField *)[self.viewforControlls viewWithTag:614]).text =leadMeasObj.widthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:615]).text =leadMeasObj.widthInch;
        ((UITextField *)[self.viewforControlls viewWithTag:616]).text =leadMeasObj.heightFt;
        ((UITextField *)[self.viewforControlls viewWithTag:617]).text =leadMeasObj.heightInch;
        ((UITextField *)[self.viewforControlls viewWithTag:618]).text =leadMeasObj.depthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:619]).text =leadMeasObj.depthInch;
        installation_note_text = leadMeasObj.installationNote;
        noteText = leadMeasObj.notes;
        
        if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            //////NSLog(@"ommmm = %@",leadMeasObj.mountType);
            txfdwidthOM.text =leadMeasObj.widthFt ;
            txfdwidthOM_inch.text = leadMeasObj.widthInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch;
            txfdleftOM.text = leadMeasObj.leftFt;
            txfdleftOM_inch.text = leadMeasObj.leftInch;
            txfdwidthOM.text = leadMeasObj.widthFt;
            txfdwidthOM_inch.text = leadMeasObj.widthInch ;
            txfdrightOM.text = leadMeasObj.rightFt;
            txfdrightOM_inch.text =leadMeasObj.rightInch;
            txfdbracketOM.text = leadMeasObj.bracketFt;
            txfdbracketOM_inch.text = leadMeasObj.bracketInch;
            txfdtopOM.text =  leadMeasObj.topFt ;
            txfdtopOM_inch.text = leadMeasObj.topInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch ;
            txfdbottomOM.text = leadMeasObj.bottomFt;
            txfdbottomOM_inch.text = leadMeasObj.bottomInch;
            viewforMounttypeOM.hidden = NO;
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:618];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"XL Pleat"]){
        if ([leadMeasObj.controlPosition isEqualToString:@"L"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else if ([leadMeasObj.controlPosition isEqualToString:@"R"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        if ([leadMeasObj.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else if ([leadMeasObj.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        if ([leadMeasObj.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = NO;
        }
        else if ([leadMeasObj.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = NO;
        }
        
        if ([leadMeasObj.tdbu isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = NO;
        }
        else if([leadMeasObj.tdbu isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = NO;
        }
        if ([leadMeasObj.mountType isEqualToString:@"IM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = NO;
        }
        else if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = NO;
        }
        
        if ([leadMeasObj.mountType2 isEqualToString:@"W"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = NO;
        }
        else if ([leadMeasObj.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = NO;
        }
        if ([leadMeasObj.cordType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = NO;
        }
        else if ([leadMeasObj.cordType isEqualToString:@"CL"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = NO;
        }
        
        
        if([leadMeasObj.roomLabel isEqualToString:@"OTHER"])
        {
            if([leadMeasObj.winTitle length]==0||[leadMeasObj.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewforControlls viewWithTag:701]).text = leadMeasObj.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewforControlls viewWithTag:701]).text = [NSString stringWithFormat:@"%@",leadMeasObj.winTitle];
            }
            
        }
        else
        {
            ((UITextField *)[self.viewforControlls viewWithTag:701]).text =leadMeasObj.roomLabel;
        }
        
        //((UITextField *)[self.viewforControlls viewWithTag:701]).text =leadMeasObj.roomLabel;
        ((UITextField *)[self.viewforControlls viewWithTag:702]).text =leadMeasObj.windowSidemark;
        ((UITextField *)[self.viewforControlls viewWithTag:703]).text =leadMeasObj.laye;
        ((UITextField *)[self.viewforControlls viewWithTag:705]).text =leadMeasObj.material;
        
        ((UITextField *)[self.viewforControlls viewWithTag:713]).text =leadMeasObj.widthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:714]).text =leadMeasObj.widthInch;
        ((UITextField *)[self.viewforControlls viewWithTag:715]).text =leadMeasObj.heightFt;
        ((UITextField *)[self.viewforControlls viewWithTag:716]).text =leadMeasObj.heightInch;
        ((UITextField *)[self.viewforControlls viewWithTag:717]).text =leadMeasObj.depthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:718]).text =leadMeasObj.depthInch;
        installation_note_text = leadMeasObj.installationNote;
        noteText = leadMeasObj.notes;
        if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            txfdwidthOM.text =leadMeasObj.widthFt ;
            txfdwidthOM_inch.text = leadMeasObj.widthInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch;
            txfdleftOM.text = leadMeasObj.leftFt;
            txfdleftOM_inch.text = leadMeasObj.leftInch;
            txfdwidthOM.text = leadMeasObj.widthFt;
            txfdwidthOM_inch.text = leadMeasObj.widthInch ;
            txfdrightOM.text = leadMeasObj.rightFt;
            txfdrightOM_inch.text =leadMeasObj.rightInch;
            txfdbracketOM.text = leadMeasObj.bracketFt;
            txfdbracketOM_inch.text = leadMeasObj.bracketInch;
            txfdtopOM.text =  leadMeasObj.topFt ;
            txfdtopOM_inch.text = leadMeasObj.topInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch ;
            txfdbottomOM.text = leadMeasObj.bottomFt;
            txfdbottomOM_inch.text = leadMeasObj.bottomInch;
            viewforMounttypeOM.hidden = NO;
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:718];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Cellular Shade"]){
        if ([leadMeasObj.controlPosition isEqualToString:@"L"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else if ([leadMeasObj.controlPosition isEqualToString:@"R"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        if ([leadMeasObj.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else if ([leadMeasObj.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        if ([leadMeasObj.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = NO;
        }
        else if ([leadMeasObj.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = NO;
        }
        
        if ([leadMeasObj.tdbu isEqualToString:@"1"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = NO;
        }
        else if([leadMeasObj.tdbu isEqualToString:@"0"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = NO;
        }
        if ([leadMeasObj.mountType isEqualToString:@"IM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = NO;
        }
        else if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:60]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:10]).selected = NO;
        }
        if ([leadMeasObj.mountType2 isEqualToString:@"W"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = NO;
        }
        else if ([leadMeasObj.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = NO;
        }
        if ([leadMeasObj.cordType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = NO;
        }
        else if ([leadMeasObj.cordType isEqualToString:@"CL"]) {
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = YES;
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = NO;
        }
        if([leadMeasObj.roomLabel isEqualToString:@"OTHER"])
        {
            if([leadMeasObj.winTitle length]==0||[leadMeasObj.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewforControlls viewWithTag:701]).text = leadMeasObj.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewforControlls viewWithTag:701]).text = [NSString stringWithFormat:@"%@",leadMeasObj.winTitle];
            }
            
        }
        else
        {
            ((UITextField *)[self.viewforControlls viewWithTag:701]).text =leadMeasObj.roomLabel;
        }
        
       // ((UITextField *)[self.viewforControlls viewWithTag:701]).text =leadMeasObj.roomLabel;
        ((UITextField *)[self.viewforControlls viewWithTag:702]).text =leadMeasObj.windowSidemark;
        ((UITextField *)[self.viewforControlls viewWithTag:703]).text =leadMeasObj.laye;
        ((UITextField *)[self.viewforControlls viewWithTag:705]).text =leadMeasObj.material;
        
        ((UITextField *)[self.viewforControlls viewWithTag:713]).text =leadMeasObj.widthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:714]).text =leadMeasObj.widthInch;
        ((UITextField *)[self.viewforControlls viewWithTag:715]).text =leadMeasObj.heightFt;
        ((UITextField *)[self.viewforControlls viewWithTag:716]).text =leadMeasObj.heightInch;
        ((UITextField *)[self.viewforControlls viewWithTag:717]).text =leadMeasObj.depthFt;
        ((UITextField *)[self.viewforControlls viewWithTag:718]).text =leadMeasObj.depthInch;
        installation_note_text = leadMeasObj.installationNote;
        noteText = leadMeasObj.notes;
        
        if ([leadMeasObj.mountType isEqualToString:@"OM"]) {
            txfdwidthOM.text =leadMeasObj.widthFt ;
            txfdwidthOM_inch.text = leadMeasObj.widthInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch;
            txfdleftOM.text = leadMeasObj.leftFt;
            txfdleftOM_inch.text = leadMeasObj.leftInch;
            txfdwidthOM.text = leadMeasObj.widthFt;
            txfdwidthOM_inch.text = leadMeasObj.widthInch ;
            txfdrightOM.text = leadMeasObj.rightFt;
            txfdrightOM_inch.text =leadMeasObj.rightInch;
            txfdbracketOM.text = leadMeasObj.bracketFt;
            txfdbracketOM_inch.text = leadMeasObj.bracketInch;
            txfdtopOM.text =  leadMeasObj.topFt ;
            txfdtopOM_inch.text = leadMeasObj.topInch;
            txfdheightOM.text = leadMeasObj.heightFt;
            txfdheightOM_inch.text = leadMeasObj.heightInch ;
            txfdbottomOM.text = leadMeasObj.bottomFt;
            txfdbottomOM_inch.text = leadMeasObj.bottomInch;
            viewforMounttypeOM.hidden = NO;
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:718];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    if ([leadMeasObj.widthInch isEqualToString:@""] ) {
        
    }
    
    else{
        [self set_total_sum_values];
    }
    NSArray *valuarr = [leadMeasObj.optionalFeatures componentsSeparatedByString:@","];
    tfoptionalFeatureArr = [NSMutableArray arrayWithArray:valuarr];
    [self textFieldwothtag100_text];
    
    if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
        CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
        
        
        CGRect scrVframe = self.scrollView_forsketch.frame;
        scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100+120;
        self.scrollView_forsketch.frame= scrVframe;
        
        [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
        [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    }
    
    if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
        CGRect txfdframe = viewforMounttypeOM.frame;
        [self.scrollFortab1 addSubview:self.scrollView];
        CGRect scr_view_forimage = self.scrollView.frame;
        scr_view_forimage.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height-20;
        self.scrollView.frame = scr_view_forimage;
        
        CGRect scrVframe = self.scrollView_forsketch.frame;
        
        scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10+120;
        self.scrollView_forsketch.frame= scrVframe;
        [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
        [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    }
    [self.scrollView_forsketch setContentSize:CGSizeMake((170*indexforsketch),98)];
    
   
}

-(void)setValues_TabTwo_forEdit
{
    
    // leadMeasObj2.str_hard_inch;
    //NSLog(@"leadMeasObj2.str_hard_inch=%@",leadMeasObj2.str_hard_inch);
     ////NSLog(@"sketcount..........=%@",leadMeasObj.puddleoffStatus);
    if(arrTab2.count>0){
    leadMeasObj = [arrTab2 objectAtIndex:0];
    }
    if ([sketch_imagedataArr_tab2 count] == 0) {
        
    }
    else {
        [self set_sketchImage_tab2];
    }
    if([leadMeasObj.quantity length]==0||[leadMeasObj.quantity isEqualToString:@"(null)"])
    {
       leadMeasObj.quantity=@"1";
    }
    ((UITextField *)[self.view viewWithTag:1040]).hidden = YES;
    ((UITextField *)[self.view viewWithTag:1041]).hidden = NO;
    ((UITextField *)[self.view viewWithTag:1041]).text = leadMeasObj.quantity;
    if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
        //////NSLog(@"ext = %@", leadMeasObj2.extentionBracket);
        if ([leadMeasObj2.mountType2 isEqualToString:@"W"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = NO;
        }
        else if ([leadMeasObj2.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = NO;
        }
        if ([leadMeasObj2.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = NO;
        }
        else if ([leadMeasObj2.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = NO;
        }
        if ([leadMeasObj2.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = NO;
        }
        else if ([leadMeasObj2.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = NO;
        }
        if ([leadMeasObj2.cordSide isEqualToString:@"L"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected = NO;
        }
        else if ([leadMeasObj2.cordSide isEqualToString:@"R"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected = NO;
        }
        if ([leadMeasObj2.ceilingtofloor isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else if ([leadMeasObj2.ceilingtofloor isEqualToString:@"2"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else if ([leadMeasObj2.ceilingtofloor isEqualToString:@"3"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
        }
        if ([leadMeasObj2.pairorSingle isEqualToString:@"PR"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"L"])
        {
            
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
            
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"C"])
        {
            
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
            
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"R"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
        }
        if ([leadMeasObj2.roomLabel isEqualToString:@"(null)"]) {
            leadMeasObj2.roomLabel=@"";
        }
        if ([leadMeasObj2.windowSidemark isEqualToString:@"(null)"]) {
            leadMeasObj2.windowSidemark=@"";
        }
        if ([leadMeasObj2.laye isEqualToString:@"(null)"]) {
            leadMeasObj2.laye=@"";
        }
        if ([leadMeasObj2.material isEqualToString:@"(null)"]) {
            leadMeasObj2.material=@"";
        }
        if ([leadMeasObj2.pairorSingle isEqualToString:@"(null)"]) {
            leadMeasObj2.pairorSingle=@"";
        }
        if ([leadMeasObj2.topofPole isEqualToString:@"(null)"]) {
            leadMeasObj2.topofPole=@"";
        }
        if ([leadMeasObj2.ceilingtofloor isEqualToString:@"(null)"]) {
            leadMeasObj2.ceilingtofloor=@"";
        }
        if ([leadMeasObj2.mountType2 isEqualToString:@"(null)"]) {
            leadMeasObj2.mountType2=@"";
        }
        
        if ([leadMeasObj2.extentionBracket isEqualToString:@"(null)"]) {
            leadMeasObj2.extentionBracket=@"";
        }
        if ([leadMeasObj2.oldTreatment isEqualToString:@"(null)"]) {
            leadMeasObj2.oldTreatment=@"";
        }
        if ([leadMeasObj2.hardwareWidth isEqualToString:@"(null)"]) {
            leadMeasObj2.hardwareWidth=@"";
        }
        
        if([leadMeasObj2.roomLabel isEqualToString:@"OTHER"])
        {
            
            NSLog(@".....leadMeasObj2.winTitle...%@",leadMeasObj2.winTitle);
            
            if([leadMeasObj2.winTitle length]==0||[leadMeasObj2.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = leadMeasObj2.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = [NSString stringWithFormat:@"%@",leadMeasObj2.winTitle];
            }
            
            
        }
        else
        {
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = leadMeasObj2.roomLabel;
        }
        
        
       // ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text =leadMeasObj2.roomLabel;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302]).text =leadMeasObj2.windowSidemark;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:303]).text =leadMeasObj2.laye;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306]).text =leadMeasObj2.material;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text =leadMeasObj2.leftFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text =leadMeasObj2.leftInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text =leadMeasObj2.widthFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text =leadMeasObj2.widthInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text =leadMeasObj2.rightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text =leadMeasObj2.rightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:313]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.leftFt intValue]+[leadMeasObj2.widthFt intValue]+[leadMeasObj2.rightFt intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:314]).text=[NSString stringWithFormat:@"%i",[leadMeasObj2.leftInch intValue]+[leadMeasObj2.widthInch intValue]+[leadMeasObj2.rightInch intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:316]).text =leadMeasObj2.hardwareWidth;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text =leadMeasObj2.topFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text = leadMeasObj2.topInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text =leadMeasObj2.heightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text =leadMeasObj2.heightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:321]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.topFt intValue]+[leadMeasObj2.heightFt intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:322]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.topInch intValue]+[leadMeasObj2.heightInch intValue]];
        //        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text =leadMeasObj2.topofPole;
        //
        //        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text =leadMeasObj2.topofPole;
        installation_note_text_tab2 = leadMeasObj2.installationNote;
        noteText_tab2 = leadMeasObj2.notes;
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text =leadMeasObj2.poleTopFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text =leadMeasObj2.poleTopInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text =leadMeasObj2.poleHeightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text =leadMeasObj2.poleHeightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text =leadMeasObj2.poleTopFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:329]).text =leadMeasObj2.poleTopInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:335]).text =leadMeasObj2.bootomOfCrownFloor;
        
        
        //NSLog(@"just come here....");
        
        txt_left_ft.text =leadMeasObj2.ctof_left_ft;
        txt_left_inch.text = leadMeasObj2.ctof_left_inch;
        txt_center_ft.text = leadMeasObj2.ctof_center_ft;
        txt_center_inch.text = leadMeasObj2.ctof_center_inch;
        txt_right_ft.text = leadMeasObj2.ctof_right_ft;
        txt_right_inch.text = leadMeasObj2.ctof_right_inch;
        
        //txt_hard_inch.text =leadMeasObj2.str_hard_inch;
        txt_bottum_inch.text =leadMeasObj2.str_bottum_inch;
        
        
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Drapery"])
    {
        
        //NSLog(@"str_bottum_inch....%@", leadMeasObj2.str_bottum_inch);
        //////NSLog(@"mounttype2 = %@",leadMeasObj2.mountType2);
        if ([leadMeasObj2.mountType2 isEqualToString:@"W"])
        {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = NO;
            
        }
        else if ([leadMeasObj2.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = NO;
        }
        if ([leadMeasObj2.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = NO;
        }
        else if ([leadMeasObj2.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = NO;
        }
        if ([leadMeasObj2.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = NO;
        }
        else if ([leadMeasObj2.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = NO;
        }
        
        if ([leadMeasObj2.ceilingtofloor isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else if ([leadMeasObj2.ceilingtofloor isEqualToString:@"2"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else if ([leadMeasObj2.ceilingtofloor isEqualToString:@"3"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
        }
        if ([leadMeasObj2.pairorSingle isEqualToString:@"PR"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"L"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"C"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"R"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
        }
        if ([leadMeasObj2.rollType isEqualToString:@"DEC"]||[leadMeasObj2.functionality isEqualToString:@"DEC"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:83]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:84]).selected = NO;
        }
        else if ([leadMeasObj2.rollType isEqualToString:@"FUNC"]||[leadMeasObj2.functionality isEqualToString:@"FUNC"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:84]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:83]).selected = NO;
        }
        if ([leadMeasObj2.finishedLength isEqualToString:@"(null)"]) {
            leadMeasObj2.finishedLength=@"";
        }
        if ([leadMeasObj2.topofPole isEqualToString:@"(null)"]) {
            leadMeasObj2.topofPole=@"";
        }
        if ([leadMeasObj2.returnn isEqualToString:@"(null)"]) {
            leadMeasObj2.returnn=@"";
        }
        if ([leadMeasObj2.puddle isEqualToString:@"(null)"]) {
            leadMeasObj2.puddle=@"";
        }
        if ([leadMeasObj2.oftheFloor isEqualToString:@"(null)"]) {
            leadMeasObj2.oftheFloor=@"";
        }
        if ([leadMeasObj2.hardwareWidth isEqualToString:@"(null)"]) {
            leadMeasObj2.hardwareWidth=@"";
        }
         NSLog(@".....leadMeasObj2.roomLabel...%@",leadMeasObj2.roomLabel);
        if([leadMeasObj2.roomLabel isEqualToString:@"OTHER"])
        {
            
            NSLog(@".....leadMeasObj2.winTitle...%@",leadMeasObj2.winTitle);
            
            if([leadMeasObj2.winTitle length]==0||[leadMeasObj2.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = leadMeasObj2.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = [NSString stringWithFormat:@"%@",leadMeasObj2.winTitle];
            }
            
            
        }
        else
        {
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = leadMeasObj2.roomLabel;
        }
        
       // ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text =leadMeasObj2.roomLabel;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402]).text =leadMeasObj2.windowSidemark;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:403]).text =leadMeasObj2.laye;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406]).text =leadMeasObj2.material;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text =leadMeasObj2.leftFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text =leadMeasObj2.leftInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text =leadMeasObj2.widthFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text =leadMeasObj2.widthInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text =leadMeasObj2.rightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text =leadMeasObj2.rightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:413]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.leftFt intValue]+[leadMeasObj2.widthFt intValue]+[leadMeasObj2.rightFt intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:414]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.leftInch intValue]+[leadMeasObj2.widthInch intValue]+[leadMeasObj2.rightInch intValue]];
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:416]).text =leadMeasObj2.hardwareWidth;
        //txt_hard_inch.text =leadMeasObj2.str_hard_inch;
        
        
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text =leadMeasObj2.topFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text = leadMeasObj2.topInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text =leadMeasObj2.heightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text =leadMeasObj2.heightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:421]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.topFt intValue]+[leadMeasObj2.heightFt intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:422]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.topInch intValue]+[leadMeasObj2.heightInch intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text =leadMeasObj2.topofPole;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text = leadMeasObj2.topofPole;
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:436]).text =leadMeasObj2.finishedLength;
        txt_finished_inch.text =leadMeasObj2.str_finished_inch;
        
        
        
        
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:430]).text =leadMeasObj2.returnn;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:431]).text =leadMeasObj2.puddle;
        txt_bottum_inch.text =leadMeasObj2.str_bottum_inch;
        
        
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:432]).text =leadMeasObj2.oftheFloor;
        installation_note_text_tab2 = leadMeasObj2.installationNote;
        noteText_tab2 = leadMeasObj2.notes;
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text =leadMeasObj2.poleTopFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text =leadMeasObj2.poleTopInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:426]).text =leadMeasObj2.poleHeightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:427]).text =leadMeasObj2.poleHeightInch;
        //((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:428]).text =leadMeasObj2.poleTopFt;
        //((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:429]).text =leadMeasObj2.poleTopInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:431]).text =leadMeasObj2.bootomOfCrownFloor;
        
        if ([leadMeasObj.returnStatus isEqualToString:@"1"])
        {
            
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).hidden = NO;
            txt_return_inch.hidden=NO;
            txt_return_inch.text=leadMeasObj2.str_return_inch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).text =leadMeasObj2.returnn;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:91]).selected = YES;
            
            
        }
        else
        {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:92]).selected = YES;
        }
        
        if ([leadMeasObj.puddleoffStatus isEqualToString:@"1"])
        {
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).hidden = NO;
            txt_puddle_inch.hidden = NO;
            txt_puddle_inch.text=leadMeasObj2.str_puddle_inch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).text =leadMeasObj2.puddle;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:93]).selected = YES;
            
        }
        else if ([leadMeasObj.puddleoffStatus isEqualToString:@"2"])
        {
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).hidden = NO;
            txt_offthefloor_inch.hidden = NO;
            txt_offthefloor_inch.text=leadMeasObj2.str_offthefloor_inch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).text =leadMeasObj2.oftheFloor;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94]).selected = YES;
        }
        
        txt_left_ft.text =leadMeasObj2.ctof_left_ft;
        txt_left_inch.text = leadMeasObj2.ctof_left_inch;
        txt_center_ft.text = leadMeasObj2.ctof_center_ft;
        txt_center_inch.text = leadMeasObj2.ctof_center_inch;
        txt_right_ft.text = leadMeasObj2.ctof_right_ft;
        txt_right_inch.text = leadMeasObj2.ctof_right_inch;
        
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"])
    {
        
        if ([leadMeasObj2.mountType2 isEqualToString:@"W"])
        {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = NO;
        }
        else if ([leadMeasObj2.mountType2 isEqualToString:@"C"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = NO;
        }
        if ([leadMeasObj2.extentionBracket isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = NO;
        }
        else if ([leadMeasObj2.extentionBracket isEqualToString:@"0"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = NO;
        }
        if ([leadMeasObj2.oldTreatment isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = NO;
        }
        else if ([leadMeasObj2.oldTreatment isEqualToString:@"0"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = NO;
        }
        if ([leadMeasObj2.cordSide isEqualToString:@"L"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected = NO;
        }
        else if ([leadMeasObj2.cordSide isEqualToString:@"R"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected = NO;
        }
        if ([leadMeasObj2.ceilingtofloor isEqualToString:@"1"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else if ([leadMeasObj2.ceilingtofloor isEqualToString:@"2"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else if ([leadMeasObj2.ceilingtofloor isEqualToString:@"3"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
        }
        if ([leadMeasObj2.pairorSingle isEqualToString:@"PR"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"L"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
            
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"C"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
            
        }
        else if ([leadMeasObj2.pairorSingle isEqualToString:@"R"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            
        }
        if ([leadMeasObj2.tiltType isEqualToString:@"C"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:85]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:86]).selected = NO;
        }
        else if ([leadMeasObj2.tiltType isEqualToString:@"W"]) {
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:86]).selected = YES;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:85]).selected = NO;
        }
        if ([leadMeasObj2.roomLabel isEqualToString:@"(null)"]) {
            leadMeasObj2.roomLabel=@"";
        }
        if ([leadMeasObj2.windowSidemark isEqualToString:@"(null)"]) {
            leadMeasObj2.windowSidemark=@"";
        }
        if ([leadMeasObj2.laye isEqualToString:@"(null)"]) {
            leadMeasObj2.laye=@"";
        }
        if ([leadMeasObj2.material isEqualToString:@"(null)"]) {
            leadMeasObj2.material=@"";
        }
        if ([leadMeasObj2.pairorSingle isEqualToString:@"(null)"]) {
            leadMeasObj2.pairorSingle=@"";
        }
        if ([leadMeasObj2.topofPole isEqualToString:@"(null)"]) {
            leadMeasObj2.topofPole=@"";
        }
        if ([leadMeasObj2.ceilingtofloor isEqualToString:@"(null)"]) {
            leadMeasObj2.ceilingtofloor=@"";
        }
        if ([leadMeasObj2.mountType2 isEqualToString:@"(null)"]) {
            leadMeasObj2.mountType2=@"";
        }
        if ([leadMeasObj2.systemm isEqualToString:@"(null)"]) {
            leadMeasObj2.systemm=@"";
        }
        if ([leadMeasObj2.cordSide isEqualToString:@"(null)"]) {
            leadMeasObj2.cordSide=@"";
        }
        if ([leadMeasObj2.extentionBracket isEqualToString:@"(null)"]) {
            leadMeasObj2.extentionBracket=@"";
        }
        if ([leadMeasObj2.oldTreatment isEqualToString:@"(null)"]) {
            leadMeasObj2.oldTreatment=@"";
        }
        if ([leadMeasObj2.hardwareWidth isEqualToString:@"(null)"]) {
            leadMeasObj2.hardwareWidth=@"";
        }
        if([leadMeasObj2.roomLabel isEqualToString:@"OTHER"])
        {
            
            NSLog(@".....leadMeasObj2.winTitle...%@",leadMeasObj2.winTitle);
            
            if([leadMeasObj2.winTitle length]==0||[leadMeasObj2.winTitle isEqualToString:@"(null)"])
            {
                
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = leadMeasObj2.roomLabel;
                
            }
            else
            {
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = [NSString stringWithFormat:@"%@",leadMeasObj2.winTitle];
            }
            
            
        }
        else
        {
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = leadMeasObj2.roomLabel;
        }
        
       // ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text =leadMeasObj2.roomLabel;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902]).text =leadMeasObj2.windowSidemark;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:903]).text =leadMeasObj2.laye;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906]).text =leadMeasObj2.material;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text =leadMeasObj2.leftFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text =leadMeasObj2.leftInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text =leadMeasObj2.widthFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text =leadMeasObj2.widthInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text =leadMeasObj2.rightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text =leadMeasObj2.rightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.leftFt intValue]+[leadMeasObj2.widthFt intValue]+[leadMeasObj2.rightFt intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:914]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.leftInch intValue]+[leadMeasObj2.widthInch intValue]+[leadMeasObj2.rightInch intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:916]).text =leadMeasObj2.hardwareWidth;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text =leadMeasObj2.topFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text = leadMeasObj2.topInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text =leadMeasObj2.heightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text =leadMeasObj2.heightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.topFt intValue]+[leadMeasObj2.heightFt intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:922]).text =[NSString stringWithFormat:@"%i",[leadMeasObj2.topInch intValue]+[leadMeasObj2.heightInch intValue]];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text =leadMeasObj2.topofPole;
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:929]).text =leadMeasObj2.topofPole;
        installation_note_text_tab2 = leadMeasObj2.installationNote;
        noteText_tab2 = leadMeasObj2.notes;
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text =leadMeasObj2.poleTopFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:925]).text =leadMeasObj2.poleTopInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:926]).text =leadMeasObj2.poleHeightFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:927]).text =leadMeasObj2.poleHeightInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:928]).text =leadMeasObj2.poleTopFt;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:929]).text =leadMeasObj2.poleTopInch;
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:936]).text =leadMeasObj2.bootomOfCrownFloor;
        //NSLog(@"leadMeasObj2.str_hard_inchlllllllll%@",leadMeasObj2.str_hard_inch);
        txt_left_ft.text =leadMeasObj2.ctof_left_ft;
        txt_left_inch.text = leadMeasObj2.ctof_left_inch;
        txt_center_ft.text = leadMeasObj2.ctof_center_ft;
        txt_center_inch.text = leadMeasObj2.ctof_center_inch;
        txt_right_ft.text = leadMeasObj2.ctof_right_ft;
        txt_right_inch.text = leadMeasObj2.ctof_right_inch;
        txt_bottum_inch.text =leadMeasObj2.str_bottum_inch;
    }
    if ([leadMeasObj2.leftInch isEqualToString:@""]) {
        
    }
    else
    {
        
        [self set_total_sum_values];
        
    }
    txt_hard_inch.text =leadMeasObj2.str_hard_inch;
    NSLog(@"leadMeasObj2.str_hard_inch...%@",leadMeasObj2.str_hard_inch);
    if([leadMeasObj2.str_hard_inch length]==0||leadMeasObj2.str_hard_inch==NULL)
    {
        txt_hard_inch.text=@"0";
    }
    viewforMounttypeOM.hidden=YES;
    
}

-(void)set_total_sum_values{
    if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
        
        NSString *final_inch;
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text intValue];
        
        left_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text;
        
        
        width_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text;
        
        
        right_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text;
        
        
        if([left_inch isEqualToString:@"1/4"]){
            left_inch = @"2/8";
        }
        else if([left_inch isEqualToString:@"1/2"]){
            left_inch = @"4/8";
        }
        else if([left_inch isEqualToString:@"3/4"]){
            left_inch = @"6/8";
        }
        
        if([width_inch isEqualToString:@"1/4"]){
            width_inch = @"2/8";
        }
        else if([width_inch isEqualToString:@"1/2"]){
            width_inch = @"4/8";
        }
        else if([width_inch isEqualToString:@"3/4"]){
            width_inch = @"6/8";
        }
        
        if([right_inch isEqualToString:@"1/4"]){
            right_inch = @"2/8";
        }
        else if([right_inch isEqualToString:@"1/2"]){
            right_inch = @"4/8";
        }
        else if([right_inch isEqualToString:@"3/4"]){
            right_inch = @"6/8";
        }
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        
        int finalVal = [[valuesArr objectAtIndex:0]intValue]+[[valuesArr2 objectAtIndex:0]intValue]+[[valuesArr3 objectAtIndex:0]intValue];
        
        int val33 = finalVal%8;
        int val44 = finalVal/8;
        
        
            feetValue = feetValue+val44;
        
        final_inch = [NSString stringWithFormat:@"%i/8",val33];
        if ([final_inch isEqualToString:@"2/8"]) {
            final_inch = @"1/4";
            
        }
        if ([final_inch isEqualToString:@"4/8"]) {
            final_inch = @"1/2";
            
            
        }
        if ([final_inch isEqualToString:@"6/8"]) {
            final_inch = @"3/4";
            
        }
        if ([final_inch isEqualToString:@"0/8"]) {
            final_inch = @"0";
            
        }
        if ([final_inch isEqualToString:@"0/8"]) {
            final_inch = @"0";
        }
//        if (val33 == 0) {
//            final_inch = @"1";
//        }
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:313]).text =[NSString stringWithFormat:@"%i",feetValue];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:314]).text =final_inch;
        total_width_f_text = [NSString stringWithFormat:@"%i",feetValue];
        total_width_i_text = final_inch;
      

        
        
        NSString *finalinch2;
        int feetValue2 = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text intValue];
        
        
        topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text;
        heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text;
        
        if([topInch isEqualToString:@"1/4"]){
            topInch = @"2/8";
        }
        else if([topInch isEqualToString:@"1/2"]){
            topInch = @"4/8";
        }
        else if([topInch isEqualToString:@"3/4"]){
            topInch = @"6/8";
        }
        
        if([heightInch isEqualToString:@"1/4"]){
            heightInch = @"2/8";
        }
        else if([heightInch isEqualToString:@"1/2"]){
            heightInch = @"4/8";
        }
        else if([heightInch isEqualToString:@"3/4"]){
            heightInch = @"6/8";
        }
        valueArr1 = [topInch componentsSeparatedByString:@"/"];
        valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        
        int finalInchVal2 = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
        
        int val333 = finalInchVal2%8;
        int val444 = finalInchVal2/8;
        
        
            feetValue2 = feetValue2+val444;
        
        finalinch2 = [NSString stringWithFormat:@"%i/8",val333];
        
        if ([finalinch2 isEqualToString:@"2/8"]) {
            finalinch2 = @"1/4";
            
        }
        if ([finalinch2 isEqualToString:@"4/8"]) {
            finalinch2 = @"1/2";
            
            
        }
        if ([finalinch2 isEqualToString:@"6/8"]) {
            finalinch2 = @"3/4";
            
        }
        if ([finalinch2 isEqualToString:@"0/8"]) {
            finalinch2 = @"0";
            
        }
//        if (val333 == 0) {
//            finalinch2 = @"1";
//        }
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:321]).text =[NSString stringWithFormat:@"%i",feetValue2];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text =finalinch2;
        if ([finalinch2 isEqualToString:@"0/8"]) {
            finalinch2 = @"0";
        }
        total_height_f_text = [NSString stringWithFormat:@"%i",feetValue2];
        total_height_i_text = finalinch2;
        
        
        NSString *final_inch3;
        NSArray *valueArr5, *valueArr6;
        
        
        int feetValue3 = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text intValue];
        
        poleTopInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text;
        poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text;
        
        
        
        
        if([poleTopInch isEqualToString:@"1/4"]){
            poleTopInch = @"2/8";
        }
        else if([poleTopInch isEqualToString:@"1/2"]){
            poleTopInch = @"4/8";
        }
        else if([poleTopInch isEqualToString:@"3/4"]){
            poleTopInch = @"6/8";
        }
        
        if([poleHeightInch isEqualToString:@"1/4"]){
            poleHeightInch = @"2/8";
        }
        else if([poleHeightInch isEqualToString:@"1/2"]){
            poleHeightInch = @"4/8";
        }
        else if([poleHeightInch isEqualToString:@"3/4"]){
            poleHeightInch = @"6/8";
        }
//        if (val333 == 0) {
//            final_inch = @"1";
//        }
        
        valueArr5 = [poleTopInch componentsSeparatedByString:@"/"];
        valueArr6 = [poleHeightInch componentsSeparatedByString:@"/"];
        
        int finalVal3 = [[valueArr5 objectAtIndex:0]intValue]+[[valueArr6 objectAtIndex:0]intValue];
        
        int val3333 = finalVal3%8;
        int val4444 = finalVal3/8;
        
        
        feetValue3 = feetValue3+val4444;
        
        final_inch3 = [NSString stringWithFormat:@"%i/8",val3333];
        
        if ([final_inch3 isEqualToString:@"2/8"])
        {
            final_inch3 = @"1/4";
            
        }
        if ([final_inch3 isEqualToString:@"4/8"])
        {
            final_inch3 = @"1/2";
            
            
        }
        if ([final_inch3 isEqualToString:@"6/8"])
        {
            final_inch3 = @"3/4";
            
        }
        if ([final_inch3 isEqualToString:@"0/8"])
        {
            
            final_inch3 = @"0";
            
        }
        if ([final_inch3 isEqualToString:@"0/8"])
        {
            final_inch3 = @"0";
        }
//        if (val3333 == 0) {
//            final_inch3 = @"1";
//        }
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text =[NSString stringWithFormat:@"%i",feetValue3];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:329]).text =final_inch3;
        //        total_width_f_text = [NSString stringWithFormat:@"%i",feetValue3];
        //        total_width_i_text = final_inch3;
        
    }
    
    
    
    else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]){
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text intValue];
        NSString *final_inch;
        left_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text;
        
        width_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text;
        
        right_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text;
        
        if([left_inch isEqualToString:@"1/4"]){
            left_inch = @"2/8";
        }
        else if([left_inch isEqualToString:@"1/2"]){
            left_inch = @"4/8";
        }
        else if([left_inch isEqualToString:@"3/4"]){
            left_inch = @"6/8";
        }
        
        if([width_inch isEqualToString:@"1/4"]){
            width_inch = @"2/8";
        }
        else if([width_inch isEqualToString:@"1/2"]){
            width_inch = @"4/8";
        }
        else if([width_inch isEqualToString:@"3/4"]){
            width_inch = @"6/8";
        }
        
        if([right_inch isEqualToString:@"1/4"]){
            right_inch = @"2/8";
        }
        else if([right_inch isEqualToString:@"1/2"]){
            right_inch = @"4/8";
        }
        else if([right_inch isEqualToString:@"3/4"]){
            right_inch = @"6/8";
        }
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        int finalVal = [[valuesArr objectAtIndex:0]intValue]+[[valuesArr2 objectAtIndex:0]intValue]+[[valuesArr3 objectAtIndex:0]intValue];
        
        int val33 = finalVal%8;
        int val44 = finalVal/8;
        
       
            feetValue = feetValue+val44;
        
        
        final_inch = [NSString stringWithFormat:@"%i/8",val33];
        
        if ([final_inch isEqualToString:@"2/8"]) {
            final_inch = @"1/4";
            
        }
        if ([final_inch isEqualToString:@"4/8"]) {
            final_inch = @"1/2";
            
            
        }
        if ([final_inch isEqualToString:@"6/8"]) {
            final_inch = @"3/4";
            
        }
        if ([final_inch isEqualToString:@"0/8"]) {
            final_inch = @"0";
            
        }
//        if (val33==0) {
//            final_inch = @"1";
//        }
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:413]).text =[NSString stringWithFormat:@"%i",feetValue];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:414]).text =final_inch;
        
        
        int feetValue2 = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text intValue];
        
        NSString *finalinch2;
        topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text;
        heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text;
        
        if([topInch isEqualToString:@"1/4"]){
            topInch = @"2/8";
        }
        else if([topInch isEqualToString:@"1/2"]){
            topInch = @"4/8";
        }
        else if([topInch isEqualToString:@"3/4"]){
            topInch = @"6/8";
        }
        
        if([heightInch isEqualToString:@"1/4"]){
            heightInch = @"2/8";
        }
        else if([heightInch isEqualToString:@"1/2"]){
            heightInch = @"4/8";
        }
        else if([heightInch isEqualToString:@"3/4"]){
            heightInch = @"6/8";
        }
        valueArr1 = [topInch componentsSeparatedByString:@"/"];
        valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        
        
        int finalInchVal2 = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
        
        int val333 = finalInchVal2%8;
        int val444 = finalInchVal2/8;
        
        
            feetValue2 = feetValue2+val444;
        
        
        finalinch2 = [NSString stringWithFormat:@"%i/8",val333];
        if ([finalinch2 isEqualToString:@"2/8"]) {
            finalinch2 = @"1/4";
            
        }
        if ([finalinch2 isEqualToString:@"4/8"]) {
            finalinch2 = @"1/2";
            
            
        }
        if ([finalinch2 isEqualToString:@"6/8"]) {
            finalinch2 = @"3/4";
            
        }
        if ([finalinch2 isEqualToString:@"0/8"]) {
            finalinch2 = @"0";
            
        }
//        if (val333 == 0) {
//            finalinch2 = @"1";
//        }
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:421]).text =[NSString stringWithFormat:@"%i",feetValue2];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text =finalinch2;
        
        
        NSString *final_inch3;
        NSArray *valueArr5, *valueArr6;
        int feetValue3 = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:426]).text intValue];
        
        poleTopInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text;
        
        
        poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:427]).text;
        
        
        
        
        if([poleTopInch isEqualToString:@"1/4"]){
            poleTopInch = @"2/8";
        }
        else if([poleTopInch isEqualToString:@"1/2"]){
            poleTopInch = @"4/8";
        }
        else if([poleTopInch isEqualToString:@"3/4"]){
            poleTopInch = @"6/8";
        }
        
        if([poleHeightInch isEqualToString:@"1/4"]){
            poleHeightInch = @"2/8";
        }
        else if([poleHeightInch isEqualToString:@"1/2"]){
            poleHeightInch = @"4/8";
        }
        else if([poleHeightInch isEqualToString:@"3/4"]){
            poleHeightInch = @"6/8";
        }
        
        
        valueArr5 = [poleTopInch componentsSeparatedByString:@"/"];
        valueArr6 = [poleHeightInch componentsSeparatedByString:@"/"];
        
        int finalVal3 = [[valueArr5 objectAtIndex:0]intValue]+[[valueArr6 objectAtIndex:0]intValue];
        
        int val3333 = finalVal3%8;
        int val4444 = finalVal3/8;
        
       
            feetValue3 = feetValue3+val4444;
        
        final_inch3 = [NSString stringWithFormat:@"%i/8",val3333];
        if ([final_inch3 isEqualToString:@"2/8"]) {
            final_inch3 = @"1/4";
            
        }
        if ([final_inch3 isEqualToString:@"4/8"]) {
            final_inch3 = @"1/2";
            
            
        }
        if ([final_inch3 isEqualToString:@"6/8"]) {
            final_inch3 = @"3/4";
            
        }
        if ([final_inch3 isEqualToString:@"0/8"]) {
            final_inch3 = @"0";
            
        }
        if ([final_inch3 isEqualToString:@"0/8"]) {
            final_inch3 = @"0";
        }
//        if (val3333 ==0) {
//            final_inch3 = @"1";
//        }
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:428]).text =[NSString stringWithFormat:@"%i",feetValue3];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:429]).text =final_inch3;
    }
    
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]){
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text intValue];
        NSString *final_inch;
        left_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text;
        
        width_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text;
        
        right_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text;
        
        
        
        if([left_inch isEqualToString:@"1/4"]){
            left_inch = @"2/8";
        }
        else if([left_inch isEqualToString:@"1/2"]){
            left_inch = @"4/8";
        }
        else if([left_inch isEqualToString:@"3/4"]){
            left_inch = @"6/8";
        }
        
        if([width_inch isEqualToString:@"1/4"]){
            width_inch = @"2/8";
        }
        else if([width_inch isEqualToString:@"1/2"]){
            width_inch = @"4/8";
        }
        else if([width_inch isEqualToString:@"3/4"]){
            width_inch = @"6/8";
        }
        
        if([right_inch isEqualToString:@"1/4"]){
            right_inch = @"2/8";
        }
        else if([right_inch isEqualToString:@"1/2"]){
            right_inch = @"4/8";
        }
        else if([right_inch isEqualToString:@"3/4"]){
            right_inch = @"6/8";
        }
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        
        int finalVal = [[valuesArr objectAtIndex:0]intValue]+[[valuesArr2 objectAtIndex:0]intValue]+[[valuesArr3 objectAtIndex:0]intValue];
        
        int val33 = finalVal%8;
        int val44 = finalVal/8;
        
       
            feetValue = feetValue+val44;
        
        final_inch = [NSString stringWithFormat:@"%i/8",val33];
        if ([final_inch isEqualToString:@"2/8"]) {
            final_inch = @"1/4";
            
        }
        if ([final_inch isEqualToString:@"4/8"]) {
            final_inch = @"1/2";
            
            
        }
        if ([final_inch isEqualToString:@"6/8"]) {
            final_inch = @"3/4";
            
        }
        if ([final_inch isEqualToString:@"0/8"]) {
            final_inch = @"0";
            
        }
//        if (val33 == 0) {
//            final_inch = @"1";
//        }
        
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text =[NSString stringWithFormat:@"%i",feetValue];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:914]).text =final_inch;
        
        
        int feetValue2 = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text intValue];
        
        NSString *finalinch2;
        topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text;
        heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text;
        if([topInch isEqualToString:@"1/4"]){
            topInch = @"2/8";
        }
        else if([topInch isEqualToString:@"1/2"]){
            topInch = @"4/8";
        }
        else if([topInch isEqualToString:@"3/4"]){
            topInch = @"6/8";
        }
        
        if([heightInch isEqualToString:@"1/4"]){
            heightInch = @"2/8";
        }
        else if([heightInch isEqualToString:@"1/2"]){
            heightInch = @"4/8";
        }
        else if([heightInch isEqualToString:@"3/4"]){
            heightInch = @"6/8";
        }
        valueArr1 = [topInch componentsSeparatedByString:@"/"];
        valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        int finalInchVal2 = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
        
        int val333 = finalInchVal2%8;
        int val444 = finalInchVal2/8;
        
       
            feetValue2 = feetValue2+val444;
        
        finalinch2 = [NSString stringWithFormat:@"%i/8",val333];
        if ([finalinch2 isEqualToString:@"2/8"]) {
            finalinch2 = @"1/4";
            
        }
        if ([finalinch2 isEqualToString:@"4/8"]) {
            finalinch2 = @"1/2";
            
            
        }
        if ([finalinch2 isEqualToString:@"6/8"]) {
            finalinch2 = @"3/4";
            
        }
        if ([finalinch2 isEqualToString:@"0/8"])
        {
            finalinch2 = @"0";
            
        }
        
        
//        if (val333 == 0) {
//            finalinch2 = @"1";
//        }
        
        
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text =[NSString stringWithFormat:@"%i",feetValue2];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text =finalinch2;
        
        NSString *final_inch3;
        NSArray *valueArr5, *valueArr6;
        int feetValue3 = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:926]).text intValue];
        
        poleTopInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:925]).text;
        
        
        poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:927]).text;
        
        
        
        
        if([poleTopInch isEqualToString:@"1/4"]){
            poleTopInch = @"2/8";
        }
        else if([poleTopInch isEqualToString:@"1/2"]){
            poleTopInch = @"4/8";
        }
        else if([poleTopInch isEqualToString:@"3/4"]){
            poleTopInch = @"6/8";
        }
        
        if([poleHeightInch isEqualToString:@"1/4"]){
            poleHeightInch = @"2/8";
        }
        else if([poleHeightInch isEqualToString:@"1/2"]){
            poleHeightInch = @"4/8";
        }
        else if([poleHeightInch isEqualToString:@"3/4"]){
            poleHeightInch = @"6/8";
        }
        
        
        valueArr5 = [poleTopInch componentsSeparatedByString:@"/"];
        valueArr6 = [poleHeightInch componentsSeparatedByString:@"/"];
        
        int finalVal3 = [[valueArr5 objectAtIndex:0]intValue]+[[valueArr6 objectAtIndex:0]intValue];
        
        int val3333 = finalVal3%8;
        int val4444 = finalVal3/8;
        
         feetValue3 = feetValue3+val4444;
        
        final_inch3 = [NSString stringWithFormat:@"%i/8",val3333];
        if ([final_inch3 isEqualToString:@"2/8"]) {
            final_inch3 = @"1/4";
            
        }
        if ([final_inch3 isEqualToString:@"4/8"]) {
            final_inch3 = @"1/2";
            
            
        }
        if ([final_inch3 isEqualToString:@"6/8"]) {
            final_inch3 = @"3/4";
            
        }
        if ([final_inch3 isEqualToString:@"0/8"]) {
            final_inch3 = @"0";
            
        }
        if ([final_inch3 isEqualToString:@"0/8"]) {
            final_inch3 = @"0";
        }
//        if (val3333 == 0) {
//            final_inch3 = @"1";
//        }
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:928]).text =[NSString stringWithFormat:@"%i",feetValue3];
        ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:929]).text =final_inch3;
    }
    
    
    if (viewforMounttypeOM.hidden == NO) {
        
        int feetValue = [txfdleftOM.text intValue]+[txfdwidthOM.text intValue]+[txfdrightOM.text intValue]+[txfdbracketOM.text intValue];
        
        NSString *final_inch;
        left_inch_form1 = txfdleftOM_inch.text;
        width_inch_form1 = txfdwidthOM_inch.text;
        right_inch_form1 = txfdrightOM_inch.text;
        bracket_inch_form1 = txfdbracketOM_inch.text;
        
        
        
        
        if([left_inch_form1 isEqualToString:@"1/4"]){
            left_inch_form1 = @"2/8";
        }
        else if([left_inch_form1 isEqualToString:@"1/2"]){
            left_inch_form1 = @"4/8";
        }
        else if([left_inch_form1 isEqualToString:@"3/4"]){
            left_inch_form1 = @"6/8";
        }
        
        if([width_inch_form1 isEqualToString:@"1/4"]){
            width_inch_form1 = @"2/8";
        }
        else if([width_inch_form1 isEqualToString:@"1/2"]){
            width_inch_form1 = @"4/8";
        }
        else if([width_inch_form1 isEqualToString:@"3/4"]){
            width_inch_form1 = @"6/8";
        }
        
        if([right_inch_form1 isEqualToString:@"1/4"]){
            right_inch_form1 = @"2/8";
        }
        else if([right_inch_form1 isEqualToString:@"1/2"]){
            right_inch_form1 = @"4/8";
        }
        else if([right_inch_form1 isEqualToString:@"3/4"]){
            right_inch_form1 = @"6/8";
        }
        
        if([bracket_inch_form1 isEqualToString:@"1/4"]){
            bracket_inch_form1 = @"2/8";
        }
        else if([bracket_inch_form1 isEqualToString:@"1/2"]){
            bracket_inch_form1 = @"4/8";
        }
        else if([bracket_inch_form1 isEqualToString:@"3/4"]){
            bracket_inch_form1 = @"6/8";
        }
        
        valuesArr_form1 = [left_inch_form1 componentsSeparatedByString:@"/"];
        valuesArr2_form1 = [width_inch_form1 componentsSeparatedByString:@"/"];
        valuesArr3_form1 = [right_inch_form1 componentsSeparatedByString:@"/"];
        valuesArr4_form1 = [bracket_inch_form1 componentsSeparatedByString:@"/"];
        
        int finalInchVal =[[valuesArr_form1 objectAtIndex:0]intValue]+[[valuesArr2_form1 objectAtIndex:0]intValue]+[[valuesArr3_form1 objectAtIndex:0]intValue]+[[valuesArr4_form1 objectAtIndex:0]intValue];
        
        int val33 = finalInchVal%8;
        int val44 = finalInchVal/8;
        feetValue = feetValue+val44;
        
        final_inch = [NSString stringWithFormat:@"%i/8",val33];
        if ([final_inch isEqualToString:@"0/8"])
        {
            
            final_inch = @"0";
            
        }
         //NSLog(@"final_inch%@",final_inch);
        
        txftotalWidthOM_ft.text =[NSString stringWithFormat:@"%i",feetValue];
        
        
        //NSLog(@"txftotalWidthOM_inch1");
        final_inch=[self getInchesValues:final_inch];
        txftotalWidthOM_inch.text =final_inch;
        total_width_f_form1_text = [NSString stringWithFormat:@"%i",feetValue];
        total_width_i_form1_text = final_inch;
        
        
        if(txfdtopOM ||  txfdheightOM || txfdbottomOM ||txfdtopOM_inch ||  txfdheightOM_inch || txfdbottomOM_inch){
            
            
            int feetValue2 = [txfdtopOM.text intValue]+[txfdheightOM.text intValue]+[txfdbottomOM.text intValue];
            
            NSString *final_inch;
            top_inch = txfdtopOM_inch.text;
            
            
            height_inch = txfdheightOM_inch.text;
            
            
            bottom_inch = txfdbottomOM_inch.text;
            
            
            
            
            if([top_inch isEqualToString:@"1/4"]){
                top_inch = @"2/8";
            }
            else if([top_inch isEqualToString:@"1/2"]){
                top_inch = @"4/8";
            }
            else if([top_inch isEqualToString:@"3/4"]){
                top_inch = @"6/8";
            }
            
            if([height_inch isEqualToString:@"1/4"]){
                height_inch = @"2/8";
            }
            else if([height_inch isEqualToString:@"1/2"]){
                height_inch = @"4/8";
            }
            else if([height_inch isEqualToString:@"3/4"]){
                height_inch = @"6/8";
            }
            
            if([bottom_inch isEqualToString:@"1/4"]){
                bottom_inch = @"2/8";
            }
            else if([bottom_inch isEqualToString:@"1/2"]){
                bottom_inch = @"4/8";
            }
            else if([bottom_inch isEqualToString:@"3/4"]){
                bottom_inch = @"6/8";
            }
            
            valueArr_form1 = [top_inch componentsSeparatedByString:@"/"];
            valueArr2_form1 = [height_inch componentsSeparatedByString:@"/"];
            valueArr3_form1 = [bottom_inch componentsSeparatedByString:@"/"];
            
            int finalInchVal = [[valueArr_form1 objectAtIndex:0]intValue]+[[valueArr2_form1 objectAtIndex:0]intValue]+[[valueArr3_form1 objectAtIndex:0]intValue];
            
            int val333 = finalInchVal%8;
            int val444 = finalInchVal/8;
            feetValue2 = feetValue2+val444;
            
            final_inch = [NSString stringWithFormat:@"%i/8",val333];
            if ([final_inch isEqualToString:@"0/8"])
            {
                
                final_inch = @"0";
                
            }
            
            txftotalHeightOM_ft.text =[NSString stringWithFormat:@"%i",feetValue2];
            //NSLog(@"final_inch....%@",final_inch);
            final_inch= [self getInchesValues:final_inch];
            txftotalHeightOM_inch.text =final_inch;
            total_height_f_form1_text = [NSString stringWithFormat:@"%i",feetValue2];
            total_height_i_form1_text = final_inch;
        }
    }
    
}

-(void)setImageScrollview_fortab1:(NSMutableArray *)imgarr
{
   
    
    NSLog(@".....imageDataArr count...%i",imageDataArr.count);
    
    for(int i = 0; i<[imageDataArr count];i++){
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index*150),0,100,98)];
        imgView.userInteractionEnabled = YES;
        UIImage *image = [UIImage imageWithData:[imgarr objectAtIndex:i]];
        imgView.image = image;
        NSLog(@"image...%@",image);
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = index-1;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(deleteTapped_foredit:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView touchesShouldCancelInContentView:delbtn];
        if ([appdelObj.fromView isEqualToString:@"install"]) {
            
        }
        else{
            [imgView addSubview:delbtn];
        }
        index++;
        
        [self.scrollView addSubview:imgView];
        self.scrollView.delaysContentTouches = NO;
        self.scrollView.canCancelContentTouches = YES;
        
        [self.scrollView addSubview:imgView];
        
        
        [self.scrollView setUserInteractionEnabled:YES];
        
        [self.scrollView setContentSize:CGSizeMake(20+(index*150)+100,98)];
    }
    if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
        CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
        CGRect scrVframe = self.scrollView_forsketch.frame;
        scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100+120;
        self.scrollView_forsketch.frame= scrVframe;
        
        [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
        [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    }
    
    else if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
        CGRect txfdframe = viewforMounttypeOM.frame;
        CGRect scrVframe = self.scrollView_forsketch.frame;
        scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10+120;
        self.scrollView_forsketch.frame= scrVframe;
        [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
        [self.scrollFortab1 addSubview:self.scrollView_forsketch];
    }
    [self.scrollView_forsketch setContentSize:CGSizeMake((170*indexforsketch),98)];
    
    
}

-(void)set_sketchImage_tab1{
    
    for(int i = 0; i<[sketch_imagedataArr_tab1 count];i++){
        
        imgView2 = [[UIImageView alloc] initWithFrame:CGRectMake(20+(indexforsketch*150),0,100,98)];
        imgView2.userInteractionEnabled = YES;
        imgView2.image =[UIImage imageWithData:[sketch_imagedataArr_tab1 objectAtIndex:i]];
        [self.scrollView_forsketch addSubview:imgView2];
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.tag = indexforsketch-1;
        delbtn.alpha = 1.0;
        //             imgView2.tag =43;
        indexforsketch++;
        delbtn.userInteractionEnabled = YES;
        if ([modeValue isEqualToString:@"new"]) {
            [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped:) forControlEvents:UIControlEventTouchUpInside];
        }
        else if ([modeValue isEqualToString:@"edit"]){
            [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped:) forControlEvents:UIControlEventTouchUpInside];
        }
        [self.scrollView_forsketch touchesShouldCancelInContentView:delbtn];
        [imgView2 addSubview:delbtn];
        
    }
}

-(void)set_sketchImage_tab2{
    [self.scrollFortab2 addSubview:self.scrollView_forsketch_tab2];
    NSLog(@"sketch_imagedataArr_tab2 %i",sketch_imagedataArr_tab2.count);
    for(int i = 0; i<[sketch_imagedataArr_tab2 count];i++){
        ////NSLog(@"adfafa");
        NSLog(@"indexforsketch2 %i",indexforsketch2);
        imgView2 = [[UIImageView alloc] initWithFrame:CGRectMake(20+(indexforsketch2*150),0,100,98)];
        
        imgView2.image =[UIImage imageWithData:[sketch_imagedataArr_tab2 objectAtIndex:i]];
        imgView2.userInteractionEnabled = YES;
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.tag = indexforsketch2-1;
        delbtn.alpha = 1.0;
        indexforsketch2++;
        //             imgView2.tag =44;
        delbtn.userInteractionEnabled = YES;
        if ([modeValue isEqualToString:@"new"]) {
            [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped_tab2:) forControlEvents:UIControlEventTouchUpInside];
        }
        else if ([modeValue isEqualToString:@"edit"]){
            [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped_tab2:) forControlEvents:UIControlEventTouchUpInside];
        }
        [self.scrollView_forsketch_tab2 touchesShouldCancelInContentView:delbtn];
        [imgView2 addSubview:delbtn];
        [self.scrollView_forsketch_tab2 addSubview:imgView2];
         [self.scrollView_forsketch_tab2 setUserInteractionEnabled:YES];
        [self.scrollView_forsketch_tab2 setContentSize:CGSizeMake((170*indexforsketch2),98)];
    }
   
    [self set_scrollview_forsketch];
    
}

-(void)setImageScrollview_fortab2:(NSMutableArray *)imgarr{
    
    for(int i = 0; i<[imageDataArr_tab2 count];i++){
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index_tab2*150),0,100,98)];
        
        UIImage *image = [UIImage imageWithData:[imageDataArr_tab2 objectAtIndex:i]];
        imgView.image = image;
        imgView.userInteractionEnabled = YES;
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = index_tab2-1;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(deleteTapped_foredit_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView_tab2 touchesShouldCancelInContentView:delbtn];
        if ([appdelObj.fromView isEqualToString:@"install"]) {
            
        }
        else{
            [imgView addSubview:delbtn];
        }
        index_tab2++;
        
        [self.scrollView_tab2 addSubview:imgView];
        self.scrollView_tab2.delaysContentTouches = NO;
        self.scrollView_tab2.canCancelContentTouches = YES;
        
        [self.scrollView_tab2 addSubview:imgView];
        
        [self.scrollView_tab2 setContentSize:CGSizeMake(20+(index_tab2*150)+100,98)];
    }
    if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+15;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
    }
    
    [self set_scrollview_forsketch];
}

-(void)createView_forSketch{
    viewforsketch = [[SmoothLineView alloc]initWithFrame:CGRectMake(78, 60, 612, 792)];
    
    [viewforNote addSubview:viewforsketch];
    UIButton *cancelbtn = [UIButton buttonWithType:UIButtonTypeCustom];
    cancelbtn.frame = CGRectMake(65, 50, 25, 25);
    [cancelbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
    [cancelbtn setTitle:@"Cancel" forState:UIControlStateNormal];
    cancelbtn.alpha = 1.0;
    cancelbtn.tag = 2;
    [cancelbtn addTarget:self action:@selector(cancelTapped:) forControlEvents:UIControlEventTouchUpInside];
    [viewforNote addSubview:cancelbtn];
}

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return  [optionArray count];
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    UITableViewCell * tcell = [tableView dequeueReusableCellWithIdentifier:@"CELL"];
    if (!tcell) {
        tcell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"CELL"];
    }
    [tcell.textLabel setFont:[UIFont fontWithName:@"Times New Roman" size:15]];
    tcell.textLabel.frame = CGRectMake(0, 0, 100, 20);
    tcell.textLabel.text = [optionArray objectAtIndex:indexPath.row];
    return tcell;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
   
    
    NSLog(@"optiontag=%i",optionTable.tag);
    if (optionTable.tag == 1000) {
        viewforMounttypeOM.hidden = YES;
        [popOver dismissPopoverAnimated:YES];
        [optionTable setHidden:YES];
        if(productnameTF_tab2.hidden == YES){
            [self.scrollView removeFromSuperview];
            productnameTF.text = [optionArray objectAtIndex:indexPath.row];
            if ([productnameTF.text isEqualToString:@"Roller Shade"]) {
                selectedTreatmentType = @"1";
                labelArr  = nil;
                
                //                ////////NSLog(@"array=%@",labelArr);
                [self.scrollFortab1 removeFromSuperview];
                [self.view addSubview:self.scrollFortab1];
                [self rearrangeView];
            }
            else if ([productnameTF.text isEqualToString:@"Roman Shade"]){
                selectedTreatmentType = @"5";
                labelArr  = nil;
                //                ////////NSLog(@"array=%@",labelArr);
                [self.scrollFortab1 removeFromSuperview];
                [self.view addSubview:self.scrollFortab1];
                [self rearrangeView];
            }
            
            else if ([productnameTF.text isEqualToString:@"Woven Wood"]){
                selectedTreatmentType = @"2";
                labelArr  = nil;
                //                ////////NSLog(@"array=%@",labelArr);
                [self.scrollFortab1 removeFromSuperview];
                [self.view addSubview:self.scrollFortab1];
                [self rearrangeView];
            }
            
            else if ([productnameTF.text isEqualToString:@"Wood Blinds"]){
                selectedTreatmentType = @"6";
                labelArr  = nil;
                //                ////////NSLog(@"array=%@",labelArr);
                [self.scrollFortab1 removeFromSuperview];
                [self.view addSubview:self.scrollFortab1];
                [self rearrangeView];
            }
            else if ([productnameTF.text isEqualToString:@"XL Pleat"]){
                selectedTreatmentType = @"7";
                labelArr  = nil;
                //                ////////NSLog(@"array=%@",labelArr);
                [self.scrollFortab1 removeFromSuperview];
                [self.view addSubview:self.scrollFortab1];
                [self rearrangeView];
            }
            else if ([productnameTF.text isEqualToString:@"Cellular Shade"]){
                selectedTreatmentType = @"8";
                labelArr  = nil;
                //                ////////NSLog(@"array=%@",labelArr);
                [self.scrollFortab1 removeFromSuperview];
                [self.view addSubview:self.scrollFortab1];
                [self rearrangeView];
            }
            if([modeValue isEqualToString:@"edit"]){
                textF_touch_flag_tab1 = 1;
                indexforsketch = 1;
                [self setValues_TabOne_forEdit];
            }
            else{
                if ([productnameTF.text isEqualToString:@"Roller Shade"]) {
                    
                    UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
                    if(((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES){
                        CGRect frame = txtfd.frame;
                        self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height+10, 680, 267);
                        self.viewforMounttypeOM.hidden = NO;
                        [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                        
                    }
                    else{
                        UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:16];
                        CGRect frame = txtfd.frame;
                        
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                    
                }
                else if ([productnameTF.text isEqualToString:@"Roman Shade"]){
                    UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
                    if(((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES){
                        CGRect frame = txtfd.frame;
                        self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height+10, 680, 267);
                        self.viewforMounttypeOM.hidden = NO;
                        [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                    else{
                        UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:521];
                        CGRect frame = txtfd.frame;
                        
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                }
                
                else if ([productnameTF.text isEqualToString:@"Woven Wood"]){
                    UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
                    if(((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES){
                        CGRect frame = txtfd.frame;
                        self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
                        self.viewforMounttypeOM.hidden = NO;
                        [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                    else{
                        UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:121];
                        CGRect frame = txtfd.frame;
                        
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                }
                
                else if ([productnameTF.text isEqualToString:@"Wood Blinds"] ){
                    UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
                    if(((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES) {
                        CGRect frame = txtfd.frame;
                        self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height+10, 680, 267);
                        self.viewforMounttypeOM.hidden = NO;
                        [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                    else{
                        UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:619];
                        CGRect frame = txtfd.frame;
                        
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                }
                else if ([productnameTF.text isEqualToString:@"XL Pleat"]|| [productnameTF.text isEqualToString:@"Cellular Shade"]){
                    UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:60];
                    if(((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES) {
                        CGRect frame = txtfd.frame;
                        self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height+10, 680, 267);
                        self.viewforMounttypeOM.hidden = NO;
                        [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                    else{
                        UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:718];
                        CGRect frame = txtfd.frame;
                        
                        
                        CGRect imageScrollFrame = self.scrollView.frame;
                        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                        self.scrollView.frame = imageScrollFrame;
                        //[self.scrollFortab1 addSubview:self.scrollView];
                        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
                    }
                }
                //                [self setValues_TabOne];
                
            }
        }
        else if (productnameTF_tab2.hidden == NO){
            productnameTF_tab2.text = [optionArray objectAtIndex:indexPath.row];
            if ([productnameTF_tab2.text isEqualToString:@"Drapery"]){
                selectedTreatmentType_two = @"4";
                labelArr_tab2  = nil;
                ////////NSLog(@"labelArr_tab2=%@",labelArr_tab2);
                [self.viewfortabtwo_Controlls removeFromSuperview];
                [self.view addSubview:self.viewfortabtwo_Controlls];
                [self rearrangeView_tab2];
            }
            else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]){
                selectedTreatmentType_two = @"9";
                labelArr_tab2  = nil;
                ////////NSLog(@"labelArr_tab2=%@",labelArr_tab2);
                [self.viewfortabtwo_Controlls removeFromSuperview];
                [self.view addSubview:self.viewfortabtwo_Controlls];
                [self rearrangeView_tab2];
            }
            else if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
                selectedTreatmentType_two = @"3";
                labelArr_tab2  = nil;
                ////////NSLog(@"labelArr_tab2=%@",labelArr_tab2);
                [self.viewfortabtwo_Controlls removeFromSuperview];
                [self.view addSubview:self.viewfortabtwo_Controlls];
                [self rearrangeView_tab2];
            }
            //////NSLog(@"mpdevalueis=%@",modeValue);
            if([modeValue isEqualToString:@"edit"]){
                indexforsketch2 = 1;
                [self setValues_TabTwo_forEdit];
            }
            if([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
                UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
                CGRect frame = txtfd.frame;
                CGRect imageScrollFrame = self.scrollView_tab2.frame;
                imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                self.scrollView_tab2.frame = imageScrollFrame;
                [self.scrollFortab2 addSubview:self.scrollView_tab2];
                
                CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
                scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
                self.scrollView_forsketch_tab2.frame= scrVframe;
                [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height)];
                scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
                 [self set_preset_scrollView_tab2];
            }
            else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
                UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
                CGRect frame = txtfd.frame;
                CGRect imageScrollFrame = self.scrollView_tab2.frame;
                imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                self.scrollView_tab2.frame = imageScrollFrame;
                [self.scrollFortab2 addSubview:self.scrollView_tab2];
                
                CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
                scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
                self.scrollView_forsketch_tab2.frame= scrVframe;
                [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height)];
                scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
                 [self set_preset_scrollView_tab2];
            }
            else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
                UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
                CGRect frame = txtfd.frame;
                CGRect imageScrollFrame = self.scrollView_tab2.frame;
                imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
                self.scrollView_tab2.frame = imageScrollFrame;
                [self.scrollFortab2 addSubview:self.scrollView_tab2];
                
                CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
                scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
                self.scrollView_forsketch_tab2.frame= scrVframe;
                [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height)];
                scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
                [self set_preset_scrollView_tab2];
            }
        }
        if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
            CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
            CGRect scrVframe = self.scrollView.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100;
            self.scrollView.frame= scrVframe;
            
            //[self.scrollFortab1 addSubview:self.scrollView];
            
            CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
            sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
            self.scrollView_forsketch.frame = sketchScrollFrame;
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
            
            [self set_preset_scrollView];//now come here
        }
        
        if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
            CGRect txfdframe = viewforMounttypeOM.frame;
            CGRect scrVframe = self.scrollView.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10;
            self.scrollView.frame= scrVframe;
            //[self.scrollFortab1 addSubview:self.scrollView];
            
            CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
            sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
            self.scrollView_forsketch.frame = sketchScrollFrame;
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
            
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
            
             [self set_preset_scrollView];
            
        }
        
        
        
    }
    else if(optionTable.tag == 1){
        [popOver dismissPopoverAnimated:YES];
        [optionTable setHidden:YES];
        ////////NSLog(@"tag = 1");
        if ( indexPath.row == 0) {
            if ([appdelObj.fromView isEqualToString:@"install"]){
            }
            else{
                UIActionSheet* actionSheet = [[UIActionSheet alloc]initWithTitle:nil delegate:self cancelButtonTitle:@"" destructiveButtonTitle:nil otherButtonTitles:@"Gallery",@"Camera",@"cancel", nil];
                [actionSheet setFrame:CGRectMake(0, 0 , 320, 480)];
                [actionSheet showInView:self.view];
                [optionTable setFrame: CGRectMake(450, 642, 120, 154)];
            }
        }
        else if (indexPath.row == 1){
            if ([appdelObj.fromView isEqualToString:@"install"]){
                
            }
            else{
                
                viewforNote = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 768, 1024)];
                viewforNote.backgroundColor = [UIColor blackColor];
                [viewforNote setBackgroundColor:[[UIColor clearColor] colorWithAlphaComponent:0.7]];
                [self.view addSubview:viewforNote];
                UILabel *titleLbl = [[UILabel alloc]initWithFrame:CGRectMake(130, 160, 508, 40)];
                titleLbl.text = @"Add Sketch";
                titleLbl.font = [UIFont fontWithName:@"Helvetica-Bold" size:23.0];
                titleLbl.textColor = [UIColor whiteColor];
                titleLbl.textAlignment = NSTextAlignmentCenter;
                titleLbl.backgroundColor = [UIColor clearColor];
                [viewforNote addSubview:titleLbl];
                
                
                [self createView_forSketch];
                
                
                
                UIButton *donebtn = [UIButton buttonWithType:UIButtonTypeCustom];
                donebtn.frame = CGRectMake(30, 910, 120, 40);
                [donebtn setBackgroundImage:[UIImage imageNamed:@"btn.png"] forState:UIControlStateNormal];
                [donebtn setTitle:@"Done" forState:UIControlStateNormal];
                donebtn.alpha = 1.0;
                donebtn.tag = 2;
                [donebtn addTarget:self action:@selector(doneTapped:) forControlEvents:UIControlEventTouchUpInside];
                [viewforNote addSubview:donebtn];
                
                UIButton *resetbtn = [UIButton buttonWithType:UIButtonTypeCustom];
                resetbtn.frame = CGRectMake(615, 910, 120, 40);
                [resetbtn setBackgroundImage:[UIImage imageNamed:@"btn.png"] forState:UIControlStateNormal];
                [resetbtn setTitle:@"Reset" forState:UIControlStateNormal];
                resetbtn.alpha = 1.0;
                resetbtn.tag = 2;
                [resetbtn addTarget:self action:@selector(resetTapped:) forControlEvents:UIControlEventTouchUpInside];
                [viewforNote addSubview:resetbtn];
            }
        }
        else if (indexPath.row == 2)
        {
            //added 11 march
            if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
                appdelObj.formType_status = 1;
            }
            else{
                appdelObj.formType_status = 2;
            }
            PresetImages * customerObj = [self.storyboard instantiateViewControllerWithIdentifier:@"PresetImagesVC"];
            [self presentViewController:customerObj animated:YES completion:nil];
            
        }
        
        else if (indexPath.row == 4){
            viewforNote = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 768, 1024)];
            viewforNote.backgroundColor = [UIColor blackColor];
            [viewforNote setBackgroundColor:[[UIColor clearColor] colorWithAlphaComponent:0.7]];
            [self.view addSubview:viewforNote];
            
            UILabel *titleLbl = [[UILabel alloc]initWithFrame:CGRectMake(130, 220, 508, 40)];
            titleLbl.text = @"Add Installation Note";
            titleLbl.font = [UIFont fontWithName:@"Helvetica-Bold" size:23.0];
            titleLbl.textColor = [UIColor whiteColor];
            titleLbl.textAlignment = NSTextAlignmentCenter;
            titleLbl.backgroundColor = [UIColor clearColor];
            [viewforNote addSubview:titleLbl];
            note = [[NoteView alloc]initWithFrame:CGRectMake(100, 270, 568, 250)];
            note.delegate = self;
            note.alwaysBounceVertical = YES;
            note.layer.masksToBounds = YES;
            note.layer.cornerRadius = 10.0;
            [viewforNote addSubview:note];
            if ([appdelObj.fromView isEqualToString:@"install"]){
                [note resignFirstResponder];
                note.userInteractionEnabled = NO;
            }
            else{
                [note becomeFirstResponder];
            }
            //            if ([modeValue isEqualToString:@"edit"]) {
            if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
                note.text = installation_note_text;
            }
            else{
                note.text = installation_note_text_tab2;
            }
            //            }
            
            
            
            UIButton *cancelbtn = [UIButton buttonWithType:UIButtonTypeCustom];
            cancelbtn.frame = CGRectMake(90, 260, 25, 25);
            [cancelbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
            [cancelbtn setTitle:@"Cancel" forState:UIControlStateNormal];
            cancelbtn.alpha = 1.0;
            cancelbtn.tag = 4;
            [cancelbtn addTarget:self action:@selector(cancelTapped:) forControlEvents:UIControlEventTouchUpInside];
            [viewforNote addSubview:cancelbtn];
            
            UIButton *donebtn = [UIButton buttonWithType:UIButtonTypeCustom];
            donebtn.frame = CGRectMake(324, 550, 120, 40);
            [donebtn setBackgroundImage:[UIImage imageNamed:@"btn.png"] forState:UIControlStateNormal];
            [donebtn setTitle:@"Done" forState:UIControlStateNormal];
            donebtn.alpha = 1.0;
            donebtn.tag = 4;
            [donebtn addTarget:self action:@selector(doneTapped:) forControlEvents:UIControlEventTouchUpInside];
            [viewforNote addSubview:donebtn];
        }
        else if (indexPath.row == 3){
            viewforNote = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 768, 1024)];
            viewforNote.backgroundColor = [UIColor blackColor];
            [viewforNote setBackgroundColor:[[UIColor clearColor] colorWithAlphaComponent:0.7]];
            [self.view addSubview:viewforNote];
            
            UILabel *titleLbl = [[UILabel alloc]initWithFrame:CGRectMake(130, 220, 508, 40)];
            titleLbl.text = @"Add Note";
            titleLbl.font = [UIFont fontWithName:@"Helvetica-Bold" size:23.0];
            titleLbl.textColor = [UIColor whiteColor];
            titleLbl.textAlignment = NSTextAlignmentCenter;
            titleLbl.backgroundColor = [UIColor clearColor];
            [viewforNote addSubview:titleLbl];
            
            
            note = [[NoteView alloc]initWithFrame:CGRectMake(100, 270, 568, 250)];
            note.delegate = self;
            note.alwaysBounceVertical = YES;
            note.layer.masksToBounds = YES;
            note.layer.cornerRadius = 10.0;
            [viewforNote addSubview:note];
            if ([appdelObj.fromView isEqualToString:@"install"]){
                [note resignFirstResponder];
                note.userInteractionEnabled = NO;
            }
            else{
                [note becomeFirstResponder];
            }
            //            if ([modeValue isEqualToString:@"edit"]) {
            if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
                note.text = noteText;
            }
            else{
                note.text = noteText_tab2;
            }
            //            }
            
            UIButton *cancelbtn = [UIButton buttonWithType:UIButtonTypeCustom];
            cancelbtn.frame = CGRectMake(90, 260, 25, 25);
            [cancelbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
            [cancelbtn setTitle:@"Cancel" forState:UIControlStateNormal];
            cancelbtn.alpha = 1.0;
            cancelbtn.tag = 4;
            [cancelbtn addTarget:self action:@selector(cancelTapped:) forControlEvents:UIControlEventTouchUpInside];
            [viewforNote addSubview:cancelbtn];
            
            UIButton *donebtn = [UIButton buttonWithType:UIButtonTypeCustom];
            donebtn.frame = CGRectMake(324, 550, 120, 40);
            [donebtn setBackgroundImage:[UIImage imageNamed:@"btn.png"] forState:UIControlStateNormal];
            [donebtn setTitle:@"Done" forState:UIControlStateNormal];
            donebtn.alpha = 1.0;
            donebtn.tag = 3;
            [donebtn addTarget:self action:@selector(doneTapped:) forControlEvents:UIControlEventTouchUpInside];
            [viewforNote addSubview:donebtn];
        }
    }
    else if (optionTable.tag == 2)
    {
        if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"])
        {
            
            
            
            UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:1];
            NSLog(@"come here...");
            ////////NSLog(@"dddd");
            txtf.text = @"";
            [txtf becomeFirstResponder];
            [self.popOver dismissPopoverAnimated:YES];
            // [optionTable setHidden:YES];//new 10
            
            
        }
        else
        {
            //NSLog(@"else come here...");
            UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:1];
            txtf.text = [optionArray objectAtIndex:indexPath.row];
            [self.popOver dismissPopoverAnimated:YES];
            // [optionTable setHidden:YES];//new 10
            
        }
        
    }
    else if (optionTable.tag == 3){
        [popOver dismissPopoverAnimated:YES];
        [optionTable setHidden:YES];
        ((UITextField *)[self.viewforControlls viewWithTag:3]).text = [optionArray objectAtIndex:indexPath.row];
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:3];
        txtf.text = [optionArray objectAtIndex:indexPath.row];
        ////////NSLog(@"%@",txtf.text);
    }
    else if (optionTable.tag == 10){
        ////////NSLog(@"hjkj");
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:10];
        txtf.text = [optionArray objectAtIndex:indexPath.row];
        ////////NSLog(@"%@",txtf.text);
    }
    
    
   
    if ((optionTable.tag == 2||optionTable.tag == 101|| optionTable.tag == 501 || optionTable.tag == 601|| optionTable.tag == 701) )
    {
        
        UITextField *txtf;
        if(optionTable.tag == 101)
        {
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"])
            {
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:101];
                //NSLog(@"come here...");
                ////////NSLog(@"dddd");
                txtf.text = @"";
                [txtf becomeFirstResponder];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
            }
            else
            {
               
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:101];
                txtf.text = [optionArray objectAtIndex:indexPath.row];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
                
            }
        }
        else if (optionTable.tag == 601)
        {
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"]) {
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:601];
               
                ////////NSLog(@"dddd");
                txtf.text = @"";
                [txtf becomeFirstResponder];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
            }
            else
            {
                
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:601];
                txtf.text = [optionArray objectAtIndex:indexPath.row];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
                
            }
            
        }
        else if (optionTable.tag == 701)
        {
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"]) {
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:701];
                //NSLog(@"come here...");
                ////////NSLog(@"dddd");
                txtf.text = @"";
                [txtf becomeFirstResponder];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
            }
            else
            {
                //NSLog(@"else come here...");
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:701];
                txtf.text = [optionArray objectAtIndex:indexPath.row];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
                
            }
        }
        else if (optionTable.tag == 501)
        {
            
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"]) {
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:501];
                //NSLog(@"come here...");
                ////////NSLog(@"dddd");
                txtf.text = @"";
                [txtf becomeFirstResponder];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
            }
            else
            {
                //NSLog(@"else come here...");
                UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:501];
                txtf.text = [optionArray objectAtIndex:indexPath.row];
                [self.popOver dismissPopoverAnimated:YES];
                // [optionTable setHidden:YES];//new 10
                
            }
            
            
        }
        else if (optionTable.tag == 2)
        {
            txtf = (UITextField *)[self.viewforControlls viewWithTag:1];
        }
        if(indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"]){
            // txtf.text = @"";//new 10
            [txtf becomeFirstResponder];
        }
        else{
            // txtf.text = [optionArray objectAtIndex:indexPath.row];//new 10
            if (optionTable.tag == 2) {
                optionTable.tag = 1;
            }
            UITextField *txfd = (UITextField *)[self.viewforControlls viewWithTag:optionTable.tag+1];
            [txfd becomeFirstResponder];
        }
        [self.popOver dismissPopoverAnimated:YES];
        // [optionTable setHidden:YES];//new 10
    }
    else if (optionTable.tag == 101){
        if (indexPath.row == 3) {
            UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:101];
            
            ////////NSLog(@"dddd");
            txtf.text = @"";
            [txtf becomeFirstResponder];
            [self.popOver dismissPopoverAnimated:YES];
            [optionTable setHidden:YES];
        }
        else{
            UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:101];
            
            txtf.text = [optionArray objectAtIndex:indexPath.row];
            [self.popOver dismissPopoverAnimated:YES];
            [optionTable setHidden:YES];
        }
    }
    
    else if (optionTable.tag == 103){
        [popOver dismissPopoverAnimated:YES];
        [optionTable setHidden:YES];
        ((UITextField *)[self.viewforControlls viewWithTag:3]).text = [optionArray objectAtIndex:indexPath.row];
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:103];
        txtf.text = [optionArray objectAtIndex:indexPath.row];
        ////////NSLog(@"%@",txtf.text);
    }
    else if (optionTable.tag == 110){
        [popOver dismissPopoverAnimated:YES];
        [optionTable setHidden:YES];
        ((UITextField *)[self.viewforControlls viewWithTag:5]).text = [optionArray objectAtIndex:indexPath.row];
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:110];
        txtf.text = [optionArray objectAtIndex:indexPath.row];
        ////////NSLog(@"%@",txtf.text);
    }
    else if(optionTable.tag == 114){
        ////////NSLog(@"hjkj");
        [popOver dismissPopoverAnimated:YES];
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:114];
        txtf.text = [optionArray objectAtIndex:indexPath.row];
        ////////NSLog(@"%@",txtf.text);
        
    }
    else if (optionTable.tag == 514){
        [popOver dismissPopoverAnimated:YES];
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:514];
        [txtf becomeFirstResponder];
        if(indexPath.row ==3){
            txtf .text = @"";
            
            [self.popOver dismissPopoverAnimated:YES];
            [optionTable setHidden:YES];
        }
        else{
            txtf.text = [optionArray objectAtIndex:indexPath.row];
            [self.popOver dismissPopoverAnimated:YES];
            [optionTable setHidden:YES];
        }
        
    }
    else if (optionTable.tag == 612){
        [popOver dismissPopoverAnimated:YES];
        [optionTable setHidden:YES];
        UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:612];
        txtf.text = [optionArray objectAtIndex:indexPath.row];
        if([txtf.text isEqualToString:@"Outside Mount"]){
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:612];
            CGRect frame = txtfd.frame;
            self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height+10, 680, 267);
            self.viewforMounttypeOM.hidden = NO;
            [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:618];
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            [self.viewforMounttypeOM removeFromSuperview];
        }
        
    }
    
    
    else if(optionTable.tag > 300)
    {
        
        if (optionTable.tag == 301)
        {
            
            UITextField *txtf = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301];
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"])
            {
                txtf.text = @"";
                [txtf becomeFirstResponder];
            }
            else{
                
                txtf.text = [optionArray objectAtIndex:indexPath.row];
                UITextField *txfd = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302];
                [txfd becomeFirstResponder];
            }
            [self.popOver dismissPopoverAnimated:YES];
            //[optionTable setHidden:YES];//new 10
        }
        else if (optionTable.tag == 401)
        {
            
            ////NSLog(@"ddd");
            [self.popOver dismissPopoverAnimated:YES];
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"])//new 10
            {
                
                UITextField *txtf = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401];
                txtf.text = @"";
                room_lable_type_status=1;
                [txtf becomeFirstResponder];
                [self.popOver dismissPopoverAnimated:YES];
                //[optionTable setHidden:YES]; //new 10
                
            }
            else
            {
                
                
                UITextField *txfd = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401];
                txfd.text = [optionArray objectAtIndex:indexPath.row];
                UITextField *txf = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402];
                room_lable_type_status=0;
                [txf becomeFirstResponder];
                [self.popOver dismissPopoverAnimated:YES];
                //[optionTable setHidden:YES]; //new 10
                
            }
            
            
        }
        else if (optionTable.tag == 901) {
            UITextField *txtf = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901];
            if (indexPath.row == 3||[[optionArray objectAtIndex:indexPath.row] isEqualToString:@"Other"]) {
                txtf.text = @"";
                [txtf becomeFirstResponder];
            }
            else{
                txtf.text = [optionArray objectAtIndex:indexPath.row];
                UITextField *txfd = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902];
                [txfd becomeFirstResponder];
            }
            [self.popOver dismissPopoverAnimated:YES];
            //[optionTable setHidden:YES];
        }
        else if (optionTable.tag == 503){
            [popOver dismissPopoverAnimated:YES];
            [optionTable setHidden:YES];
            ((UITextField *)[self.viewforControlls viewWithTag:optionTable.tag]).text = [optionArray objectAtIndex:indexPath.row];
        }
        else{
            [popOver dismissPopoverAnimated:YES];
            [optionTable setHidden:YES];
            [self createtextfieldwithtag:optionTable.tag andIndex:indexPath.row];
        }
    }
    
    
    
}



-(void)radioButtonPressed:(UIButton *)sender{
    /////////hide keyboard///////////
    [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
    [(UITextField *)[self.view viewWithTag:1040] resignFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:506] becomeFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:506] resignFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:106] becomeFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:106] resignFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:613] becomeFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:613] resignFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:705] becomeFirstResponder];
//    [(UITextField *)[self.viewforControlls viewWithTag:705] resignFirstResponder];
    ////////end/////////
    //NSLog(@"sender_Tag = %i",sender.tag);
    
    if (sender.tag ==8 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:58]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:58]);
            [btn setSelected:NO];
            sender.selected = YES;
            
            
        }
        ////NSLog(@"noteText %@",noteText);
    }
    else if (sender.tag == 58){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:8]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:8]);
            [btn setSelected:NO];
            sender.selected = YES;
            
                       
        }
        ////NSLog(@"noteText %@",noteText);
    }
    if (sender.tag ==5 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:55]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:55]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    else if (sender.tag == 55){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:5]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:5]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    
    if (sender.tag ==6 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:56]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:56]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    else if (sender.tag == 56){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:6]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:6]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    
    if (sender.tag ==9 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:59]).selected = NO;
        }
        else
        {
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:59]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if ( noteText && [noteText rangeOfString:@"Old Treatment: Yes"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nOld Treatment: Yes"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Old Treatment: Yes"];
            //                }
            //
            //            }
            
        }
        ////NSLog(@"noteText %@",noteText);
    }
    else if (sender.tag == 59){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:9]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:9]);
            [btn setSelected:NO];
            sender.selected = YES;
            
            //            if([noteText hasPrefix:@"Old Treatment: Yes"]){
            //                if([noteText isEqualToString:@"Old Treatment: Yes"]){
            //                  noteText = [noteText stringByReplacingOccurrencesOfString:@"Old Treatment: Yes" withString:@""];
            //                }
            //                else{
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Old Treatment: Yes\n" withString:@""];
            //                }
            //            }
            //            else{
            //                noteText = [noteText stringByReplacingOccurrencesOfString:@"\nOld Treatment: Yes" withString:@""];
            //            }
        }
        ////NSLog(@"noteText %@",noteText);
        
    }
    
    if (sender.tag ==10 ) {
        
        self.viewforMounttypeOM.hidden = YES;
        UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:60]);
        [btn setSelected:NO];
        sender.selected = YES;
        UITextField *txtfd = (UITextField *)[self.viewforControlls viewWithTag:10];
        CGRect imageScrollFrame = self.scrollView.frame;
        imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+100;
        self.scrollView.frame = imageScrollFrame;
        
        
        CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
        sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
        self.scrollView_forsketch.frame = sketchScrollFrame;
        [self.scrollFortab1 addSubview:self.scrollView_forsketch];
        
        //added 11 march
        [self set_preset_scrollView];
    }
    else if (sender.tag == 60){
        
        
        UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:10]);
        [btn setSelected:NO];
        sender.selected = YES;
        CGRect frame = btn.frame;
        self.viewforMounttypeOM.frame = CGRectMake(0,frame.origin.y+frame.size.height, 680, 267);
        self.viewforMounttypeOM.hidden = NO;
        [self.scrollFortab1 addSubview:self.viewforMounttypeOM];
        
        CGRect imageScrollFrame = self.scrollView.frame;
        imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height;
        self.scrollView.frame = imageScrollFrame;
        
        CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
        sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
        self.scrollView_forsketch.frame = sketchScrollFrame;
        [self.scrollFortab1 addSubview:self.scrollView_forsketch];
        
        scrollFortab1.contentSize = CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height);
        //added 11 march
        /*if(appdelObj.arr_presketch_images.count>0)
         {
         
         scrollFortab1.contentSize=CGSizeMake(scrollFortab1.contentSize.width, 1000);
         scrollFortab2.contentSize=CGSizeMake(scrollFortab1.contentSize.width, 1300);
         }*/
        
        [self set_preset_scrollView];

    }
    
    if (sender.tag ==11 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:61]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:61]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Type: Water Fall" withString:@"Type: Standard"];
            //
            //            if ( noteText && [noteText rangeOfString:@"Type: Standard"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nType: Standard"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Type: Standard"];
            //                }
            //
            //            }
            
        }
    }
    else if (sender.tag == 61){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:11]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:11]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Type: Standard" withString:@"Type: Water Fall"];
            //            if ( noteText && [noteText rangeOfString:@"Type: Water Fall"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nType: Water Fall"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Type: Water Fall"];
            //                }
            //
            //            }
            
        }
    }
    
    if (sender.tag ==12 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:62]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:62]);
            [btn setSelected:NO];
            sender.selected = YES;
            
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Mount Type: Ceiling" withString:@"Mount Type: Wall"];
            //            if ( noteText && [noteText rangeOfString:@"Mount Type: Wall"].location != NSNotFound ) {
            //                // Substring found...
            //
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nMount Type: Wall"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Mount Type: Wall"];
            //                }
            //
            //            }
        }
    }
    else if (sender.tag == 62){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:12]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:12]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Mount Type: Wall" withString:@"Mount Type: Ceiling"];
            //            if ( noteText && [noteText rangeOfString:@"Mount Type: Ceiling"].location != NSNotFound ) {
            //                // Substring found...
            //
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nMount Type: Ceiling"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Mount Type: Ceiling"];
            //                }
            //
            //            }
            
        }
    }
    
    if (sender.tag ==13 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:63]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:63]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Cord Type: Con-Loop" withString:@"Cord Type: Cord"];
            //            if ( noteText && [noteText rangeOfString:@"Cord Type: Cord"].location != NSNotFound ) {
            //                // Substring found...
            //
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nCord Type: Cord"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Cord Type: Cord"];
            //                }
            //
            //            }
        }
    }
    else if (sender.tag == 63){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:13]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:13]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Cord Type: Cord" withString:@"Cord Type: Con-Loop"];
            //            if ( noteText && [noteText rangeOfString:@"Cord Type: Con-Loop"].location != NSNotFound ) {
            //                // Substring found...
            //
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nCord Type: Con-Loop"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Cord Type: Con-Loop"];
            //                }
            //
            //            }
            
        }
    }
    
    if (sender.tag ==14 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:64]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:64]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    else if (sender.tag == 64){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:14]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:14]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    
    if (sender.tag ==15 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:65]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:65]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Tilt Type: Cord" withString:@"Tilt Type: Wand"];
            //
            //            if ( noteText && [noteText rangeOfString:@"Tilt Type: Wand"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nTilt Type: Wand"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Tilt Type: Wand"];
            //                }
            //
            //            }
        }
    }
    else if (sender.tag == 65){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:15]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:15]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Tilt Type: Wand" withString:@"Tilt Type: Cord"];
            //
            //            if ( noteText && [noteText rangeOfString:@"Tilt Type: Cord"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nTilt Type: Cord"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Tilt Type: Cord"];
            //                }
            //
            //            }
            
        }
    }
    
    if (sender.tag ==16 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:66]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:66]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if ( noteText && [noteText rangeOfString:@"Spacer Nedded: Yes"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText.length>0){
            //                    noteText =[noteText stringByAppendingString:@"\nSpacer Nedded: Yes"];
            //                }
            //                else{
            //                    noteText =[noteText stringByAppendingString:@"Spacer Nedded: Yes"];
            //                }
            //
            //            }
        }
    }
    else if (sender.tag == 66){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:16]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:16]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if([noteText hasPrefix:@"Spacer Nedded: Yes"]){
            //                if([noteText isEqualToString:@"Spacer Nedded: Yes"]){
            //                    noteText = [noteText stringByReplacingOccurrencesOfString:@"Spacer Nedded: Yes" withString:@""];
            //                }
            //                else{
            //                    noteText = [noteText stringByReplacingOccurrencesOfString:@"Spacer Nedded: Yes\n" withString:@""];
            //                }
            //            }
            //            else{
            //                noteText = [noteText stringByReplacingOccurrencesOfString:@"\nSpacer Nedded: Yes" withString:@""];
            //            }
            //
        }
        
        
    }
    
    if (sender.tag ==17 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:67]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:68]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:67]);
            UIButton *btn2 = ((UIButton *)[self.viewforControlls viewWithTag:68]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
        }
    }
    else if (sender.tag == 67){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:17]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:68]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn =  ((UIButton *)[self.viewforControlls viewWithTag:17]);
            UIButton *btn2 =  ((UIButton *)[self.viewforControlls viewWithTag:68]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
           
            
        }
    }
    else if (sender.tag == 68){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:17]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:67]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn =  ((UIButton *)[self.viewforControlls viewWithTag:17]);
            UIButton *btn2 =  ((UIButton *)[self.viewforControlls viewWithTag:67]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
                   }
    }
    
    if (sender.tag == 1000+13) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:1000+14]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:1000+15]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:1000+14]);
            UIButton *btn2 = ((UIButton *)[self.viewforControlls viewWithTag:1000+15]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
        }

    }
    else if (sender.tag == 1000+14) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:1000+13]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:1000+15]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:1000+13]);
            UIButton *btn2 = ((UIButton *)[self.viewforControlls viewWithTag:1000+15]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
        }

    }
    else if (sender.tag == 1000+15) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewforControlls viewWithTag:1000+14]).selected = NO;
            ((UIButton *)[self.viewforControlls viewWithTag:1000+13]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewforControlls viewWithTag:1000+14]);
            UIButton *btn2 = ((UIButton *)[self.viewforControlls viewWithTag:1000+13]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
        }

    }


}

-(void)radioButtonPressed_tab2:(UIButton *)sender
{
    
    //NSLog(@"sender.tag = %i",sender.tag);
    /////////hide keyboard///////////
    [(UITextField *)[self.view viewWithTag:1041] becomeFirstResponder];
    [(UITextField *)[self.view viewWithTag:1041] resignFirstResponder];
//    [(UITextField *)[self.viewfortabtwo_Controlls viewWithTag:436] becomeFirstResponder];
//    [(UITextField *)[self.viewfortabtwo_Controlls viewWithTag:436] resignFirstResponder];
//    [(UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906] becomeFirstResponder];
//    [(UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906] resignFirstResponder];
    ////////end/////////
    if (sender.tag ==70 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]);
            UIButton *btn2 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]);
            UIButton *btn3 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            [btn3 setSelected:NO];
            sender.selected = YES;
            
        }
    }
    else if (sender.tag == 71){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]);
            UIButton *btn2 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]);
            UIButton *btn3 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            [btn3 setSelected:NO];
            sender.selected = YES;
            
            
        }
    }
    else if (sender.tag == 72){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]);
            UIButton *btn2 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]);
            UIButton *btn3 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            [btn3 setSelected:NO];
            sender.selected = YES;
            
            
        }
    }
    else if (sender.tag == 73){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]);
            UIButton *btn2 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]);
            UIButton *btn3 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            [btn3 setSelected:NO];
            sender.selected = YES;
            
            
        }
    }
    
    
    if (sender.tag ==74 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
            
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]);
            UIButton *btn2 = ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
            ((UITextField *)[viewfortabtwo_Controlls viewWithTag:1000+6]).hidden = NO;
            
        }
    }
    else if (sender.tag == 75){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn =  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]);
            UIButton *btn2 =  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
            ((UITextField *)[viewfortabtwo_Controlls viewWithTag:1000+6]).hidden = NO;
            
        }
    }
    else if (sender.tag == 76){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected = NO;
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected = NO;
        }
        else
        {
            
            
            //////NSLog(@"else");
            
            UIButton *btn =  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]);
            UIButton *btn2 =  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]);
            [btn setSelected:NO];
            [btn2 setSelected:NO];
            sender.selected = YES;
            ((UITextField *)[viewfortabtwo_Controlls viewWithTag:1000+6]).hidden = NO;
            
            
        }
    }
    
    
    if (sender.tag ==77 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if ( noteText_tab2 && [noteText_tab2 rangeOfString:@"Extention Bracket: Yes"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText_tab2.length>0){
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"\nExtention Bracket: Yes"];
            //                }
            //                else{
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"Extention Bracket: Yes"];
            //                }
            //
            //            }
            
        }
        
        
    }
    else if (sender.tag == 78){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if([noteText_tab2 hasPrefix:@"Extention Bracket: Yes"]){
            //                if([noteText_tab2 isEqualToString:@"Extention Bracket: Yes"]){
            //                    noteText_tab2 = [noteText stringByReplacingOccurrencesOfString:@"Extention Bracket: Yes" withString:@""];
            //                }
            //                else{
            //                    noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"Extention Bracket: Yes\n" withString:@""];
            //                }
            //            }
            //            else{
            //                noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"\nExtention Bracket: Yes" withString:@""];
            //            }
            
        }
    }
    if (sender.tag ==79 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if ( noteText_tab2 && [noteText_tab2 rangeOfString:@"Old Treatment: Yes"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText_tab2.length>0){
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"\nOld Treatment: Yes"];
            //                }
            //                else{
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"Old Treatment: Yes"];
            //                }
            //
            //            }
            
        }
    }
    else if (sender.tag == 80){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            if([noteText_tab2 hasPrefix:@"Old Treatment: Yes"]){
            //                if([noteText_tab2 isEqualToString:@"Old Treatment: Yes"]){
            //                    noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"Old Treatment: Yes" withString:@""];
            //                }
            //                else{
            //                    noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"Old Treatment: Yes\n" withString:@""];
            //                }
            //            }
            //            else{
            //                noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"\nOld Treatment: Yes" withString:@""];
            //            }
        }
        
        
    }
    
    if (sender.tag ==81 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    else if (sender.tag == 82){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    
    if (sender.tag ==83 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:84]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:84]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    else if (sender.tag == 84){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:83]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:83]);
            [btn setSelected:NO];
            sender.selected = YES;
            
        }
    }
    
    if (sender.tag ==85 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:86]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:86]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"System: Wand" withString:@"System: Cord"];
            //
            //            if ( noteText_tab2 && [noteText_tab2 rangeOfString:@"System: Cord"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText_tab2.length>0){
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"\nSystem: Cord"];
            //                }
            //                else{
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"System: Cord"];
            //                }
            //
            //            }
            
            
        }
    }
    else if (sender.tag == 86){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:85]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:85]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"System: Cord" withString:@"System: Wand"];
            //
            //            if ( noteText_tab2 && [noteText_tab2 rangeOfString:@"System: Wand"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText_tab2.length>0){
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"\nSystem: Wand"];
            //                }
            //                else{
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"System: Wand"];
            //                }
            //
            //            }
            
        }
    }
    
    if (sender.tag ==87 ) {
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"Cord side: R" withString:@"Cord side: L"];
            //
            //            if ( noteText_tab2 && [noteText_tab2 rangeOfString:@"Cord side: L"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText_tab2.length>0){
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"\nCord side: L"];
            //                }
            //                else{
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"Cord side: L"];
            //                }
            //
            //            }
            
        }
    }
    else if (sender.tag == 88){
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]);
            [btn setSelected:NO];
            sender.selected = YES;
            //            noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:@"Cord side: L" withString:@"Cord side: R"];
            //
            //            if ( noteText_tab2 && [noteText_tab2 rangeOfString:@"Cord side: R"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            //                if(noteText_tab2.length>0){
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"\nCord side: R"];
            //                }
            //                else{
            //                    noteText_tab2 =[noteText_tab2 stringByAppendingString:@"Cord side: R"];
            //                }
            //
            //            }
            
        }
    }
    
    if (sender.tag ==91 ) {
        
        NSLog(@"comes here3...");
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:92]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:92]);
            [btn setSelected:NO];
            sender.selected = YES;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).hidden = NO;
            txt_return_inch.hidden=NO;
        }
    }
    else if (sender.tag == 92)
    {
        
        NSLog(@"comes here4...");
        if(sender.selected == YES){
            NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:91]).selected = NO;
        }
        else{
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:91]);
            [btn setSelected:NO];
            sender.selected = YES;
            //((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).text = @"";
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).hidden = YES;
            txt_return_inch.hidden=YES;
            
        }
        
        
    }
    if (sender.tag ==93 )
    {
        NSLog(@"comes here...");
        if(sender.selected == YES){
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94]).selected = NO;
        }
        else
        {
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94]);
            [btn setSelected:NO];
            sender.selected = YES;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).hidden = NO;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).hidden = YES;
            //((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).text = @"";
            txt_puddle_inch.hidden=NO;
            txt_offthefloor_inch.hidden=YES;
            
            //            noteText = [noteText stringByReplacingOccurrencesOfString:@"Type : Water Fall" withString:@"Type : Standard"];
            
            //            if ( noteText && [noteText rangeOfString:@"Type : Standard"].location != NSNotFound ) {
            //                // Substring found...
            //            }
            //            else{
            
            
            //            }
        }
    }
    else if (sender.tag == 94)
    {
        
        
         NSLog(@"comes here2...");
        if(sender.selected == YES)
        {
            //////NSLog(@"if");
            ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:93]).selected = NO;
        }
        else{
            //////NSLog(@"else");
            
            UIButton *btn=  ((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:93]);
            [btn setSelected:NO];
            sender.selected = YES;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).hidden = NO;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).hidden = YES;
           // ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).text = @"";
            txt_puddle_inch.hidden=YES;
            txt_offthefloor_inch.hidden=NO;
        }
        
        
    }
    
}

-(void)deleteTapped:(UIButton *)sender{
    index--;
    for(UIImageView *view in self.scrollView.subviews){
        if (view.tag == 43) {
            //////NSLog(@"yes tag");
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
            
        }
    }
    
    int indx = sender.tag;
    ////NSLog(@"indx=%i",indx);
    //////NSLog(@"imageDataArr_count1=%i",imageDataArr.count);
    [imageDataArr removeObjectAtIndex:indx];
    ////NSLog(@"imageDataArr_count2=%i",imageDataArr.count);
    for(int i=0;i<[imageDataArr count];i++){
        //////NSLog(@"i=%i",i);
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
        imgView.userInteractionEnabled  = YES;
        UIImage *image = [[UIImage alloc] initWithData:[imageDataArr objectAtIndex:i]];
        imgView.image = image;
        
        
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = i;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(deleteTapped:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        [[NSUserDefaults standardUserDefaults]setObject:imageDataArr forKey:@"imageDataArr"];
        self.scrollView.delaysContentTouches = NO;
        self.scrollView.canCancelContentTouches = YES;
        [self.scrollView addSubview:imgView];
        [self.scrollView setUserInteractionEnabled:YES];
        [self.scrollView setContentSize:CGSizeMake((300*i),98)];
    }
    if (imageDataArr.count == 0) {
        index = 1;
    }
    //added 11 march
    [self set_preset_scrollView];

    
}

-(void)deleteTapped_fortab2:(UIButton *)sender{
    index_tab2--;
    for(UIView *view in self.scrollView_tab2.subviews){
        if (view.tag == 44) {
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
            
        }
    }
    int indx = sender.tag;
    //////NSLog(@"indx=%i",indx);
    //////NSLog(@"imageDataArr_count1=%i",imageDataArr_tab2.count);
    [imageDataArr_tab2 removeObjectAtIndex:indx];
    //////NSLog(@"imageDataArr_count2=%i",imageDataArr_tab2.count);
    for(int i=0;i<[imageDataArr_tab2 count];i++){
        //////NSLog(@"i=%i",i);
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
        imgView.userInteractionEnabled  = YES;
        UIImage *image = [[UIImage alloc] initWithData:[imageDataArr_tab2 objectAtIndex:i]];
        imgView.image = image;
        
        
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = i;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(deleteTapped_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView_tab2 touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        //        [[NSUserDefaults standardUserDefaults]setObject:deleteTapped_fortab2 forKey:@"imageDataArr"];
        self.scrollView_tab2.delaysContentTouches = NO;
        self.scrollView_tab2.canCancelContentTouches = YES;
        [self.scrollView_tab2 addSubview:imgView];
        [self.scrollView_tab2 setUserInteractionEnabled:YES];
        [self.scrollView_tab2 setContentSize:CGSizeMake((300*i),98)];
    }
    if (imageDataArr_tab2.count == 0) {
        index_tab2 = 1;
    } //added 11 march
    [self set_preset_scrollView_tab2];
    
}

-(void)deleteTapped_foredit:(UIButton *)sender{
    index--;
    
    for(UIView *view in self.scrollView.subviews){
        if (view.tag == 43) {
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
        }
    }
    int indx = sender.tag;
    //    //////NSLog(@"indx=%i",indx);
    //////NSLog(@"index2=%i",index);
    //    //////NSLog(@"imageDataArr1=%i",imageDataArr.count);
    [imageDataArr removeObjectAtIndex:indx];
    //    //////NSLog(@"imageDataArr2=%i",imageDataArr.count);
    for(int i=0;i<[imageDataArr count];i++){
        //        //////NSLog(@"i=%i",i);
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
        imgView.userInteractionEnabled  = YES;
        UIImage *image = [[UIImage alloc] initWithData:[imageDataArr objectAtIndex:i]];
        imgView.image = image;
        
        
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = i;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(deleteTapped_foredit:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView touchesShouldCancelInContentView:delbtn];
        
        [imgView addSubview:delbtn];
        
        
        //        [[NSUserDefaults standardUserDefaults]setObject:imageDataArr_edit forKey:@"imageDataArr"];
        self.scrollView.delaysContentTouches = NO;
        self.scrollView.canCancelContentTouches = YES;
        [self.scrollView addSubview:imgView];
        [self.scrollView setUserInteractionEnabled:YES];
        [self.scrollView setContentSize:CGSizeMake((300*i),98)];
    }
    //////NSLog(@"imageDataArr.count2=%i",imageDataArr.count);
    if (imageDataArr.count == 0) {
        index = 1;
    }
    //added 11 march
    [self set_preset_scrollView];
    
}

-(void)deleteTapped_foredit_fortab2:(UIButton *)sender{
    index_tab2--;
    for(UIView *view in self.scrollView_tab2.subviews){
        if (view.tag == 44) {
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
        }
    }
    int indx = sender.tag;
    //////NSLog(@"indx=%i",indx);
    //////NSLog(@"imageDataArr_count1=%i",imageDataArr_tab2.count);
    [imageDataArr_tab2 removeObjectAtIndex:indx];
    //////NSLog(@"imageDataArr_count2=%i",imageDataArr_tab2.count);
    for(int i=0;i<[imageDataArr_tab2 count];i++){
        //////NSLog(@"i=%i",i);
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
        imgView.userInteractionEnabled  = YES;
        UIImage *image = [[UIImage alloc] initWithData:[imageDataArr_tab2 objectAtIndex:i]];
        imgView.image = image;
        
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = i;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(deleteTapped_foredit_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView_tab2 touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        //        [[NSUserDefaults standardUserDefaults]setObject:imageDataArr_edit forKey:@"imageDataArr"];
        self.scrollView_tab2.delaysContentTouches = NO;
        self.scrollView_tab2.canCancelContentTouches = YES;
        [self.scrollView_tab2 addSubview:imgView];
        [self.scrollView_tab2 setUserInteractionEnabled:YES];
        [self.scrollView_tab2 setContentSize:CGSizeMake((300*i),98)];
    }
    if (imageDataArr_tab2.count == 0) {
        index_tab2 = 1;
    }
    //added 11 march
    [self set_preset_scrollView_tab2];
    
}
-(void)resetTapped:(id)sender{
    [viewforsketch removeFromSuperview];
    [self createView_forSketch];
}

-(void)cancelTapped:(UIButton *)sender{
    
    [viewforNote removeFromSuperview];
}

-(void)doneTapped:(UIButton *)sender
{
    
    NSLog(@"done has been tapped....");
    
    if (sender.tag == 2){
        CGRect rect = CGRectMake(viewforsketch.frame.origin.x , viewforsketch.frame.origin.y, viewforsketch.frame.size.width, viewforsketch.frame.size.height);
        UIGraphicsBeginImageContextWithOptions(rect.size,YES,0.0f);
        CGContextRef context = UIGraphicsGetCurrentContext();
        [viewforsketch.layer renderInContext:context];
        UIImage *capturedImage = UIGraphicsGetImageFromCurrentImageContext();
        UIGraphicsEndImageContext();
        
        //double origionalratio= capturedImage.size.width/capturedImage.size.height;
        //double Newheight=400.0f/origionalratio;
        //capturedImage=[capturedImage scaleToSize:CGSizeMake(400.0f, Newheight)];
        
        
        
        if ([productNameLbl.text isEqualToString:@"Drapery + Hardware and Verticals"]){
            [self.scrollFortab2 addSubview:self.scrollView_forsketch_tab2];
            [self.scrollView_forsketch_tab2 addSubview:sketchLbl_tab2];
            
            
            NSData *imgDt = UIImageJPEGRepresentation(capturedImage, .1);
            [sketch_imagedataArr_tab2 addObject:imgDt];
            //          [[NSUserDefaults standardUserDefaults]setObject:imgDt forKey:@"sketchimagedtformtwo"];
//            NSString * strImageName = [NSString stringWithFormat:@"imagefor2.png"];
            imgView2 = [[UIImageView alloc] initWithFrame:CGRectMake(20+(indexforsketch2*150),0,100,98)];
            
            imgView2.image =[UIImage imageWithData:imgDt];
            imgView2.userInteractionEnabled = YES;
            UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
            delbtn.frame = CGRectMake(0, 0, 15, 15);
            [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
            delbtn.tag = indexforsketch2-1;
            delbtn.alpha = 1.0;
            indexforsketch2++;
            //             imgView2.tag =44;
            delbtn.userInteractionEnabled = YES;
            if ([modeValue isEqualToString:@"new"])
            {
                
                
                [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped_tab2:) forControlEvents:UIControlEventTouchUpInside];
                
            }
            else if ([modeValue isEqualToString:@"edit"])
            {
                
                [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped_tab2:) forControlEvents:UIControlEventTouchUpInside];
                
            }
            [self.scrollView_forsketch_tab2 touchesShouldCancelInContentView:delbtn];
            [imgView2 addSubview:delbtn];
            [self.scrollView_forsketch_tab2 addSubview:imgView2];
            [self.scrollView_forsketch_tab2 setContentSize:CGSizeMake((20+(indexforsketch2*150)),98)];
            [self.scrollView_tab2 setContentSize:CGSizeMake((170*index_tab2),98)];
            
            [self set_scrollview_forsketch];
         
            //added 11 march
            [self set_preset_scrollView_tab2];
            
            
        }
        else{
            NSData *imgDt = UIImageJPEGRepresentation(capturedImage, .1);
            [sketch_imagedataArr_tab1 addObject:imgDt];
            [[NSUserDefaults standardUserDefaults]setObject:imgDt forKey:@"sketchimagedt"];
//            NSString * strImageName = [NSString stringWithFormat:@"imagefor1.png"];
            imgView2 = [[UIImageView alloc] initWithFrame:CGRectMake(20+(indexforsketch*150),0,100,98)];
            imgView2.userInteractionEnabled = YES;
            imgView2.image =[UIImage imageWithData:imgDt];
            [self.scrollView_forsketch addSubview:imgView2];
            UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
            delbtn.frame = CGRectMake(0, 0, 15, 15);
            [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
            delbtn.tag = indexforsketch-1;
            delbtn.alpha = 1.0;
            //             imgView2.tag =43;
            indexforsketch++;
            delbtn.userInteractionEnabled = YES;
            if ([modeValue isEqualToString:@"new"]) {
                [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped:) forControlEvents:UIControlEventTouchUpInside];
            }
            else if ([modeValue isEqualToString:@"edit"]){
                [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped:) forControlEvents:UIControlEventTouchUpInside];
            }
            [self.scrollView_forsketch touchesShouldCancelInContentView:delbtn];
            [imgView2 addSubview:delbtn];
            
            
            
            if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
                CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
                CGRect scrVframe = self.scrollView_forsketch.frame;
                scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100+120;
                self.scrollView_forsketch.frame= scrVframe;
                
                [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
                [self.scrollFortab1 addSubview:self.scrollView_forsketch];
            }
            
            if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
                CGRect txfdframe = viewforMounttypeOM.frame;
                CGRect scrVframe = self.scrollView_forsketch.frame;
                scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10+120;
                self.scrollView_forsketch.frame= scrVframe;
                [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
                [self.scrollFortab1 addSubview:self.scrollView_forsketch];
            }
            [self.scrollView_forsketch setContentSize:CGSizeMake((170*indexforsketch),98)];
            //             [self set_scrollview_forsketch];
            [self.scrollView_forsketch addSubview:sketchLbl];
            //added 11 march
            [self set_preset_scrollView];
            
        }
        
    }
    else if (sender.tag == 3){
        if ([productNameLbl.text isEqualToString:@"Drapery + Hardware and Verticals"]){
            noteText_tab2 = note.text;
        }
        else{
            noteText = note.text;
        }
        //////NSLog(@"NOTE=%@",noteText);
    }
    
    else if (sender.tag == 4){
        if ([productNameLbl.text isEqualToString:@"Drapery + Hardware and Verticals"]){
            installation_note_text_tab2 = note.text;
        }
        else{
            installation_note_text = note.text;
        }
        //////NSLog(@"INSTALLATION_NOTE=%@",installation_note_text);
    }
    [viewforNote removeFromSuperview];
    
      NSLog(@"done has been tapped....%i",sketch_imagedataArr_tab1.count);
}


-(void)delete_sketch_image_Tapped:(UIButton *)sender{
    
    indexforsketch--;
    for(UIImageView *view in self.scrollView_forsketch.subviews){
        if (view.tag == 43) {
            ////NSLog(@"yes tag");
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
            
        }
    }
    int indx = sender.tag;
    //////NSLog(@"indx=%i",indx);
    
    [sketch_imagedataArr_tab1 removeObjectAtIndex:indx];
    ////NSLog(@"sketch_imagedataArr_tab1_count1=%i",sketch_imagedataArr_tab1.count);
    //////NSLog(@"imageDataArr_count2=%i",imageDataArr.count);
    for(int i=0;i<[sketch_imagedataArr_tab1 count];i++){
        //////NSLog(@"i=%i",i);
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
        imgView.userInteractionEnabled  = YES;
        UIImage *image = [[UIImage alloc] initWithData:[sketch_imagedataArr_tab1 objectAtIndex:i]];
        imgView.image = image;
        
        
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = i;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView_forsketch touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        //        [[NSUserDefaults standardUserDefaults]setObject:imageDataArr forKey:@"imageDataArr"];
        self.scrollView_forsketch.delaysContentTouches = NO;
        self.scrollView_forsketch.canCancelContentTouches = YES;
        [self.scrollView_forsketch addSubview:imgView];
        [self.scrollView_forsketch setUserInteractionEnabled:YES];
        [self.scrollView_forsketch setContentSize:CGSizeMake((300*i),98)];
    }
    if (sketch_imagedataArr_tab1.count == 0) {
        indexforsketch = 1;
    }
    
    //added 11 march
    [self set_preset_scrollView];

    
}

-(void)delete_sketch_image_Tapped_tab2:(UIButton *)sender{
    
    indexforsketch2--;
    for(UIImageView *view in self.scrollView_forsketch_tab2.subviews){
        if (view.tag == 43) {
            ////NSLog(@"yes tag");
        }
        else{
            if ([view isKindOfClass:[UIImageView class]]) {
                [view removeFromSuperview];
            }
            
        }
    }
    int indx = sender.tag;
    //////NSLog(@"indx=%i",indx);
    
    [sketch_imagedataArr_tab2 removeObjectAtIndex:indx];
    ////NSLog(@"sketch_imagedataArr_tab2_count1=%i",sketch_imagedataArr_tab2.count);
    //////NSLog(@"imageDataArr_count2=%i",imageDataArr.count);
    for(int i=0;i<[sketch_imagedataArr_tab2 count];i++){
        //////NSLog(@"i=%i",i);
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(170+(i*150),0,100,98)];
        imgView.userInteractionEnabled  = YES;
        UIImage *image = [[UIImage alloc] initWithData:[sketch_imagedataArr_tab2 objectAtIndex:i]];
        imgView.image = image;
        
        
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = i;
        delbtn.userInteractionEnabled = YES;
        [delbtn addTarget:self action:@selector(delete_sketch_image_Tapped_tab2:) forControlEvents:UIControlEventTouchUpInside];
        [self.scrollView_forsketch_tab2 touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        //        [[NSUserDefaults standardUserDefaults]setObject:imageDataArr forKey:@"imageDataArr"];
        self.scrollView_forsketch_tab2.delaysContentTouches = NO;
        self.scrollView_forsketch_tab2.canCancelContentTouches = YES;
        [self.scrollView_forsketch_tab2 addSubview:imgView];
        [self.scrollView_forsketch_tab2 setUserInteractionEnabled:YES];
        [self.scrollView_forsketch_tab2 setContentSize:CGSizeMake((300*i),98)];
    }
    if (sketch_imagedataArr_tab2.count == 0) {
        indexforsketch2 = 1;
    }
    //added 11 march
    [self set_preset_scrollView_tab2];
}
//added 11 march
-(void)delete_preset_sketch_image_Tapped:(UIButton *)sender{
    
    int indx = sender.tag-1001;
    [appdelObj.arr_presketch_images removeObjectAtIndex:indx];
    [self set_preset_scrollView];
}
//added 11 march
-(void)delete_preset_sketch_image_Tapped_tab2:(UIButton *)sender{
    NSLog(@"delete_preset_sketch_image_Tapped_called");
    int indx = sender.tag-2001;
    [appdelObj.arr_presketch_images_tab2 removeObjectAtIndex:indx];
    [self set_preset_scrollView_tab2];
}


-(void)set_scrollview_forsketch{
    if (((UIButton *)[self.viewforControlls viewWithTag:43]).hidden ==NO) {
        
    }
    if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:44]).hidden ==NO) {
        
    }
    
    if ([productnameTF.text isEqualToString:@"Roller Shade"]) {
        if ( (((UIButton *)[self.viewforControlls viewWithTag:10])).selected == NO) {
            viewforMounttypeOM.hidden = NO;
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:10];
            CGRect frame = txtfd.frame;
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+100;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Roman Shade"]) {
        if ( (((UIButton *)[self.viewforControlls viewWithTag:10])).selected == NO) {
            viewforMounttypeOM.hidden = NO;
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:10];
            
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+100;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"Woven Wood"]){
        if ( (((UIButton *)[self.viewforControlls viewWithTag:10])).selected == NO) {
            viewforMounttypeOM.hidden = NO;
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:10];
            
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+100;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        
        
    }
    else if ([productnameTF.text isEqualToString:@"Wood Blinds"]) {
        if ((((UIButton *)[self.viewforControlls viewWithTag:10])).selected == NO) {
            viewforMounttypeOM.hidden = NO;
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:10];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+100;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        
    }
    else if ([productnameTF.text isEqualToString:@"XL Pleat"]||[productnameTF.text isEqualToString:@"Cellular Shade"]) {
        if ( (((UIButton *)[self.viewforControlls viewWithTag:10])).selected == NO) {
            viewforMounttypeOM.hidden = NO;
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = viewforMounttypeOM.frame.origin.y+viewforMounttypeOM.frame.size.height+20;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        else{
            UIButton *txtfd = (UIButton *)[self.viewforControlls viewWithTag:10];
            CGRect frame = txtfd.frame;
            
            
            CGRect imageScrollFrame = self.scrollView.frame;
            imageScrollFrame.origin.y = frame.origin.y+frame.size.height+100;
            self.scrollView.frame = imageScrollFrame;
            //[self.scrollFortab1 addSubview:self.scrollView];
            scrollFortab1.contentSize = CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height);
            
        }
        
    }
    
    
    if ([productnameTF_tab2.text isEqualToString:@"Drapery"]){
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
        CGRect frame = txtfd.frame;
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
        
        CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
        scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        self.scrollView_forsketch_tab2.frame= scrVframe;
        [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height)];
//        scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
    }
    else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]){
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        CGRect frame = txtfd.frame;
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
        
        CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
        scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        self.scrollView_forsketch_tab2.frame= scrVframe;
        [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height)];
//        scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
        
    }
    else if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]){
        UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
        CGRect frame = txtfd.frame;
        CGRect imageScrollFrame = self.scrollView_tab2.frame;
        imageScrollFrame.origin.y = frame.origin.y+frame.size.height+20;
        self.scrollView_tab2.frame = imageScrollFrame;
        [self.scrollFortab2 addSubview:self.scrollView_tab2];
        
        CGRect scrVframe = self.scrollView_forsketch_tab2.frame;
        scrVframe.origin.y = self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height+20;
        self.scrollView_forsketch_tab2.frame= scrVframe;
        [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height)];
//        scrollFortab2.contentSize = CGSizeMake(680, self.scrollView_forsketch_tab2.frame.origin.y+self.scrollView_forsketch_tab2.frame.size.height);
    }
    
    
}
-(void)clearTapped
{
    [viewforsketch removeFromSuperview];
    [viewforNote addSubview:viewforsketch];
}
-(void)createtextfieldwithtag:(int)tag andIndex:(int)indexx{
    
    UITextField *txtf = (UITextField *)[self.viewforControlls viewWithTag:tag];
    txtf.text = [optionArray objectAtIndex:indexx];
    
    UITextField *txtf2 = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:tag];
    txtf2.text = [optionArray objectAtIndex:indexx];
}

- (IBAction)view_inst_imageBtnClicked:(id)sender{
    NSMutableArray *installtaion_imageArr = [[NSMutableArray alloc]init];
    
    NSLog(@"localMeasurementID=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementID"]);
    if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
        leadMeasurementInfotab2 *leadinfo = [arrTab1 objectAtIndex:0];
        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
        installtaion_imageArr = [dbSingleton() get_installation_ImageData:[leadinfo.localMeasurementID intValue]];
    }
    else{
        leadMeasurementInfotab2 *leadinfo = [arrTab2 objectAtIndex:0];
        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
        installtaion_imageArr = [dbSingleton() get_installation_ImageData:[leadinfo.localMeasurementID intValue]];
    }
    
    
    UIScrollView *scrollV_inst_image = [[UIScrollView alloc]init];
    scrollV_inst_image.backgroundColor = [UIColor whiteColor];
    if (installtaion_imageArr.count ==0) {
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"No Installation image for this measurement." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
        [alert show];
        
    }
    else{
        for (int i=0; i<[installtaion_imageArr count]; i++) {
            UIImageView *imagV = [[UIImageView alloc]initWithFrame:CGRectMake(10+(i*150),10,120,120)];
            UIImage *img = [UIImage imageWithData:[installtaion_imageArr objectAtIndex:i]];
            imagV.image = img;
            [scrollV_inst_image addSubview:imagV];
            [scrollV_inst_image setContentSize:CGSizeMake((150*i)+150,98)];
        }
        
        controller = [[UIViewController alloc]init];
        controller.contentSizeForViewInPopover = CGSizeMake(360, 140);
        controller.view = scrollV_inst_image;
        popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
        [popOver presentPopoverFromRect:CGRectMake(-50, view_inst_imageBtn.frame.origin.y+view_inst_imageBtn.frame.size.height+20, 360, 140) inView:self.view permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
    }
}

- (IBAction)submitClicked:(id)sender
{
    
   
    NSLog(@"submitClicked......");
    alert1=0;
    alert2 = 0;
    
    if ([appdelObj.fromView isEqualToString:@"install"])
    {
        
        
        [self dismissModalViewControllerAnimated:YES];
        
        
    }
    else
    {
       
        
        
        [[NSUserDefaults standardUserDefaults]setValue:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementID"] forKey:@"webLocalmeasurementID"];
        if([modeValue isEqualToString:@"new"]){
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            max = [dbSingleton() get_previous_mid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]intValue]];
            
    }
        
        
        
        if([modeValue isEqualToString:@"new"])
        {
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
             int max_mal = [dbSingleton() get_previous_mid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]intValue]];
            leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max_mal+1];
            leadMeasObj3.mID = [NSString stringWithFormat:@"%i",max_mal+1];
            
            ////NSLog(@"values     %i, %i, %i, %i, %i, %i",tab1ClickedFlag, gotonextView, tab2ClickedFlag,gotonextView_tab2,textF_touch_flag_tab1,textF_touch_flag_tab2);
          /*  if (tab1ClickedFlag == 1 && textF_touch_flag_tab1 == 1) {
                [self saveFirstMeasurementInfo];
                textF_touch_flag_tab1 = 1;
            }
            if (tab2ClickedFlag == 1 && textF_touch_flag_tab2 == 1) {
                [self saveSecondMeasurementInfo];
            }
            ////NSLog(@"values2     %i, %i, %i, %i, %i, %i",tab1ClickedFlag, gotonextView, tab2ClickedFlag,gotonextView_tab2,textF_touch_flag_tab1,textF_touch_flag_tab2);
            if (tab1ClickedFlag == 1 && gotonextView == 0 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==0 && leadMeasObj2.mountType .length ==0){
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:Nil message:@"Please enter required fields." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:Nil, nil];
                [alert show];
                
            }
            else if (tab1ClickedFlag == 1 && gotonextView == 0 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==0 && [leadMeasObj2.mountType isEqualToString:@"IM"]){
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:Nil message:@"Please enter required fields." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:Nil, nil];
                [alert show];
                
            }
            else if (tab1ClickedFlag == 1 && gotonextView == 0 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==0 && [leadMeasObj2.mountType isEqualToString:@"OM"]){
                textF_touch_flag_tab1=1;
            }
            else if (tab1ClickedFlag == 0 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==0){
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:Nil message:@"Please enter required fields." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:Nil, nil];
                [alert show];
                
            }
            else if (tab1ClickedFlag == 1 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==0){
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:Nil message:@"Please enter required fields." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:Nil, nil];
                [alert show];
                
            }
            else if (tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 1 && textF_touch_flag_tab2 ==0){
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                
                
                
                
                gotonextView = 1;
            }
            else if (tab1ClickedFlag == 0 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==1){
                selectedTreatmentType = @"0";
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            
            else if (tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 1 && textF_touch_flag_tab2 ==0){
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                
                gotonextView = 1;
            }
            
            else if (tab1ClickedFlag == 1 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 ==1){
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            
            else if (tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab1 == 1 && textF_touch_flag_tab2 ==1){
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                
                
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                
                
                gotonextView = 1;
                gotonextView_tab2 = 1;
                
            }
            else{
                gotonextView = 0;
                gotonextView_tab2 = 0;
            }*/
            
            
            
             if(firstselection==1&&secondchoose==0)
             {
                  NSLog(@"here....");
                 [self saveFirstMeasurementInfo];
                if(tab1valid_success == 1)
                {
                 [self checkAndCreateDatabase];
                 [self addDataToDatabase];
                  send_success=1;
                }
                 
             }
             else if (firstselection==1&&secondchoose==1)
             {
                
                 [self saveFirstMeasurementInfo];
                 [self saveSecondMeasurementInfo];
                 if(tab1valid_success==1&&tab2valid_success==1)
                 {
                     
                     [self checkAndCreateDatabase];
                     [self addDataToDatabase];
                     [self addDatatoDatabase_form2];
                     send_success=1;
                     
                     
                 }
                
             }
             else if (secondselection==1&&firstchoose==0)
             {
                 
                 [self saveSecondMeasurementInfo];
                 if(tab2valid_success == 1)
                 {
                     
                     [self checkAndCreateDatabase];
                     [self addDatatoDatabase_form2];
                     send_success = 1;
                 }
                 
             }
             else if (secondselection==1&&firstchoose==1)
             {
                 [self saveSecondMeasurementInfo];
                 [self saveFirstMeasurementInfo];
                 if(tab1valid_success==1&&tab2valid_success==1)
                 {
                     
                     [self checkAndCreateDatabase];
                     [self addDataToDatabase];
                     [self addDatatoDatabase_form2];
                     send_success=1;
                     
                     
                 }
                
             }
            
            
        }
        else
        {
          /* NSLog(@"tab1ClickedFlag     %i,textF_touch_flag_tab1  %i",tab1ClickedFlag, textF_touch_flag_tab1);
            NSLog(@"tab2ClickedFlag     %i,textF_touch_flag_tab2  %i",tab2ClickedFlag, textF_touch_flag_tab2);
            if (tab1ClickedFlag == 1 && textF_touch_flag_tab1 == 1) {
                ////NSLog(@"saveFirstMeasurementInfo");
                [self saveFirstMeasurementInfo];
            }
            if (tab2ClickedFlag == 1 && textF_touch_flag_tab2 == 1) {
                ////NSLog(@"saveSecondMeasurementInfo");
                [self saveSecondMeasurementInfo];
            }
            
            NSLog(@"values_inedit     %i, %i, %i, %i, %i, %i",tab1ClickedFlag, gotonextView, tab2ClickedFlag,gotonextView_tab2,textF_touch_flag_tab1,textF_touch_flag_tab2);
            //////NSLog(@"arrtab1.count = %i",arrTab1.count);
            //////NSLog(@"arrtab2.count = %i",arrTab2.count);
            if (arrTab2.count ==0 && tab1ClickedFlag == 1 && gotonextView == 0 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 ) {
                //NSLog(@"in method=22");
                [self lengthAlert:1];
            }
            else if (arrTab1.count ==0 && tab1ClickedFlag == 0 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab2 == 0 ) {
                //NSLog(@"in method=23");
                [self lengthAlert:2];
            }
            
            else if (arrTab1.count ==0 && tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab1 == 1 ) {
                //NSLog(@"in method=2");
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                [self checkAndCreateDatabase];
                [self addDataToDatabase_forNewMeasurementInEdit_form1];
                gotonextView = 1;
                gotonextView_tab2 = 1;
                //                leadMeasObj2.webMeasurementID=@"0";
            }
            else if (arrTab2.count ==0 && tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab2 == 1 ) {
                //NSLog(@"in method=3");
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_forNewMeasurementInEdit_form2];
                gotonextView = 1;
                gotonextView_tab2 = 1;
                //                 leadMeasObj3.webMeasurementID = @"0";
            }
            else if (tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab1 == 1 && textF_touch_flag_tab2 == 1 ) {
                //NSLog(@"in method=4");
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            else if (arrTab2.count ==0 && tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 == 0 ) {
                //NSLog(@"in method=5");
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            else if (arrTab2.count ==0 && tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 0 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 1 && textF_touch_flag_tab2 == 0 ) {
                //NSLog(@"in method=6");
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            else if (arrTab2.count ==0 && tab1ClickedFlag == 1 && gotonextView == 1 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 1 && textF_touch_flag_tab2 == 0 ) {
                //NSLog(@"in method=6");
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            
            else if (arrTab1.count ==0 && tab1ClickedFlag == 0 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 1 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 == 1 ) {
                //NSLog(@"in method=7");
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            else if (arrTab1.count ==0 && tab1ClickedFlag == 0 && gotonextView == 0 && tab2ClickedFlag == 1 &&gotonextView_tab2 == 0 && textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 == 1 ) {
                //NSLog(@"in method=8");
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            else if (tab1ClickedFlag ==1 && gotonextView == 0 && tab2ClickedFlag == 1 && gotonextView_tab2 == 1 &&textF_touch_flag_tab1 == 0 && textF_touch_flag_tab2 == 1 ) {
                //NSLog(@"in method=9");
                [self checkAndCreateDatabase];
                [self addDatatoDatabase_form2];
                gotonextView = 1;
                gotonextView_tab2 = 1;
            }
            else{
                gotonextView = 0;
                gotonextView_tab2 = 0;
            }*/
            
            NSLog(@"2firstselection...%i",firstselection);
            NSLog(@"2secondselection...%i",secondselection);
            NSLog(@"secondchoose...%i",secondchoose);
            NSLog(@"firstchoose...%i",firstchoose);
            if(firstselection==1&&secondchoose==0)
            {
                
                [self saveFirstMeasurementInfo];
                if(tab1valid_success == 1)
                {
                [self checkAndCreateDatabase];
                [self addDataToDatabase];
                    send_success=1;
                }
                
            }
            else if (firstselection==1&&secondchoose==1)
            {
                [self saveFirstMeasurementInfo];
                [self saveSecondMeasurementInfo];
                if(tab1valid_success==1&&tab2valid_success==1)
                {
                    
                    [self checkAndCreateDatabase];
                    [self addDataToDatabase];
                    [self addDatatoDatabase_form2];
                    send_success=1;
                    
                    
                }
            }
            else if (secondselection==1&&firstchoose==0)
            {
                
                [self saveSecondMeasurementInfo];
                if(tab2valid_success == 1)
                {
                    
                    [self checkAndCreateDatabase];
                    [self addDatatoDatabase_form2];
                    send_success = 1;
                    
                }
            }
            else if (secondselection==1&&firstchoose==1)
            {
                [self saveSecondMeasurementInfo];
                [self saveFirstMeasurementInfo];
                if(tab1valid_success==1&&tab2valid_success==1)
                {
                    NSLog(@"case should come here...");
                    [self checkAndCreateDatabase];
                    [self addDataToDatabase];
                    [self addDatatoDatabase_form2];
                    send_success=1;
                    
                    
                }
            }
            
            
        }
        
        
        NSString *idvalue = [[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"];
        //////NSLog(@"idvalue=%@",idvalue);
        
        if (idvalue == NULL) {
            //////NSLog(@"isnull");
            [[NSUserDefaults standardUserDefaults]setValue:@"0" forKey:@"localMeasurementIDform_one"];
        }
        appdelObj.localMeasurementIdArray = [NSMutableArray arrayWithObjects:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"], nil];
        [appdelObj.localMeasurementIdArray removeObject:@"0"];
        
        if (send_success == 1)
        {
            UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"Message" message:@"Saved successfully." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil];
            alertView.tag = 11;
            //[alertView show];
            NSString *webLeadId = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
            
            ////NSLog(@"webleadid === %@",webLeadId);
            
            if([webLeadId isEqualToString:@"0"])
            {
                
                
            }
            else
            {
                
               [self checkConnection];
                
            }
            if(dbupdateFlage == 1)
            {
                
                
            }
            
        }
    }
}

-(void)gotoCustomer_INfo_Page
{
    
    
    
    appdelObj.submitted_from = @"submit";
    customerInformation *specialInstructionObj = [self.storyboard instantiateViewControllerWithIdentifier:@"customerInformationVC"];
    [self presentViewController:specialInstructionObj animated:NO completion:nil];
    
    
    
}

-(void)setwebMeasurementidfornewMeasument:(int)wid localMeasuermentid:(int)l_mid
{
    
    NSLog(@"setwebMeasurementidfornewMeasument....and flag");
    
     if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK) {
        insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set webMesurementID=%d, offlineUpdatedFlag= 0 where localMeasurementID=%d", wid,l_mid];
        //[[NSUserDefaults standardUserDefaults]setValue:webmsmtID forKey:@"measurementidforimage"];
        const char * sqlStatement = [insertSQL UTF8String];
        NSLog(@"queryw=%s", sqlStatement);
        sqlite3_stmt * compiledStatement;
        
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL)==SQLITE_OK) {
            
            while (sqlite3_step(compiledStatement)==SQLITE_ROW) {
            }
            
        }
        else{
            ////////NSLog(@"Problem with prepare statement");
            return;
        }
        sqlite3_finalize(compiledStatement);
    }sqlite3_close(database);
    
    
}




-(void)sendingUpdatedMeasurementDeatilToWeb2 :(leadMeasurementInfo*)leadMeaInfo
{
    
    
    NSString * strURL;
    
    strURL = [NSString stringWithFormat:@"http://www.rstbuilders.com/crm/rstbuilderapi.php?action=addmeasurement&leadID=%@&measurementID=&mode=edit",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]];
    
    //    ////////NSLog(@"url calling %@",strURL);
    // NSString *strURL =@"http://www.rstbuilders.com/crm/rstbuilderapi.php?action=addmeasurement&leadID=18&measurementID=5&mode=edit";
    
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
    [request setDelegate:self];
    request.userInfo = [NSDictionary dictionaryWithObject:@"request" forKey:@"second"];
    [request setPostValue:@"newContact" forKey:@"leadID"];
    [[NSUserDefaults standardUserDefaults]setValue:leadMeaInfo.localMeasurementID forKey:@"localMeasurementID"];
    ////////NSLog(@"meeeee=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementID"]);
    [request setPostValue:leadMeaInfo.formType forKey:@"formType"];
    
    [request setPostValue:leadMeaInfo.product forKey:@"infoTitle"];
    
    [request setPostValue:leadMeaInfo.productID forKey:@"productID"];
    
    [request setPostValue:leadMeaInfo.mountType forKey:@"mountType"];
    
    [request setPostValue:leadMeaInfo.roomLabel forKey:@"roomLabel"];
    
    [request setPostValue:leadMeaInfo.windowSidemark forKey:@"windowSideMark"];
    
    [request setPostValue:leadMeaInfo.laye forKey:@"layer"];
    
    [request setPostValue:leadMeaInfo.material forKey:@"material"];
    
    
    [request setPostValue:leadMeaInfo.controlPosition forKey:@"controlPosition"];
    
    
    [request setPostValue:leadMeaInfo.tiltType forKey:@"tiltType"];
    
    [request setPostValue:leadMeaInfo.type forKey:@"type"];
    
    [request setPostValue:leadMeaInfo.mountType2 forKey:@"mountTypeW"];
    
    [request setPostValue:leadMeaInfo.headrailSize forKey:@"headRailSize"];
    
    [request setPostValue:leadMeaInfo.cordType forKey:@"cordType"];
    
    [request setPostValue:leadMeaInfo.rollType forKey:@"rollType"];
    //note
    //    optFeatureID(array)
    [request setPostValue:leadMeaInfo.tdbu forKey:@"tdbu"];
    
    [request setPostValue:leadMeaInfo.spacerNeeded forKey:@"spacerNeeded"];
    
    [request setPostValue:leadMeaInfo.extentionBracket forKey:@"extensionBracket"];
    
    [request setPostValue:leadMeaInfo.oldTreatment forKey:@"oldTreatment"];
    
    //    sketch
    
    [request setPostValue:leadMeaInfo.pairorSingle forKey:@"pairSingle"];
    
    //    [request setPostValue:leadMeaInfo.pairorSingle forKey:@"hardwareWidth"];
    
    [request setPostValue:leadMeaInfo.poleTopFt forKey:@"topofPole"];
    
    //    [request setPostValue:leadMeaInfo. forKey:@"finishedLength"];
    
    [request setPostValue:leadMeaInfo.ceilingtofloor forKey:@"ceilingToFloor"];
    
    [request setPostValue:leadMeaInfo.cordSide forKey:@"cordSide"];
    
    [request setPostValue:leadMeaInfo.returnn forKey:@"returnVal"];
    
    [request setPostValue:leadMeaInfo.puddle forKey:@"puddle"];
    
    [request setPostValue:leadMeaInfo.oftheFloor forKey:@"offTheFloor"];
    
    [request setPostValue:leadMeaInfo.creationDate forKey:@"creationDate"];
    
    [request setPostValue:leadMeaInfo.updationDate forKey:@"updationDate"];
    
    [request setPostValue:leadMeaInfo.measurementID forKey:@"measurementID"];
    
    [request setPostValue:leadMeaInfo.treatmentType forKey:@"treatmentType"];
    
    [request setPostValue:leadMeaInfo.widthInch forKey:@"widthInch"];
    [request setPostValue:leadMeaInfo.heightInch forKey:@"heightInch"];
    [request setPostValue:leadMeaInfo.depthInch forKey:@"depthInch"];
    
    [request setPostValue:leadMeaInfo.leftInch forKey:@"leftInch"];
    [request setPostValue:leadMeaInfo.rightInch forKey:@"rightInch"];
    [request setPostValue:leadMeaInfo.topInch forKey:@"topInch"];
    
    [request setPostValue:leadMeaInfo.bottomInch forKey:@"bottomInch"];
    [request setPostValue:leadMeaInfo.bracketInch forKey:@"bracketInch"];
    //  [request setPostValue:@"add" forKey:@"mode"];
    [request startAsynchronous];
    
    
    
}

- (void)requestFinished:(ASIHTTPRequest *)request
{
    
    
    
	NSString *receivedString = [request responseString];
    NSLog(@"receivedString %@",receivedString);
    NSDictionary *results = [receivedString objectFromJSONString];
    if ([[request.userInfo valueForKey:@"second"]isEqualToString:@"request"])
    {
        
        
        if (val == [nullmeasurementid count]-1)
        {
            
        }
        else
        {
            val++;
        }
        
        
    }
    else if ([[request.userInfo valueForKey:@"second"]isEqualToString:@"sendimage"])
    {
        
        ////NSLog(@"receivedString_forimage=%@",receivedString);
        
    }
    else
    {
        
        
        imgdupload_status=1;
        NSNumber * isSuccessNumber = (NSNumber *)[[results valueForKey:@"measurementInfo"]valueForKey:@"status"];
        if([isSuccessNumber boolValue] == YES)
        {
            NSLog(@"value inserted on server....");
        }
        else
        {
            NSLog(@"value not inserted on server....");
        }
        webMeasureIdArr = [[results valueForKey:@"measurementInfo"]valueForKey:@"measurementID"];
        NSLog(@"webMeasureIdArr..%@",webMeasureIdArr);
        
        appdelObj.webMeasurementIdArray = [NSMutableArray arrayWithArray:webMeasureIdArr];
        
        mID = [[results valueForKey:@"measurementInfo"]valueForKey:@"mID"];
        NSLog(@"webmeasid=%@",webMeasureIdArr);
        
        if([modeValue isEqualToString:@"new"])
        {
            
            NSLog(@"comes here.....");
            
            if(webMeasureIdArr.count ==1)
            {
                
                
                if([[webMeasureIdArr objectAtIndex:0]intValue]>0)
                {
                [[NSUserDefaults standardUserDefaults] setValue:[webMeasureIdArr objectAtIndex:0] forKey:@"measurementidforimage"];
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:0]intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"lastinsetedrow"]intValue]];
                [self setwebMid_in_measurementTable:[[webMeasureIdArr objectAtIndex:0] intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"lastinsetedrow"]intValue]];
                }
                
                
            }
            else if (webMeasureIdArr.count ==2)
            {
                [[NSUserDefaults standardUserDefaults] setValue:[webMeasureIdArr objectAtIndex:1] forKey:@"measurementidforimage"];
                int rowNumber = [[[NSUserDefaults standardUserDefaults]valueForKey:@"lastinsetedrow"]intValue];
                
                if([[webMeasureIdArr objectAtIndex:0]intValue]>0)
                {
               
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:0]intValue] localMeasuermentid:rowNumber-1];
                [self setwebMid_in_measurementTable:[[webMeasureIdArr objectAtIndex:0] intValue] localMeasuermentid:rowNumber-1];
                    
                }
                
                if([[webMeasureIdArr objectAtIndex:1]intValue]>0)
                {
                    
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:1]intValue] localMeasuermentid:rowNumber];
                [self setwebMid_in_measurementTable:[[webMeasureIdArr objectAtIndex:1] intValue] localMeasuermentid:rowNumber];
                    
                }
                
                
            }
            
        }
        else
        {
            
            if(webMeasureIdArr.count ==2)
            {
                
                leadMeasObj2.webMeasurementID = [webMeasureIdArr objectAtIndex:0];
                leadMeasObj3.webMeasurementID = [webMeasureIdArr objectAtIndex:1];
                
                
                /*if ((arrTab1.count ==0 || arrTab2.count ==0) && webMeasureIdArr.count == 2)
                {
                    NSLog(@"inside comes.......");
                    [self checkAndCreateDatabase];
                    [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:1]intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"lastinsetedrow"]intValue]];
                     [self setwebMid_in_measurementTable:[[webMeasureIdArr objectAtIndex:1] intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"lastinsetedrow"]intValue]];
                    
                }*/
                
                
                NSLog(@"finish leadMeasObj2.webMeasurementID%@",leadMeasObj2.webMeasurementID);
                NSLog(@"finish formtwoMeasid%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]);
                NSLog(@"leadMeasObj2.localMeasurementID %@",leadMeasObj2.localMeasurementID);
                
                
                if([leadMeasObj2.webMeasurementID intValue]>0)
                {
                    
                    
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[leadMeasObj2.webMeasurementID intValue] localMeasuermentid:[leadMeasObj2.localMeasurementID intValue]];
                [self setwebMid_in_measurementTable:[leadMeasObj2.webMeasurementID intValue] localMeasuermentid:[leadMeasObj2.localMeasurementID intValue]];
                    
                    
                    
                }
                if([leadMeasObj3.webMeasurementID intValue]>0)
                {
                    
                    
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[leadMeasObj3.webMeasurementID intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"] intValue]];
                [self setwebMid_in_measurementTable:[leadMeasObj3.webMeasurementID intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"] intValue]];
                    
                    
                }
                
                
                
            }
            else
            {
            NSLog(@"arrTab1..%i",arrTab1.count);
            NSLog(@"arrTab2..%i",arrTab2.count);
            NSString *localMid1, *localMid2;
            if (arrTab1.count>0)
            {
                
                /*leadMeasObj = [[leadMeasurementInfotab2 alloc]init];
                leadMeasObj = [arrTab1 objectAtIndex:0];
                localMid1 = leadMeasObj.localMeasurementID;
                [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:0]intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"lastinsetedrow"]intValue]];
                [self update_offlineupdated_column:localMid1 flagValue:@"0"];
                [self setwebMid_in_measurementTable:[leadMeasObj.webMeasurementID intValue] localMeasuermentid:[leadMeasObj.localMeasurementID intValue]];*/
                if([[webMeasureIdArr objectAtIndex:0] intValue]>0)
                {
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:0] intValue] localMeasuermentid:[leadMeasObj2.localMeasurementID intValue]];
                [self update_offlineupdated_column:leadMeasObj2.localMeasurementID flagValue:@"0"];
                [self setwebMid_in_measurementTable:[[webMeasureIdArr objectAtIndex:0] intValue] localMeasuermentid:[leadMeasObj2.localMeasurementID intValue]];
                }
                
                
                
            }
            if (arrTab2.count>0)
            {
                
               /* leadMeasObj = [[leadMeasurementInfotab2 alloc]init];
                leadMeasObj = [arrTab2 objectAtIndex:0];
                localMid2 = leadMeasObj.localMeasurementID;
                [self update_offlineupdated_column:localMid2 flagValue:@"0"];
                [self setwebMid_in_measurementTable:[leadMeasObj.webMeasurementID intValue] localMeasuermentid:[leadMeasObj.localMeasurementID intValue]];*/
                if([[webMeasureIdArr objectAtIndex:0] intValue]>0)
                {
                [self checkAndCreateDatabase];
                [self setwebMeasurementidfornewMeasument:[[webMeasureIdArr objectAtIndex:0] intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"] intValue]];
                [self update_offlineupdated_column:[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"] flagValue:@"0"];
                [self setwebMid_in_measurementTable:[[webMeasureIdArr objectAtIndex:0] intValue] localMeasuermentid:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"] intValue]];
                }
                
                
            }
            }

            
            
        }
        
        
           [self execute_image_request];
        
    }
    
    //NSLog(@"results=%@",receivedString);
    
}


-(void)setwebMid_in_measurementTable:(int)wid localMeasuermentid:(int)l_mid
{
    
    
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        
        NSString * insertSQL = [NSString stringWithFormat:@"update rst_images set webmeasurementID=%d where localMeasurementID=%d", wid,l_mid];
        //        [[NSUserDefaults standardUserDefaults]setValue:webmsmtID forKey:@"measurementidforimage"];
        const char * sqlStatement = [insertSQL UTF8String];
        //////NSLog(@"update_image_query=%s", sqlStatement);
        sqlite3_stmt * compiledStatement;
        
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL)==SQLITE_OK) {
            
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                
            }
            
        }
        else
        {
            return;
        }
        sqlite3_finalize(compiledStatement);
    }sqlite3_close(database);
    
}

- (void)requestFailed:(ASIHTTPRequest *)request
{
	
    //	NSString *receivedString = [request responseString];
    
    if ([modeValue isEqualToString:@"new"])
    {
        
        [self checkAndCreateDatabase];
        [self readDataFromDatabaseforMeasurements];
        
    }
    
    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Error in connection, data not uploaded on server successfully." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    [alert show];
    [hud removeFromSuperview];
    netwrok_fail=1;
     [ovController.view removeFromSuperview];
    bar_btn.enabled=YES;
    [self gotoCustomer_INfo_Page];
    
}

- (IBAction)addOptionBtnClicked:(id)sender
{
    
    
    ////NSLog(@"addOptionBtnClicked");
    optionTable.hidden = NO;
    optionTable = [[UITableView alloc]initWithFrame:CGRectMake(283, 719, 120, 154)];
    optionTable.tag = 1;
    optionTable.backgroundColor = [UIColor whiteColor];
    optionArray = [[NSArray alloc]initWithObjects:@"Add Pic",@"Add Sketch",@"Preset Sketch",@"Add Note",@"Add Installation Note", nil];
    [optionTable reloadData];
    controller = [[UIViewController alloc]init];
    controller.contentSizeForViewInPopover = CGSizeMake(160, 220);
    controller.view = optionTable;
    popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
    [popOver presentPopoverFromRect:CGRectMake(45, addOptionBtn.frame.origin.y+addOptionBtn.frame.size.height+20, 120, 200) inView:self.view permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
    
    //    [_scrollView setHidden:YES];
    optionTable.dataSource = self;
    optionTable.delegate = self;
    [optionTable reloadData];
    [optionTable setHidden:NO];
    
    
    
}
#pragma mark - WSAssetPickerControllerDelegate Methods

- (void)assetPickerControllerDidCancel:(WSAssetPickerController *)sender
{
    [self dismissViewControllerAnimated:YES completion:NULL];
}

- (void)assetPickerController:(WSAssetPickerController *)sender didFinishPickingMediaWithAssets:(NSArray *)assets
{
    
    if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
        //    imageDataArr = [[NSMutableArray alloc]init];
    }
    else{
        //        imageDataArr_tab2 = [[NSMutableArray alloc]init];
    }
    
    [self dismissViewControllerAnimated:YES completion:^{
        
        if (assets.count < 1) return;
        
        
        for (ALAsset *asset in assets) {
            
            
            if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
                //////NSLog(@"index3=%i",index);
                if ([modeValue isEqualToString:@"edit"]){
                    imgView = [[UIImageView alloc] initWithFrame:CGRectMake((index*150),0,100,98)];
                    imageSource_selected_in_edit_form1 = 1;
                    
                }
                else{
                    imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index*150),0,100,98)];
                }
                [self.scrollView addSubview:picLbl];
                UIImage *image = [[UIImage alloc] initWithCGImage:asset.defaultRepresentation.fullScreenImage];
                double origionalratio= image.size.width/image.size.height;
                double Newheight=600.0f/origionalratio;
                image=[image scaleToSize:CGSizeMake(600.0f, Newheight)];
                imgView.image = image;
                
                imgView.userInteractionEnabled  = YES;
                UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
                delbtn.frame = CGRectMake(0, 0, 15, 15);
                [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
                delbtn.alpha = 1.0;
                delbtn.tag = index-1;
                delbtn.userInteractionEnabled = YES;
                if ([modeValue isEqualToString:@"new"]) {
                    [delbtn addTarget:self action:@selector(deleteTapped:) forControlEvents:UIControlEventTouchUpInside];
                }
                else if ([modeValue isEqualToString:@"edit"]){
                    [delbtn addTarget:self action:@selector(deleteTapped_foredit:) forControlEvents:UIControlEventTouchUpInside];
                }
                [self.scrollView touchesShouldCancelInContentView:delbtn];
                [imgView addSubview:delbtn];
                
                index++;
                dataImage = [[NSData alloc]init];
               // dataImage = UIImagePNGRepresentation(imgView.image);
                dataImage = UIImageJPEGRepresentation(imgView.image, 0.1);
                [imageDataArr addObject:dataImage];
                NSLog(@"imageDataArr_tab2count1=%i",[imageDataArr count]);
                [[NSUserDefaults standardUserDefaults]setObject:imageDataArr forKey:@"imageDataArr"];
                ////////NSLog(@"image did end");
                
                self.scrollView.delaysContentTouches = NO;
                self.scrollView.canCancelContentTouches = YES;
                
                [self.scrollView addSubview:imgView];
                
                
                [self.scrollView setUserInteractionEnabled:YES];
                [self.scrollView setContentSize:CGSizeMake(20+(index*150)+100,98)];
                if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
                    CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
                    CGRect scrVframe = self.scrollView.frame;
//                    self.scrollView.backgroundColor = [UIColor redColor];
                    scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100;
                    self.scrollView.frame= scrVframe;
                    
                    CGRect scrVframe1 = self.scrollView_forsketch.frame;
                    scrVframe1.origin.y = txfdframe.origin.y+txfdframe.size.height+100+120;
                    self.scrollView_forsketch.frame= scrVframe1;
                    
                    [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
                     [self.scrollFortab1 addSubview:self.scrollView];
                }
                
                if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
                    CGRect txfdframe = viewforMounttypeOM.frame;
                    CGRect scrVframe = self.scrollView.frame;
                    scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10;
                    self.scrollView.frame= scrVframe;
                    [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
                    [self.scrollFortab1 addSubview:self.scrollView];
                    
                }
                
                //added 11 march
                [self set_preset_scrollView];
                
            }
            
            if ([productNameLbl.text isEqualToString:@"Drapery + Hardware and Verticals"]){
                if ([modeValue isEqualToString:@"edit"]){
                    imgView = [[UIImageView alloc] initWithFrame:CGRectMake((index_tab2*150),0,100,98)];
                    imageSource_selected_in_edit_form2 = 1;
                }
                else{
                    imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index_tab2*150),0,100,98)];
                }
                [self.scrollView_tab2 addSubview:picLbl_tab2];
                
                UIImage *image = [[UIImage alloc] initWithCGImage:asset.defaultRepresentation.fullScreenImage];
                double origionalratio= image.size.width/image.size.height;
                double Newheight=600.0f/origionalratio;
                image=[image scaleToSize:CGSizeMake(600.0f, Newheight)];
                imgView.image = image;
                imgView.userInteractionEnabled  = YES;
                UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
                delbtn.frame = CGRectMake(0, 0, 15, 15);
                [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
                delbtn.alpha = 1.0;
                delbtn.tag = index_tab2-1;
                delbtn.userInteractionEnabled = YES;
                if ([modeValue isEqualToString:@"edit"]){
                    [delbtn addTarget:self action:@selector(deleteTapped_foredit_fortab2:) forControlEvents:UIControlEventTouchUpInside];
                }
                else{
                    [delbtn addTarget:self action:@selector(deleteTapped_fortab2:) forControlEvents:UIControlEventTouchUpInside];
                }
                [self.scrollView_tab2 touchesShouldCancelInContentView:delbtn];
                [imgView addSubview:delbtn];
                index_tab2++;
                dataImage_tab2 = [[NSData alloc]init];
                dataImage_tab2 = UIImageJPEGRepresentation(imgView.image, 0.1);
                
                [imageDataArr_tab2 addObject:dataImage_tab2];
                
                self.scrollView_tab2.delaysContentTouches = NO;
                self.scrollView_tab2.canCancelContentTouches = YES;
                [self.scrollView_tab2 addSubview:imgView];
                
                [self.scrollView_tab2 setUserInteractionEnabled:YES];
                [self.scrollView_tab2 setContentSize:CGSizeMake(20+(index_tab2*150)+100,98)];
                
                if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"])
                {
                    
                    UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
                    CGRect imageScrollFrame = self.scrollView_tab2.frame;
                    imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
                    self.scrollView_tab2.frame = imageScrollFrame;
                    [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
                    [self.scrollFortab2 addSubview:self.scrollView_tab2];
                    
                }
                else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
                    UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
                    CGRect imageScrollFrame = self.scrollView_tab2.frame;
                    imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
                    self.scrollView_tab2.frame = imageScrollFrame;
                    [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
                    [self.scrollFortab2 addSubview:self.scrollView_tab2];
                }
                else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
                    UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
                    CGRect imageScrollFrame = self.scrollView_tab2.frame;
                    imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+15;
                    self.scrollView_tab2.frame = imageScrollFrame;
                    [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
                    [self.scrollFortab2 addSubview:self.scrollView_tab2];
                }
                
                //added 11 march
                [self set_preset_scrollView_tab2];
            }
            
        }
        
        [self.scrollView setHidden:NO];
        [self.scrollView_tab2 setHidden:NO];
        
    }
     ];
}
UIImagePickerController *imagePicker;
bool val55;
OverlayView *overlay;
-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (buttonIndex == 0) {
        self.pickerController = [[WSAssetPickerController alloc] initWithDelegate:self];
        
        [self presentViewController:self.pickerController animated:YES completion:NULL];
    }
    if (buttonIndex == 1)
    {
        
        imagePicker = [[UIImagePickerController alloc] init];
        imagePicker.delegate = self;
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        imagePicker.showsCameraControls = NO;
        imagePicker.cameraCaptureMode = UIImagePickerControllerCameraCaptureModePhoto;
        overlay = [[OverlayView alloc] initWithFrame:CGRectMake(0, 1024-40, 768, 40)];
        [overlay.done addTarget:self action:@selector(cameraDone) forControlEvents:UIControlEventTouchUpInside];
        [overlay.takeAnother addTarget:self action:@selector(cameraTakeAnother) forControlEvents:UIControlEventTouchUpInside];
        [overlay.finishBtn addTarget:self action:@selector(cameraFinish) forControlEvents:UIControlEventTouchUpInside];
        // Insert the overlay:
        imagePicker.cameraOverlayView = overlay;
        
        [[UIDevice currentDevice] beginGeneratingDeviceOrientationNotifications];
        [[NSNotificationCenter defaultCenter]
         addObserver:self selector:@selector(orientationChanged:)
         name:UIDeviceOrientationDidChangeNotification
         object:[UIDevice currentDevice]];
        
        // Allow editing of image ?
        //        [imagePicker setCameraDevice:
        //         UIImagePickerControllerCameraDeviceFront];
        //        [imagePicker setAllowsEditing:YES];
        
        [self presentViewController:imagePicker animated:YES completion:nil];
        
        
    }
    
}

- (void) orientationChanged:(NSNotification *)note2
{
    ////NSLog(@"%@",note2);
    UIDevice * device = note2.object;
    switch(device.orientation)
    {
        case UIDeviceOrientationPortrait:
            /* start special animation */
            overlay.frame = CGRectMake(0, 1024-40, 768, 40);
            
            CGRect frame11 = overlay.toolbar.frame;
            frame11.size.width = 768;
            overlay.toolbar.frame = frame11;
            
            CGRect fame4 = overlay.takeAnother.frame;
            fame4.origin.x = overlay.done.frame.origin.x+overlay.done.frame.size.width+20;
            overlay.takeAnother.frame = fame4;
            
            CGRect frame5 = overlay.finishBtn.frame;
            frame5.origin.x = overlay.toolbar.frame.size.width-80;
            overlay.finishBtn.frame = frame5;
            break;
            
        case UIDeviceOrientationLandscapeLeft:
            /* start special animation */
            overlay.frame = CGRectMake(0, 768-40, 1024, 40);
            
            CGRect frame = overlay.toolbar.frame;
            frame.size.width = 1024;
            overlay.toolbar.frame = frame;
            
            CGRect fame2 = overlay.takeAnother.frame;
            fame2.origin.x = overlay.done.frame.origin.x+overlay.done.frame.size.width+20;;
            overlay.takeAnother.frame = fame2;
            
            CGRect frame6 = overlay.finishBtn.frame;
            frame6.origin.x = overlay.toolbar.frame.size.width-80;
            overlay.finishBtn.frame = frame6;
            break;
        case UIDeviceOrientationLandscapeRight:
            /* start special animation */
            overlay.frame = CGRectMake(0, 768-40, 1024, 40);
            CGRect frame1 = overlay.toolbar.frame;
            frame1.size.width = 1024;
            overlay.toolbar.frame = frame1;
            
            CGRect fame3 = overlay.takeAnother.frame;
            fame3.origin.x = overlay.done.frame.origin.x+overlay.done.frame.size.width+20;;
            overlay.takeAnother.frame = fame3;
            
            CGRect frame7 = overlay.finishBtn.frame;
            frame7.origin.x = overlay.toolbar.frame.size.width-80;
            overlay.finishBtn.frame = frame7;
            break;
        default:
            break;
    };
}

-(void)cameraDone{
    val55 = 1;
    [imagePicker takePicture];
    
}

-(void)cameraTakeAnother{
    val55 = 0;
    [imagePicker takePicture];
}

-(void)cameraFinish{
    [imagePicker dismissViewControllerAnimated:YES completion:nil];
}

-(void)addPictureToScrollview:(UIImage *)image{
    [imagePicker dismissModalViewControllerAnimated:NO];
    if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
        ////////NSLog(@"adddd1");
        [self.scrollView addSubview:picLbl];
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index*150),0,100,98)];
        
        imgView.image = image;
        imgView.userInteractionEnabled  = YES;
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = index-1;
        delbtn.userInteractionEnabled = YES;
        if ([modeValue isEqualToString:@"new"]) {
            [delbtn addTarget:self action:@selector(deleteTapped:) forControlEvents:UIControlEventTouchUpInside];
        }
        else if ([modeValue isEqualToString:@"edit"]){
            [delbtn addTarget:self action:@selector(deleteTapped_foredit:) forControlEvents:UIControlEventTouchUpInside];
        }
        [self.scrollView touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        index++;
        dataImage = [[NSData alloc]init];
        dataImage =UIImageJPEGRepresentation(imgView.image, 0.1);// UIImagePNGRepresentation(imgView.image);
        [imageDataArr addObject:dataImage];
        
        
        [self.scrollView addSubview:imgView];
        
        [self.scrollView setContentSize:CGSizeMake((150*index),98)];
        if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
            CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
            CGRect scrVframe = self.scrollView.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100;
            self.scrollView.frame= scrVframe;
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height)];
            //[self.scrollFortab1 addSubview:self.scrollView];
            
            CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
            sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
            self.scrollView_forsketch.frame = sketchScrollFrame;
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
        }
        
        if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
            CGRect txfdframe = viewforMounttypeOM.frame;
            CGRect scrVframe = self.scrollView.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10;
            self.scrollView.frame= scrVframe;
            //[self.scrollFortab1 addSubview:self.scrollView];
            
            CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
            sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
            self.scrollView_forsketch.frame = sketchScrollFrame;
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
            
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
            
        }
        
    }
    
    if ([productNameLbl.text isEqualToString:@"Drapery + Hardware and Verticals"]){
        ////////NSLog(@"adddd2");
        [self.scrollView_tab2 addSubview:picLbl_tab2];
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index_tab2*150),0,100,98)];
        
        imgView.image = image;
        imgView.userInteractionEnabled  = YES;
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = index_tab2-1;
        delbtn.userInteractionEnabled = YES;
        if ([modeValue isEqualToString:@"edit"]){
            [delbtn addTarget:self action:@selector(deleteTapped_foredit_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        }
        else{
            [delbtn addTarget:self action:@selector(deleteTapped_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        }
        [self.scrollView_tab2 touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        index_tab2++;
        dataImage_tab2 = [[NSData alloc]init];
        dataImage_tab2 =UIImageJPEGRepresentation(imgView.image, 0.1); //UIImagePNGRepresentation(imgView.image);
        
        [imageDataArr_tab2 addObject:dataImage_tab2];
        
        
        [self.scrollView_tab2 addSubview:imgView];
        
        [self.scrollView_tab2 setContentSize:CGSizeMake((150*index_tab2),98)];
        
        if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
            UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            CGRect imageScrollFrame = self.scrollView_tab2.frame;
            
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
            self.scrollView_tab2.frame = imageScrollFrame;
            
            [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
            [self.scrollFortab2 addSubview:self.scrollView_tab2];
            
        }
        
        else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
            UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            CGRect imageScrollFrame = self.scrollView_tab2.frame;
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
            self.scrollView_tab2.frame = imageScrollFrame;
            [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
            [self.scrollFortab2 addSubview:self.scrollView_tab2];
        }
        
        else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
            UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];;
            CGRect imageScrollFrame = self.scrollView_tab2.frame;
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+15;
            self.scrollView_tab2.frame = imageScrollFrame;
            [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
            [self.scrollFortab2 addSubview:self.scrollView_tab2];
        }
    }
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(NSDictionary *)editingInfo
{
    
    if ([productNameLbl.text isEqualToString:@"SHADES + BLINDS"]){
        ////////NSLog(@"adddd1");
        [self.scrollView addSubview:picLbl];
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index*150),0,100,98)];
        double origionalratio= image.size.width/image.size.height;
        double Newheight=600.0f/origionalratio;
        image=[image scaleToSize:CGSizeMake(600.0f, Newheight)];
        imgView.image = image;
        imgView.userInteractionEnabled  = YES;
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = index-1;
        delbtn.userInteractionEnabled = YES;
        if ([modeValue isEqualToString:@"new"]) {
            [delbtn addTarget:self action:@selector(deleteTapped:) forControlEvents:UIControlEventTouchUpInside];
        }
        else if ([modeValue isEqualToString:@"edit"]){
            [delbtn addTarget:self action:@selector(deleteTapped_foredit:) forControlEvents:UIControlEventTouchUpInside];
        }
        [self.scrollView touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        
        
        index++;
        dataImage = [[NSData alloc]init];
        dataImage = UIImageJPEGRepresentation(image, 0.1);
        [imageDataArr addObject:dataImage];
        
        
        [self.scrollView addSubview:imgView];
        
        [self.scrollView setContentSize:CGSizeMake((150*index)+100,98)];
        if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected ==YES ) {
            CGRect txfdframe = ((UIButton *)[self.viewforControlls viewWithTag:10]).frame;
            CGRect scrVframe = self.scrollView.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+100;
            self.scrollView.frame= scrVframe;
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView.frame.origin.y+self.scrollView.frame.size.height)];
            //[self.scrollFortab1 addSubview:self.scrollView];
            
            CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
            sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
            self.scrollView_forsketch.frame = sketchScrollFrame;
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
        }
        
        if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected ==YES ) {
            CGRect txfdframe = viewforMounttypeOM.frame;
            CGRect scrVframe = self.scrollView.frame;
            scrVframe.origin.y = txfdframe.origin.y+txfdframe.size.height+10;
            self.scrollView.frame= scrVframe;
            //[self.scrollFortab1 addSubview:self.scrollView];
            
            CGRect sketchScrollFrame = self.scrollView_forsketch.frame;
            sketchScrollFrame.origin.y = self.scrollView.frame.origin.y+self.scrollView.frame.size.height+20;
            self.scrollView_forsketch.frame = sketchScrollFrame;
            [self.scrollFortab1 addSubview:self.scrollView_forsketch];
            
            [self.scrollFortab1 setContentSize:CGSizeMake(680, self.scrollView_forsketch.frame.origin.y+self.scrollView_forsketch.frame.size.height)];
            
        }
        [self.scrollFortab1 addSubview:self.scrollView];
        //added 11 march
        [self set_preset_scrollView];
    }
    
    if ([productNameLbl.text isEqualToString:@"Drapery + Hardware and Verticals"]){
        ////////NSLog(@"adddd2");
        [self.scrollView_tab2 addSubview:picLbl_tab2];
        imgView = [[UIImageView alloc] initWithFrame:CGRectMake(20+(index_tab2*150),0,100,98)];
        double origionalratio= image.size.width/image.size.height;
        double Newheight=600.0f/origionalratio;
        image=[image scaleToSize:CGSizeMake(600.0f, Newheight)];
        imgView.image = image;
        imgView.userInteractionEnabled  = YES;
        UIButton *delbtn = [UIButton buttonWithType:UIButtonTypeCustom];
        delbtn.frame = CGRectMake(0, 0, 15, 15);
        [delbtn setBackgroundImage:[UIImage imageNamed:@"cancelBtn.png"] forState:UIControlStateNormal];
        delbtn.alpha = 1.0;
        delbtn.tag = index_tab2-1;
        delbtn.userInteractionEnabled = YES;
        if ([modeValue isEqualToString:@"edit"]){
            [delbtn addTarget:self action:@selector(deleteTapped_foredit_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        }
        else{
            [delbtn addTarget:self action:@selector(deleteTapped_fortab2:) forControlEvents:UIControlEventTouchUpInside];
        }
        [self.scrollView_tab2 touchesShouldCancelInContentView:delbtn];
        [imgView addSubview:delbtn];
        index_tab2++;
        dataImage_tab2 = [[NSData alloc]init];
        dataImage_tab2 = UIImageJPEGRepresentation(imgView.image, 0.1);//UIImagePNGRepresentation(imgView.image);
        
        [imageDataArr_tab2 addObject:dataImage_tab2];
        
        
        [self.scrollView_tab2 addSubview:imgView];
        
        [self.scrollView_tab2 setContentSize:CGSizeMake((150*index_tab2)+100,98)];
        
        if ([productnameTF_tab2.text isEqualToString:@"XL Vertical"]) {
            UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            CGRect imageScrollFrame = self.scrollView_tab2.frame;
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
            self.scrollView_tab2.frame = imageScrollFrame;
            [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
            [self.scrollFortab2 addSubview:self.scrollView_tab2];
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Panel Systems"]) {
            UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80];
            CGRect imageScrollFrame = self.scrollView_tab2.frame;
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+20;
            self.scrollView_tab2.frame = imageScrollFrame;
            [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
            [self.scrollFortab2 addSubview:self.scrollView_tab2];
        }
        else if ([productnameTF_tab2.text isEqualToString:@"Drapery"]) {
            UIButton *txtfd = (UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94];
            CGRect imageScrollFrame = self.scrollView_tab2.frame;
            imageScrollFrame.origin.y = txtfd.frame.origin.y+txtfd.frame.size.height+15;
            self.scrollView_tab2.frame = imageScrollFrame;
            [self.scrollFortab2 setContentSize:CGSizeMake(680, self.scrollView_tab2.frame.origin.y+self.scrollView_tab2.frame.size.height)];
            [self.scrollFortab2 addSubview:self.scrollView_tab2];
        }
        //added 11 march
        [self set_preset_scrollView_tab2];
    }
    if (val55 == 1) {
        
        [picker dismissModalViewControllerAnimated:NO];
    }
}

//added 11 march
-(void)upload_preset_sketch_ImageinServer:(int)indexx imagesAerr:(NSMutableArray *)imageArr webMeasurementId:(NSString *)webMid
{
    /////////////////saving image to folder in server with name////////////////
    NSData *imagedata2=[imageArr objectAtIndex:indexx];
    if ( imagedata2!=nil )
    {
        
        NSString *string=[NSString stringWithFormat:@"http://www.rstbuilders.com/crm/upload-measurement-images.php?measurementID=%i&leadID=%@&imageCounter=%i&uploadType=presetSketchImage",[webMid intValue],[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],indexx+1];
                NSLog(@"url_string_for_preset_image   = %@",string);
        NSURL *url=[NSURL URLWithString:string];
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
        [request setURL:url];
        [request setHTTPMethod:@"POST"];
        
        
        //    /*
        //     add some header info now
        //     we always need a boundary when we post a file
        //     also we need to set the content type
        //
        //     You might want to generate a random boundary.. this is just the same
        //     as my output from wireshark on a valid html post
        //     */
        
        
        NSString *boundary = @"---------------------------14737809831466499882746641449";
        NSString *contentType = [NSString stringWithFormat:@"multipart/form-data; boundary=%@",boundary];
        [request addValue:contentType forHTTPHeaderField: @"Content-Type"];
        /*
         //     */
        //
        NSMutableData *body = [NSMutableData data];
        [body appendData:[[NSString stringWithFormat:@"--%@\r\n",boundary] dataUsingEncoding:NSUTF8StringEncoding]];
        [body appendData:[@"Content-Disposition: form-data; name=\"userfile\"; filename=\".jpg\"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        [body appendData:[@"Content-Type: application/octet-stream\r\n\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        
        [body appendData:[NSData dataWithData:imagedata2]];
        [body appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        
        [body appendData:[[NSString stringWithFormat:@"--%@--\r\n", boundary] dataUsingEncoding:NSUTF8StringEncoding]];
        // setting the body of the post to the reqeust
        [request setHTTPBody:body];
        // now lets make the connection to the web
        NSData *returnData = [NSURLConnection sendSynchronousRequest:request returningResponse:nil error:nil];
        NSString*str22 = [[NSString alloc] initWithData:returnData encoding:NSUTF8StringEncoding];
        NSString * str2=[str22 stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        str2=[str2 stringByReplacingOccurrencesOfString:@"\n" withString:@""];
        //        imagetoserver = str2;
                NSLog(@"preset_imagetoserverww=%@",str2);
        
    }
    
    
    
    
}

-(void)uploadImageinServer:(int)indexx imagesAerr:(NSMutableArray *)imageArr webMeasurementId:(NSString *)webMid
{
    
    
    /////////////////saving image to folder in server with name////////////////
    NSData *imagedata2=[imageArr objectAtIndex:indexx];
    UIImage *image = [UIImage imageWithData:imagedata2];
    imgView.image = image;
    NSLog(@"image at sync...%@",image);
    
    
    if ( imagedata2!=nil ) {
        NSString *string=[NSString stringWithFormat:@"http://www.rstbuilders.com/crm/upload-measurement-images.php?measurementID=%i&leadID=%@&imageCounter=%i&uploadType=measurementImage",[webMid intValue],[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],indexx+1];
        NSLog(@"url_string_for_measurement_image   = %@",string);
        NSURL *url=[NSURL URLWithString:string];
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
        [request setURL:url];
        [request setHTTPMethod:@"POST"];
        
        
        //    /*
        //     add some header info now
        //     we always need a boundary when we post a file
        //     also we need to set the content type
        //
        //     You might want to generate a random boundary.. this is just the same
        //     as my output from wireshark on a valid html post
        //     */
        
        
        NSString *boundary = @"---------------------------14737809831466499882746641449";
        NSString *contentType = [NSString stringWithFormat:@"multipart/form-data; boundary=%@",boundary];
        [request addValue:contentType forHTTPHeaderField: @"Content-Type"];
        /*
         //     */
        //
        NSMutableData *body = [NSMutableData data];
        [body appendData:[[NSString stringWithFormat:@"--%@\r\n",boundary] dataUsingEncoding:NSUTF8StringEncoding]];
        [body appendData:[@"Content-Disposition: form-data; name=\"userfile\"; filename=\".jpg\"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        [body appendData:[@"Content-Type: application/octet-stream\r\n\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        
        [body appendData:[NSData dataWithData:imagedata2]];
        [body appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        
        [body appendData:[[NSString stringWithFormat:@"--%@--\r\n", boundary] dataUsingEncoding:NSUTF8StringEncoding]];
        // setting the body of the post to the reqeust
        [request setHTTPBody:body];
        // now lets make the connection to the web
        NSData *returnData = [NSURLConnection sendSynchronousRequest:request returningResponse:nil error:nil];
        NSString*str22 = [[NSString alloc] initWithData:returnData encoding:NSUTF8StringEncoding];
        NSString * str2=[str22 stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        str2=[str2 stringByReplacingOccurrencesOfString:@"\n" withString:@""];
        //        imagetoserver = str2;
         NSLog(@"imagetoserverww=%@",str2);
        
    }
    
    
    
    
}

-(void)uploadSketchImage:(int)indexx imageData:(NSData *)sketchStr webMid:(int)mid{
    imagedata = sketchStr;
    NSString *webmeasurementid = [[NSUserDefaults standardUserDefaults]valueForKey:@"measurementidforimage"];
    //    imagedata=  [[NSUserDefaults standardUserDefaults]objectForKey:@"sketchimagedt"];
    //    ////NSLog(@"imagedata=%@",imagedata);
    if ( imagedata!=nil ) {
        NSString *string=[NSString stringWithFormat:@"http://www.rstbuilders.com/crm/upload-measurement-images.php?measurementID=%i&leadID=%@&imageCounter=%i&uploadType=sketchImage",mid,[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],indexx+1];
        NSURL *url=[NSURL URLWithString:string];
        ////NSLog(@"imagedata_url=%@",url);
        NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];
        [request setURL:url];
        [request setHTTPMethod:@"POST"];
        
        //    /*
        //     add some header info now
        //     we always need a boundary when we post a file
        //     also we need to set the content type
        //
        //     You might want to generate a random boundary.. this is just the same
        //     as my output from wireshark on a valid html post
        //     */
        NSString *boundary = @"---------------------------14737809831466499882746641449";
        NSString *contentType = [NSString stringWithFormat:@"multipart/form-data; boundary=%@",boundary];
        [request addValue:contentType forHTTPHeaderField: @"Content-Type"];
        /*
         //     */
        //
        NSMutableData *body = [NSMutableData data];
        [body appendData:[[NSString stringWithFormat:@"--%@\r\n",boundary] dataUsingEncoding:NSUTF8StringEncoding]];
        [body appendData:[@"Content-Disposition: form-data; name=\"userfile\"; filename=\".jpg\"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        [body appendData:[@"Content-Type: application/octet-stream\r\n\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        
        [body appendData:[NSData dataWithData:imagedata]];
        [body appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
        
        [body appendData:[[NSString stringWithFormat:@"--%@--\r\n", boundary] dataUsingEncoding:NSUTF8StringEncoding]];
        // setting the body of the post to the reqeust
        [request setHTTPBody:body];
        // now lets make the connection to the web
        NSData *returnData = [NSURLConnection sendSynchronousRequest:request returningResponse:nil error:nil];
        NSString*str22 = [[NSString alloc] initWithData:returnData encoding:NSUTF8StringEncoding];
        NSString * str2=[str22 stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        str2=[str2 stringByReplacingOccurrencesOfString:@"\n" withString:@""];
        //        imagetoserver=str2;
        NSLog(@"sketch_image=%@",str2);
        
        
        //        [self sendsketchimageUrltoServer];
    }
    
}



-(void)checkAndCreateDatabase{
    ////////NSLog(@"checking data base");
    NSArray * documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    
    NSString * documentDir = [documentPaths objectAtIndex:0];
    
    //what would be the name of my database file?
    databasePath = [documentDir stringByAppendingPathComponent:@"keyideas_rstbuilders.sqlite"];
    BOOL success;
    
    //get file manager for file operations
    NSFileManager * fileManager = [NSFileManager defaultManager];
    
    //does the file already exist?
    success = [fileManager fileExistsAtPath:databasePath];
    if (success) {
        return;
    }
    //where is the starting database in the app wrapper?
    NSString * databasePathFromApp = [[NSBundle mainBundle]pathForResource:@"keyideas_rstbuilders" ofType:@"sqlite"];
    
    //copy it to document directories
    [fileManager copyItemAtPath:databasePathFromApp toPath:databasePath error:nil];
    
}
-(void)readDataFromDatabase{
    
    ////////NSLog(@"adding data base");
    customerDetails * custObj;
    // sqlite3 * database ;
    
    //  persons = [[NSMutableArray alloc]init];
    
    //open database file
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK) {
        ////////NSLog(@"IN DATABASE");
        insertSQL = [NSString stringWithFormat:@"select * from rst_lead where localLeadID=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
        const char *sqlStatement = [insertSQL UTF8String];
        sqlite3_stmt * compiledStatement;
        
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL)==SQLITE_OK) {
            ////////NSLog(@"in database");
            while (sqlite3_step(compiledStatement)==SQLITE_ROW) {
                custObj = [[customerDetails alloc]init];
                //                ////////NSLog(@"query executed");
                
                custObj.manufac_name = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 3)];
                custObj.lead_hash = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 2)];
                custObj.date = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 18)];
                custObj.nameStr = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 4)];
                custObj.lastName = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 5)];
                custObj.emailStr = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 10)];
                custObj.addressStr = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 6)];
                custObj.phoneStr = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 7)];
                ////////NSLog(@"name is %@ email is %@ addres is %@ phone is %@ ", custObj.nameStr, custObj.emailStr , custObj.addressStr , custObj.phoneStr  );
            }
        }
        else
        {
            ////////NSLog(@"problem in query statement");
        }
        sqlite3_finalize(compiledStatement);
    }sqlite3_close(database);
    [self displayUserDetails:custObj];
}


-(void)readDataFromDatabaseforMeasurements
{
     //NSLog(@"readDataFromDatabaseforMeasurements.....");
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        insertSQL = [NSString stringWithFormat:@"select * from rst_lead_measurement_info where localLeadID=%@ and MID=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"midvalue"]];
        //NSLog(@"query is-:%@",insertSQL);
        const char *sqlStatement = [insertSQL UTF8String];
        sqlite3_stmt * compiledStatement;
        
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL)==SQLITE_OK) {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                
                
                
                leadMeasObj = [[leadMeasurementInfotab2 alloc]init];
                leadMeasObj.mID = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 4)];
                leadMeasObj.localMeasurementID = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 3)];
                
                leadMeasObj.webMeasurementID = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 2)];
                leadMeasObj.productID = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 6)];
                leadMeasObj.quantity = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 73)];
                leadMeasObj.formType = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 5)];
                leadMeasObj.product = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 7)];
                leadMeasObj.mountType = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 8)];
                if ([leadMeasObj.mountType isEqualToString:@"(null)"]) {
                    leadMeasObj.mountType = @"";
                }
                leadMeasObj.rollType = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 9)];
                if ([leadMeasObj.rollType isEqualToString:@"(null)"]) {
                    leadMeasObj.rollType = @"";
                }
                leadMeasObj.material = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 10)];
                if ([leadMeasObj.material isEqualToString:@"(null)"]) {
                    leadMeasObj.material = @"";
                }
                
                leadMeasObj.widthFt = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 11)];
                
                if ([leadMeasObj.widthFt isEqualToString:@"(null)"]||(leadMeasObj.widthFt==NULL)||([leadMeasObj.widthFt length]==0))
                {
                    
                    leadMeasObj.widthFt = @"0";
                    
                }
                
                leadMeasObj.widthInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 12)];
                
                if([leadMeasObj.widthInch isEqualToString:@"2/8"]){
                    leadMeasObj.widthInch = @"1/4";
                }
                else if([leadMeasObj.widthInch isEqualToString:@"4/8"]){
                    leadMeasObj.widthInch = @"1/2";
                }
                else if([leadMeasObj.widthInch isEqualToString:@"6/8"]){
                    leadMeasObj.widthInch = @"3/4";
                }
                
                
                
                               
                leadMeasObj.heightFt = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 13)];
                if ([leadMeasObj.heightFt isEqualToString:@"(null)"]||(leadMeasObj.heightFt==NULL)||([leadMeasObj.heightFt length]==0))
                {
                    leadMeasObj.heightFt = @"0";
                }
                
                
                leadMeasObj.heightInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 14)];
                if([leadMeasObj.heightInch isEqualToString:@"2/8"])
                {
                    leadMeasObj.heightInch = @"1/4";
                }
                else if([leadMeasObj.heightInch isEqualToString:@"4/8"]){
                    leadMeasObj.heightInch = @"1/2";
                }
                else if([leadMeasObj.heightInch isEqualToString:@"6/8"]){
                    leadMeasObj.heightInch = @"3/4";
                }

                
                leadMeasObj.depthFt = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 15)];
                
                if ([leadMeasObj.depthFt isEqualToString:@"(null)"]||(leadMeasObj.depthFt==NULL)||([leadMeasObj.depthFt length]==0)) {
                    leadMeasObj.depthFt = @"0";
                }
                
                leadMeasObj.depthInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 16)];
                
                if([leadMeasObj.depthInch isEqualToString:@"2/8"])
                {
                    leadMeasObj.depthInch = @"1/4";
                }
                else if([leadMeasObj.depthInch isEqualToString:@"4/8"]){
                    leadMeasObj.depthInch = @"1/2";
                }
                else if([leadMeasObj.depthInch isEqualToString:@"6/8"]){
                    leadMeasObj.depthInch = @"3/4";
                }
                
                leadMeasObj.controlPosition = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 31)];
                if ([leadMeasObj.controlPosition isEqualToString:@"(null)"]) {
                    leadMeasObj.controlPosition = @"";
                }
                leadMeasObj.totalHardwareWidth = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 29)];
                
                if ([leadMeasObj.totalHardwareWidth isEqualToString:@"(null)"]||(leadMeasObj.totalHardwareWidth==NULL)||([leadMeasObj.totalHardwareWidth length]==0))
                {
                    
                    leadMeasObj.totalHardwareWidth = @"0";
                    
                }
                
                leadMeasObj.creationDate = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 75)];
                leadMeasObj.updationDate = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 76)];
                leadMeasObj.windowSidemark = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 34)];
                if ([leadMeasObj.windowSidemark isEqualToString:@"(null)"]) {
                    leadMeasObj.windowSidemark = @"";
                }
                
                leadMeasObj.laye = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 35)];
                if ([leadMeasObj.laye isEqualToString:@"(null)"]) {
                    leadMeasObj.laye = @"";
                }
                leadMeasObj.type = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 36)];
                if ([leadMeasObj.type isEqualToString:@"(null)"]) {
                    leadMeasObj.type = @"";
                }
                leadMeasObj.optionalFeatures =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 37)];
                if ([leadMeasObj.optionalFeatures isEqualToString:@"(null)"]) {
                    leadMeasObj.optionalFeatures = @"";
                }
                leadMeasObj.extentionBracket =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 38)];
                if ([leadMeasObj.extentionBracket isEqualToString:@"(null)"]) {
                    leadMeasObj.extentionBracket = @"";
                }
                leadMeasObj.mountType2 =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 39)];
                if ([leadMeasObj.mountType2 isEqualToString:@"(null)"]) {
                    leadMeasObj.mountType2 = @"";
                }
                
                leadMeasObj.leftFt =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 19)];
                
                if ([leadMeasObj.leftFt isEqualToString:@"(null)"]||(leadMeasObj.leftFt==NULL)||([leadMeasObj.leftFt length]==0))
                {
                    leadMeasObj.leftFt = @"0";
                }
                
                leadMeasObj.leftInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 20)];
                
                if([leadMeasObj.leftInch isEqualToString:@"2/8"]){
                    leadMeasObj.leftInch = @"1/4";
                }
                else if([leadMeasObj.leftInch isEqualToString:@"4/8"]){
                    leadMeasObj.leftInch = @"1/2";
                }
                else if([leadMeasObj.leftInch isEqualToString:@"6/8"]){
                    leadMeasObj.leftInch = @"3/4";
                }

                
                leadMeasObj.rightFt =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 21)];
                
                if ([leadMeasObj.rightFt isEqualToString:@"(null)"]||(leadMeasObj.rightFt==NULL)||([leadMeasObj.rightFt length]==0))
                {
                    
                    leadMeasObj.rightFt = @"0";
                    
                }
                
                leadMeasObj.rightInch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 22)];
                if([leadMeasObj.rightInch isEqualToString:@"2/8"]){
                    leadMeasObj.rightInch = @"1/4";
                }
                else if([leadMeasObj.rightInch isEqualToString:@"4/8"]){
                    leadMeasObj.rightInch = @"1/2";
                }
                else if([leadMeasObj.rightInch isEqualToString:@"6/8"]){
                    leadMeasObj.rightInch = @"3/4";
                }

                leadMeasObj.bracketFt =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 23)];
                if ([leadMeasObj.bracketFt isEqualToString:@"(null)"]||(leadMeasObj.bracketFt==NULL)||([leadMeasObj.bracketFt length]==0)) {
                    leadMeasObj.bracketFt = @"0";
                }
                
                leadMeasObj.bracketInch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 24)];
                if([leadMeasObj.bracketInch isEqualToString:@"2/8"]){
                    leadMeasObj.bracketInch = @"1/4";
                }
                else if([leadMeasObj.bracketInch isEqualToString:@"4/8"]){
                    leadMeasObj.bracketInch = @"1/2";
                }
                else if([leadMeasObj.bracketInch isEqualToString:@"6/8"]){
                    leadMeasObj.bracketInch = @"3/4";
                }

                
                //leadMeasObj.totalWidth =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 32)];
                
                
                
                leadMeasObj.topFt =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 25)];
                if ([leadMeasObj.topFt isEqualToString:@"(null)"]||(leadMeasObj.topFt==NULL)||([leadMeasObj.topFt length]==0)) {
                    leadMeasObj.topFt = @"0";
                }
                
                
                leadMeasObj.topInch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 26)];
                if([leadMeasObj.topInch isEqualToString:@"2/8"]){
                    leadMeasObj.topInch = @"1/4";
                }
                else if([leadMeasObj.topInch isEqualToString:@"4/8"]){
                    leadMeasObj.topInch = @"1/2";
                }
                else if([leadMeasObj.topInch isEqualToString:@"6/8"]){
                    leadMeasObj.topInch = @"3/4";
                }
                
                leadMeasObj.bottomFt =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 27)];
                if ([leadMeasObj.bottomFt isEqualToString:@"(null)"]||(leadMeasObj.bottomFt==NULL)||([leadMeasObj.bottomFt length]==0)) {
                    leadMeasObj.bottomFt = @"0";
                }
                
                leadMeasObj.bottomInch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 28)];
                if([leadMeasObj.bottomInch isEqualToString:@"2/8"]){
                    leadMeasObj.bottomInch = @"1/4";
                }
                else if([leadMeasObj.bottomInch isEqualToString:@"4/8"]){
                    leadMeasObj.bottomInch = @"1/2";
                }
                else if([leadMeasObj.bottomInch isEqualToString:@"6/8"]){
                    leadMeasObj.bottomInch = @"3/4";
                }

                //leadMeasObj.totalHeight =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 35)];
                
                leadMeasObj.oldTreatment =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 40)];
                
                
                if ([leadMeasObj.oldTreatment isEqualToString:@"(null)"]) {
                    leadMeasObj.oldTreatment = @"";
                }
                leadMeasObj.headrailSize =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 41)];
                if ([leadMeasObj.headrailSize isEqualToString:@"(null)"]) {
                    leadMeasObj.headrailSize = @"";
                }
                leadMeasObj.cordType =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 42)];
                if ([leadMeasObj.cordType isEqualToString:@"(null)"]) {
                    leadMeasObj.cordType = @"";
                }
                leadMeasObj.tdbu =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 43)];
                if ([leadMeasObj.tdbu isEqualToString:@"(null)"]) {
                    leadMeasObj.tdbu = @"";
                }
                leadMeasObj.roomLabel =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 44)];
                if ([leadMeasObj.roomLabel isEqualToString:@"(null)"]) {
                    leadMeasObj.roomLabel = @"";
                }
                leadMeasObj.pairorSingle =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 45)];
                if ([leadMeasObj.pairorSingle isEqualToString:@"(null)"]) {
                    leadMeasObj.pairorSingle = @"";
                }
               // leadMeasObj.totalwidthCoverage =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 42)];
                if ([leadMeasObj.totalwidthCoverage isEqualToString:@"(null)"]||(leadMeasObj.totalwidthCoverage==NULL)||([leadMeasObj.totalwidthCoverage length]==0)) {
                    leadMeasObj.totalwidthCoverage = @"0";
                }
                
                
                leadMeasObj.hardwareWidth =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 29)];
                
                if ([leadMeasObj.hardwareWidth isEqualToString:@"(null)"]||(leadMeasObj.hardwareWidth==NULL)||([leadMeasObj.hardwareWidth length]==0))
                {
                    leadMeasObj.hardwareWidth = @"0";
                }
               // leadMeasObj.windowwallHeight =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 44)];
               // leadMeasObj.topofPole =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 45)];
                leadMeasObj.ceilingtofloor =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 46)];
                leadMeasObj.ctof_left_ft =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 48)];
                if ([leadMeasObj.ctof_left_ft isEqualToString:@"(null)"]||(leadMeasObj.ctof_left_ft==NULL)||([leadMeasObj.ctof_left_ft length]==0))
                {
                    leadMeasObj.ctof_left_ft = @"0";
                }
                leadMeasObj.ctof_left_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 49)];
                leadMeasObj.ctof_center_ft =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 50)];
                if ([leadMeasObj.ctof_center_ft isEqualToString:@"(null)"]||(leadMeasObj.ctof_center_ft==NULL)||([leadMeasObj.ctof_center_ft length]==0))
                {
                    leadMeasObj.ctof_center_ft = @"0";
                }
                leadMeasObj.ctof_center_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 51)];
                leadMeasObj.ctof_right_ft =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 52)];
                if ([leadMeasObj.ctof_right_ft isEqualToString:@"(null)"]||(leadMeasObj.ctof_right_ft==NULL)||([leadMeasObj.ctof_right_ft length]==0))
                {
                    leadMeasObj.ctof_right_ft = @"0";
                }
                leadMeasObj.ctof_right_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 53)];
                leadMeasObj.str_hard_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 30)];
                
                leadMeasObj.str_bottum_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 28)];
                leadMeasObj.str_puddle_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 59)];
                leadMeasObj.str_return_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 57)];
                leadMeasObj.str_offthefloor_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 61)];
                leadMeasObj.str_finished_inch =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 18)];
                
                
                
                
                if ([leadMeasObj.str_hard_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_hard_inch = @"";
                }
                if ([leadMeasObj.str_bottum_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_bottum_inch = @"";
                }
                if ([leadMeasObj.str_puddle_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_puddle_inch = @"";
                }
                if ([leadMeasObj.str_return_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_return_inch = @"";
                }
                if ([leadMeasObj.str_offthefloor_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_offthefloor_inch = @"";
                }
                if ([leadMeasObj.str_finished_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_finished_inch = @"";
                }
                if ([leadMeasObj.ctof_left_ft isEqualToString:@"(null)"]||(leadMeasObj.ctof_left_ft==NULL)||([leadMeasObj.ctof_left_ft length]==0)) {
                    leadMeasObj.ctof_left_ft = @"0";
                }
                if ([leadMeasObj.ctof_left_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.ctof_left_inch = @"";
                }
                if ([leadMeasObj.ctof_center_ft isEqualToString:@"(null)"]||(leadMeasObj.ctof_center_ft==NULL)||([leadMeasObj.ctof_center_ft length]==0)) {
                    leadMeasObj.ctof_center_ft = @"0";
                }
                if ([leadMeasObj.ctof_center_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.ctof_center_inch = @"";
                }
                if ([leadMeasObj.ctof_right_ft isEqualToString:@"(null)"]||(leadMeasObj.ctof_right_ft==NULL)||([leadMeasObj.ctof_right_ft length]==0)) {
                    leadMeasObj.ctof_right_ft = @"0";
                }
                if ([leadMeasObj.ctof_right_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.ctof_right_inch = @"";
                }
                if ([leadMeasObj.ceilingtofloor isEqualToString:@"(null)"]) {
                    leadMeasObj.ceilingtofloor = @"";
                }
                leadMeasObj.cordSide =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 54)];
                if ([leadMeasObj.cordSide isEqualToString:@"(null)"]) {
                    leadMeasObj.cordSide = @"";
                }
                leadMeasObj.functionality =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 55)];
                if ([leadMeasObj.functionality isEqualToString:@"(null)"]) {
                    leadMeasObj.functionality = @"";
                }
                leadMeasObj.returnn =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 56)];
                if ([leadMeasObj.returnn isEqualToString:@"(null)"])
                {
                    leadMeasObj.returnn = @"";
                }
                if(leadMeasObj.returnn.length>0){
                    leadMeasObj.returnStatus = @"1";
                }
                else{
                    leadMeasObj.returnStatus = @"0";
                }
                leadMeasObj.puddle =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 58)];
                if ([leadMeasObj.puddle isEqualToString:@"(null)"]) {
                    leadMeasObj.puddle = @"";
                }
                if(leadMeasObj.puddle.length>0){
                    leadMeasObj.puddleoffStatus = @"1";
                }
                
                
                leadMeasObj.oftheFloor =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 60)];
                
                
                if ([leadMeasObj.oftheFloor isEqualToString:@"(null)"]) {
                    leadMeasObj.oftheFloor = @"";
                }
                if(leadMeasObj.oftheFloor.length>0){
                    leadMeasObj.puddleoffStatus = @"2";
                }
                
                leadMeasObj.tiltType =[NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 62)];
                if ([leadMeasObj.tiltType isEqualToString:@"(null)"]) {
                    leadMeasObj.tiltType = @"";
                }
                leadMeasObj.spacerNeeded = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 63)];
                if ([leadMeasObj.spacerNeeded isEqualToString:@"(null)"]) {
                    leadMeasObj.spacerNeeded = @"";
                }
                leadMeasObj.systemm = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 64)];
                if ([leadMeasObj.systemm isEqualToString:@"(null)"]) {
                    leadMeasObj.systemm = @"";
                }
                leadMeasObj.winTitle = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 65)];
                
                leadMeasObj.installationNote = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 32)];
                if ([leadMeasObj.installationNote isEqualToString:@"(null)"]) {
                    leadMeasObj.installationNote = @"";
                }
                leadMeasObj.notes = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 33)];
                if ([leadMeasObj.notes isEqualToString:@"(null)"]) {
                    leadMeasObj.notes = @"";
                }
                leadMeasObj.finishedLength = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 17)];
                if ([leadMeasObj.finishedLength isEqualToString:@"(null)"]||(leadMeasObj.finishedLength==NULL)||([leadMeasObj.finishedLength length]==0)) {
                    leadMeasObj.finishedLength = @"0";
                }
                
                leadMeasObj.controlType = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 66)];
                if ([leadMeasObj.controlType isEqualToString:@"(null)"]) {
                    leadMeasObj.controlType = @"";
                }
                
                
                //                leadMeasObj.topofTrack = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 67)];
                //                if ([leadMeasObj.topofTrack isEqualToString:@"(null)"]) {
                //                    leadMeasObj.topofTrack = @"";
                //                }
                
                
                leadMeasObj.poleTopFt = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 67)];
                
                if ([leadMeasObj.poleTopFt isEqualToString:@"(null)"]||(leadMeasObj.poleTopFt==NULL)||([leadMeasObj.poleTopFt length]==0))
                {
                    leadMeasObj.poleTopFt = @"0";
                }
               
                leadMeasObj.poleTopInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 68)];
                if (leadMeasObj.poleTopInch.length ==0) {
                    leadMeasObj.poleTopInch = @"0";
                }
                leadMeasObj.poleHeightFt = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 69)];
                if ([leadMeasObj.poleHeightFt isEqualToString:@"(null)"]||(leadMeasObj.poleHeightFt==NULL)||([leadMeasObj.poleHeightFt length]==0))
                {
                    leadMeasObj.poleHeightFt = @"0";
                }
                leadMeasObj.poleHeightInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 70)];
                if (leadMeasObj.poleHeightInch.length ==0) {
                    leadMeasObj.poleHeightInch = @"0";
                }
                
                leadMeasObj.str_bottum_inch= [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 72)];
                if (leadMeasObj.str_bottum_inch.length ==0) {
                    leadMeasObj.str_bottum_inch = @"0";
                }
                if ([leadMeasObj.str_bottum_inch isEqualToString:@"(null)"]) {
                    leadMeasObj.str_bottum_inch = @"";
                }
                
                leadMeasObj.lining = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 74)];
                if (leadMeasObj.lining.length ==0)
                {
                    leadMeasObj.lining = @"";
                }
                
                leadMeasObj.poleTopFt = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 67)];
                
                if ([leadMeasObj.poleTopFt isEqualToString:@"(null)"]||(leadMeasObj.poleTopFt==NULL)||([leadMeasObj.poleTopFt length]==0))
                {
                    leadMeasObj.poleTopFt = @"0";
                }
                
                leadMeasObj.poleTopInch = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 68)];
                leadMeasObj.bootomOfCrownFloor = [NSString stringWithFormat:@"%s",(char * )sqlite3_column_text(compiledStatement, 71)];
                if ([leadMeasObj.bootomOfCrownFloor isEqualToString:@"(null)"]||(leadMeasObj.bootomOfCrownFloor==NULL)||([leadMeasObj.bootomOfCrownFloor length]==0))
                {
                    leadMeasObj.bootomOfCrownFloor = @"0";
                }
                if ([leadMeasObj.poleTopFt isEqualToString:@"(null)"]||(leadMeasObj.poleTopFt==NULL)||([leadMeasObj.poleTopFt length]==0)) {
                    leadMeasObj.poleTopFt = @"0";
                }
                if ([leadMeasObj.poleTopInch isEqualToString:@"(null)"]) {
                    leadMeasObj.poleTopInch = @"";
                }
                if ([leadMeasObj.poleHeightFt isEqualToString:@"(null)"]||(leadMeasObj.poleHeightFt==NULL)||([leadMeasObj.poleHeightFt length]==0)) {
                    leadMeasObj.poleHeightFt = @"0";
                }
                if ([leadMeasObj.poleHeightInch isEqualToString:@"(null)"]) {
                    leadMeasObj.poleHeightInch = @"";
                }
                if ([leadMeasObj.poleTopFt isEqualToString:@"(null)"]||(leadMeasObj.poleTopFt==NULL)||([leadMeasObj.poleTopFt length]==0)) {
                    leadMeasObj.poleTopFt = @"0";
                }
                if ([leadMeasObj.poleTopInch isEqualToString:@"(null)"]) {
                    leadMeasObj.poleTopInch = @"";
                }
                if ([leadMeasObj.bootomOfCrownFloor isEqualToString:@"(null)"]||(leadMeasObj.bootomOfCrownFloor==NULL)||([leadMeasObj.bootomOfCrownFloor length]==0)) {
                    leadMeasObj.bootomOfCrownFloor = @"0";
                }
                
                //////NSLog(@"widnowsidemark = %@, material = %@",leadMeasObj.windowSidemark,leadMeasObj.material);
                if ([leadMeasObj.formType isEqualToString:@"1"]) {
                    ////////NSLog(@"form 1");
                    [arrTab1 addObject:leadMeasObj];
                    
                }else
                {
                    ////////NSLog(@"form 2");
                    //                    if ([leadMeasObj.product isEqualToString:@"Panel System"] ||[leadMeasObj.product isEqualToString:@"XL Vertical"]) {
                    //                        leadMeasObj.topofPole = leadMeasObj.topofTrack;
                    //                    }
                    [arrTab2 addObject:leadMeasObj];
                    
                }
                
            }
            //NSLog(@"arrTab1.count = %i",[arrTab1 count]);
            //NSLog(@"arrTab2.count = %i",[arrTab2 count]);
            //NSLog(@"leadMeasObj.str_bottum_inch.... %@",leadMeasObj.str_bottum_inch);
            
        }
        else{
            ////////NSLog(@"problem in query statement");
        }
        sqlite3_finalize(compiledStatement);
    }sqlite3_close(database);
    
    if ([arrTab1 count]>0 && [arrTab2 count]==0) {
        //         tab1flag = 0;
        tab2flag = 0;
        tab1ClickedFlag = 1;
        tab2ClickedFlag = 0;
        textF_touch_flag_tab1 = 1;
        leadMeasObj = [arrTab1 objectAtIndex:0];
        //        form_twoBtn.userInteractionEnabled = NO;
        //////NSLog(@"selected 1= %@",selectedTreatmentType);
        productnameTF.text = leadMeasObj.product;
        [[NSUserDefaults standardUserDefaults]setValue:leadMeasObj.localMeasurementID forKey:@"formoneMeasid"];
        if ([leadMeasObj.productID isEqualToString:@"1"] ||[leadMeasObj.productID isEqualToString:@"2"]||[leadMeasObj.productID isEqualToString:@"3"]||[leadMeasObj.productID isEqualToString:@"4"]||[leadMeasObj.productID isEqualToString:@"5"] ||[leadMeasObj.productID isEqualToString:@"6"]) {
            if ([leadMeasObj.productID isEqualToString:@"1"]){
                selectedTreatmentType = @"1";
            }
            if ([leadMeasObj.productID isEqualToString:@"2"]){
                selectedTreatmentType = @"5";
            }
            
            if ([leadMeasObj.productID isEqualToString:@"3"]){
                selectedTreatmentType = @"2";
            }
            if ([leadMeasObj.productID isEqualToString:@"4"]){
                selectedTreatmentType = @"6";
            }
            if ([leadMeasObj.productID isEqualToString:@"6"]){
                selectedTreatmentType = @"8";
            }
            if ([leadMeasObj.productID isEqualToString:@"5"]){
                selectedTreatmentType = @"7";
            }
            form_1_productID = selectedTreatmentType;
            roomLabelValue1 = leadMeasObj.roomLabel;
            if([ leadMeasObj.roomLabel isEqualToString:@"OTHER"])
            {
               roomLabelValue1= leadMeasObj.winTitle;
            }
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            imageDataArr = [dbSingleton() readMeasurementIMages_fromlocalDb:[leadMeasObj.localMeasurementID intValue]];
            
            //NSLog(@"imageDataArr.......%i",imageDataArr.count);
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            sketch_imagedataArr_tab1 = [dbSingleton() getSketchimageData_form1:[leadMeasObj.localMeasurementID intValue]];
            [[NSUserDefaults standardUserDefaults]setValue:leadMeasObj.localMeasurementID forKey:@"localMeasurementIDform_one"];
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            appdelObj.arr_presketch_images = [dbSingleton() readMeasurement_preset_sketch_IMages_fromlocalDb:[leadMeasObj.localMeasurementID intValue]];
            [self rearrangeView];
            [self setValues_TabOne_forEdit];
            if (imageDataArr.count>0) {
                [self setImageScrollview_fortab1:imageDataArr];
            }
            
        }
        
    }
    else if ([arrTab2 count]>0 && [arrTab1 count]==0){
        tab1flag = 0;
        tab2ClickedFlag = 1;
        tab1ClickedFlag = 0;
        textF_touch_flag_tab2 = 1;
        //        selectedTreatmentType = 0;
        //        tab2flag = 0;
        //        form_oneBtn.userInteractionEnabled = NO;
        leadMeasObj2 = [arrTab2 objectAtIndex:0];
        [[NSUserDefaults standardUserDefaults]setValue:leadMeasObj.localMeasurementID forKey:@"formtwoMeasid"];
        productnameTF_tab2.text = leadMeasObj2.product;
        //        form_2_product = leadMeasObj.productID;
        if ([leadMeasObj2.productID isEqualToString:@"9"] ||[leadMeasObj2.productID isEqualToString:@"7"] || [leadMeasObj2.productID isEqualToString:@"8"]) {
            if ([leadMeasObj2.productID isEqualToString:@"9"]){
                selectedTreatmentType_two = @"3";
            }
            if ([leadMeasObj2.productID isEqualToString:@"8"]){
                selectedTreatmentType_two = @"9";
            }
            if ([leadMeasObj2.productID isEqualToString:@"7"]){
                selectedTreatmentType_two = @"4";
            }
            form_2_productID = selectedTreatmentType_two;
            roomLabelValue2 = leadMeasObj2.roomLabel;
            if([ leadMeasObj2.roomLabel isEqualToString:@"OTHER"])
            {
                roomLabelValue2= leadMeasObj2.winTitle;
            }
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            imageDataArr_tab2 = [dbSingleton() readMeasurementIMages_fromlocalDb:[leadMeasObj.localMeasurementID intValue]];
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            sketch_imagedataArr_tab2 = [dbSingleton() getSketchimageData_form2:[leadMeasObj.localMeasurementID intValue]];
            [[NSUserDefaults standardUserDefaults]setValue:leadMeasObj.localMeasurementID forKey:@"localMeasurementIDform_two"];
            //added 11 march
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            appdelObj.arr_presketch_images_tab2 = [dbSingleton() readMeasurement_preset_sketch_IMages_fromlocalDb:[leadMeasObj.localMeasurementID intValue]];
            [self rearrangeView_tab2];
            [self setValues_TabTwo_forEdit];
            if (imageDataArr_tab2.count>0) {
                [self setImageScrollview_fortab2:imageDataArr_tab2];
                
            }
        }
    }
    else if([arrTab2 count]>0 && [arrTab1 count]>0){
        //            tab1flag = 0;
        //        tab2flag = 0;
        tab1ClickedFlag = 1;
        tab2ClickedFlag = 1;
        textF_touch_flag_tab1 = 1;
        textF_touch_flag_tab2 = 1;
        leadMeasObj = [arrTab1 objectAtIndex:0];
        leadMeasObj2 = [arrTab2 objectAtIndex:0];
        [[NSUserDefaults standardUserDefaults]setValue:leadMeasObj.localMeasurementID forKey:@"formoneMeasid"];
        [[NSUserDefaults standardUserDefaults]setValue:leadMeasObj2.localMeasurementID forKey:@"formtwoMeasid"];
        productnameTF.text = leadMeasObj.product;
        productnameTF_tab2.text = leadMeasObj2.product;
        if ([leadMeasObj.productID isEqualToString:@"1"] ||[leadMeasObj.productID isEqualToString:@"2"]|[leadMeasObj.productID isEqualToString:@"3"]||[leadMeasObj.productID isEqualToString:@"4"]||[leadMeasObj.productID isEqualToString:@"5"]||[leadMeasObj.productID isEqualToString:@"6"] ) {
            if ([leadMeasObj.productID isEqualToString:@"1"]){
                selectedTreatmentType = @"1";
            }
            if ([leadMeasObj.productID isEqualToString:@"2"]){
                selectedTreatmentType = @"5";
            }
            
            if ([leadMeasObj.productID isEqualToString:@"3"]){
                selectedTreatmentType = @"2";
            }
            if ([leadMeasObj.productID isEqualToString:@"4"]){
                selectedTreatmentType = @"6";
            }
            if ([leadMeasObj.productID isEqualToString:@"6"]){
                selectedTreatmentType = @"8";
            }
            if ([leadMeasObj.productID isEqualToString:@"5"]){
                selectedTreatmentType = @"7";
            }
            form_1_productID = selectedTreatmentType;
            roomLabelValue1 = leadMeasObj.roomLabel;
            if([ leadMeasObj.roomLabel isEqualToString:@"OTHER"])
            {
                roomLabelValue1= leadMeasObj.winTitle;
            }
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            imageDataArr = [dbSingleton() readMeasurementIMages_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
            //////NSLog(@"imagedatacount=%i",[imageDataArr count]);
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            sketch_imagedataArr_tab1 = [dbSingleton() getSketchimageData_form1:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
            //added 11 march
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            appdelObj.arr_presketch_images = [dbSingleton() readMeasurement_preset_sketch_IMages_fromlocalDb:[leadMeasObj.localMeasurementID intValue]];
            [self rearrangeView];
            [self setValues_TabOne_forEdit];
            if (imageDataArr.count>0) {
                
                [self setImageScrollview_fortab1:imageDataArr];
                
            }
            
        }
        if ([leadMeasObj2.productID isEqualToString:@"8"] ||[leadMeasObj2.productID isEqualToString:@"7"] || [leadMeasObj2.productID isEqualToString:@"9"]) {
            if ([leadMeasObj2.productID isEqualToString:@"9"]){
                selectedTreatmentType_two = @"3";
            }
            if ([leadMeasObj2.productID isEqualToString:@"8"]){
                selectedTreatmentType_two = @"9";
            }
            if ([leadMeasObj2.productID isEqualToString:@"7"]){
                selectedTreatmentType_two = @"4";
            }
            form_2_productID = selectedTreatmentType_two;
            roomLabelValue2 = leadMeasObj2.roomLabel;
            
            if([ leadMeasObj2.roomLabel isEqualToString:@"OTHER"])
            {
                roomLabelValue2= leadMeasObj2.winTitle;
            }
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            imageDataArr_tab2 = [dbSingleton() readMeasurementIMages_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
            //////NSLog(@"imagedatacount2=%i",[imageDataArr_tab2 count]);
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            sketch_imagedataArr_tab2 = [dbSingleton() getSketchimageData_form2:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
            //////NSLog(@"sketchImageData_tab2=%@",sketchImageData_tab2);
            
            //added 11 march
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            appdelObj.arr_presketch_images_tab2 = [dbSingleton() readMeasurement_preset_sketch_IMages_fromlocalDb:[leadMeasObj2.localMeasurementID intValue]];
            
            [self rearrangeView_tab2];
            [self setValues_TabTwo_forEdit];
            NSLog(@"appdelObj.arr_presketch_images_tab2 %i",appdelObj.arr_presketch_images_tab2.count);
            if (imageDataArr_tab2.count>0) {
                [self setImageScrollview_fortab2:imageDataArr_tab2];
                
            }
        }
        
    }
    
    
}

-(void)setvalueofOptionalFeatures{
    if (optionView.tag ==10) {
        NSString *ofTxt = ( (UITextField *)[self.viewforControlls viewWithTag:100]).text;
        ////NSLog(@"ofTxt = %@",ofTxt);
        ////NSLog(@"tfoptionalFeatureArr = %@",tfoptionalFeatureArr);
        if ([ofTxt isEqualToString:@"None"]) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            uphFlag = 0;
            mvalanceFlag = 0;
        }
        else{
            
            //       array = tfoptionalFeatureArr;
            //            tfoptionalFeatureArr = [NSMutableArray arrayWithArray:array];
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = YES;
                //////NSLog(@"array = %@",array);
                [uphBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
                noneFlag = 0;
                uphFlag = 1;
                if ([tfoptionalFeatureArr containsObject:@"2"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:999];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    uphOtionBtnoneFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"3"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:888];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    uphOtionBtntwoFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"4"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:777];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    
                    uphOtionBtnthreeFlag = 1;
                }
            }
            
            if ([tfoptionalFeatureArr containsObject:@"5"]) {
                ((UIButton *)[optionView viewWithTag:998]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:887]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:776]).userInteractionEnabled = YES;
                noneFlag = 0;
                mvalanceFlag = 1;
                [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
                if ([tfoptionalFeatureArr containsObject:@"6"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:998];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    mvOtionBtnoneFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"7"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:887];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    mvOtionBtntwoFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"8"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:776];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    
                    mvOtionBtnthreeFlag = 1;
                }
                
            }
        }
    }
    if (optionView.tag ==110) {
        NSString *ofTxt = ( (UITextField *)[self.viewforControlls viewWithTag:110]).text;
        if ([ofTxt isEqualToString:@"None"]) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            uphFlag = 0;
        }
        else{
            //            array = [ofTxt componentsSeparatedByString:@","];
            //            tfoptionalFeatureArr = [NSMutableArray arrayWithArray:array];
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = YES;
                //////NSLog(@"array = %@",array);
                [uphBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
                noneFlag = 0;
                uphFlag = 1;
                if ([tfoptionalFeatureArr containsObject:@"2"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:999];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    uphOtionBtnoneFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"3"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:888];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    uphOtionBtntwoFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"4"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:777];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    
                    uphOtionBtnthreeFlag = 1;
                }
            }
        }
    }
    if (optionView.tag ==510) {
        NSString *ofTxt = ( (UITextField *)[self.viewforControlls viewWithTag:510]).text;
        if ([ofTxt isEqualToString:@"None"]) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            uphFlag = 0;
            mvalanceFlag = 0;
        }
        else{
            //             array = [ofTxt componentsSeparatedByString:@","];
            //             tfoptionalFeatureArr = [NSMutableArray arrayWithArray:array];
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = YES;
                ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = YES;
                //////NSLog(@"array = %@",array);
                [uphBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
                noneFlag = 0;
                uphFlag = 1;
                if ([tfoptionalFeatureArr containsObject:@"2"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:999];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    uphOtionBtnoneFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"3"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:888];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    uphOtionBtntwoFlag = 1;
                }
                if ([tfoptionalFeatureArr containsObject:@"4"]) {
                    uphoptionBtn = (UIButton *)[optionView viewWithTag:777];
                    [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                    
                    uphOtionBtnthreeFlag = 1;
                }
            }
        }
    }
    if (optionView.tag ==712 ) {
        
        NSString *ofTxt = ( (UITextField *)[self.viewforControlls viewWithTag:712]).text;
        if ([ofTxt isEqualToString:@"None"]) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            uphFlag = 0;
            mvalanceFlag = 0;
        }
        else{
            
            if ([tfoptionalFeatureArr containsObject:@"3"]) {
                
                uphoptionBtn = (UIButton *)[optionView viewWithTag:888];
                [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                uphOtionBtntwoFlag = 1;
            }
            if ([tfoptionalFeatureArr containsObject:@"4"]) {
                uphoptionBtn = (UIButton *)[optionView viewWithTag:777];
                [uphoptionBtn setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
                
                uphOtionBtnthreeFlag = 1;
            }
        }
    }
    //////NSLog(@"array2 = %@",array);
}
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView
{
    
    if (textView.tag == 100)
    {
        for(UITextField *txtfd in viewforControlls.subviews){
            [txtfd resignFirstResponder];
        }
        
        
        uphFlag = 0;
        uphOtionBtnoneFlag = 0;
        uphOtionBtntwoFlag = 0;
        uphOtionBtnthreeFlag = 0;
        mvalanceFlag = 0;
        mvOtionBtnoneFlag = 0;
        mvOtionBtntwoFlag = 0;
        mvOtionBtnthreeFlag= 0;
        
        
        //            [tfoptionalFeatureArr removeAllObjects];
        
        
        
        optionView = [[UIView alloc]init];
        optionView.backgroundColor = [UIColor whiteColor];
        optionView.tag = 10;
        noneBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        noneBtn.tag = 1001;
        [noneBtn addTarget:self action:@selector(noneBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        noneBtn.frame = CGRectMake(5, 8, 25, 25);
        
        [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
        //[noneBtn setBackgroundImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:noneBtn];
        
        UILabel *noneLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 13, 50, 15)];
        noneLbl.backgroundColor = [UIColor clearColor];
        noneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
        noneLbl.text = @"None";
        [optionView addSubview:noneLbl];
        
        uphBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        [uphBtn addTarget:self action:@selector(uphBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphBtn.frame = CGRectMake(5, 37, 25, 25);
        uphBtn.tag = 1002;
        [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphBtn];
        
        UILabel *uphLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 42, 100, 15)];
        uphLbl.backgroundColor = [UIColor clearColor];
        uphLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
        uphLbl.text = @"UPH Valance";
        [optionView addSubview:uphLbl];
        
        mvalanceBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        [mvalanceBtn addTarget:self action:@selector(mvalanceBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        mvalanceBtn.frame = CGRectMake(5, 150, 25, 25);
        mvalanceBtn.tag = 1003;
        [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:mvalanceBtn];
        
        mvalanceLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 155, 100, 15)];
        mvalanceLbl.backgroundColor = [UIColor clearColor];
        mvalanceLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
        mvalanceLbl.text = @"M.Valance";
        [optionView addSubview:mvalanceLbl];
        //////options for uph valance///////////////
        
        
        uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        uphoptionBtn.tag = 999;
        
        [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphoptionBtn.frame = CGRectMake(25+10, 69, 20, 20);
        uphoptionBtn.userInteractionEnabled = NO;
        [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphoptionBtn];
        
        oneLbl = [[UILabel alloc]initWithFrame:CGRectMake(60, 71, 50, 15)];
        oneLbl.backgroundColor = [UIColor clearColor];
        oneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
        oneLbl.text = @"1";
        [optionView addSubview:oneLbl];
        
        uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        uphoptionBtn.tag = 888;
        [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphoptionBtn.frame = CGRectMake(25+10, 98, 20, 20);
        
        uphoptionBtn.userInteractionEnabled = NO;
        [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphoptionBtn];
        Lbltwo = [[UILabel alloc]initWithFrame:CGRectMake(60, 100, 100, 15)];
        
        Lbltwo.backgroundColor = [UIColor clearColor];
        Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
        Lbltwo.text = @"2 on 1";
        [optionView addSubview:Lbltwo];
        
        uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        uphoptionBtn.tag = 777;
        [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphoptionBtn.frame = CGRectMake(25+10, 127, 20, 20);
        uphoptionBtn.userInteractionEnabled = NO;
        [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphoptionBtn];
        Lblthree = [[UILabel alloc]initWithFrame:CGRectMake(60, 129, 100, 15)];
        
        Lblthree.backgroundColor = [UIColor clearColor];
        Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
        Lblthree.text = @"3 on 1";
        [optionView addSubview:Lblthree];
        
        /////////m.valance options////////
        
        uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        uphoptionBtn.tag = 998;
        [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphoptionBtn.frame = CGRectMake(25+10, 99+83, 20, 20);
        uphoptionBtn.userInteractionEnabled = NO;
        [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphoptionBtn];
        
        oneLbl = [[UILabel alloc]init ];
        oneLbl.frame=CGRectMake(60, 100+85, 50, 15);
        
        oneLbl.backgroundColor = [UIColor clearColor];
        oneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
        oneLbl.text = @"1";
        
        [optionView addSubview:oneLbl];
        
        uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        uphoptionBtn.tag = 887;
        [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphoptionBtn.frame = CGRectMake(25+10, 128+83, 20, 20);
        uphoptionBtn.userInteractionEnabled = NO;
        [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphoptionBtn];
        
        Lbltwo = [[UILabel alloc]init ];
        Lbltwo.frame=CGRectMake(60, 129+85, 100, 15);
        
        Lbltwo.backgroundColor = [UIColor clearColor];
        Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
        Lbltwo.text = @"2 on 1";
        [optionView addSubview:Lbltwo];
        
        uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        uphoptionBtn.tag = 776;
        [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        uphoptionBtn.frame = CGRectMake(25+10, 157+83, 20, 20);
        uphoptionBtn.userInteractionEnabled = NO;
        [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
        [optionView addSubview:uphoptionBtn];
        
        Lblthree = [[UILabel alloc]init] ;
        Lblthree.frame = CGRectMake(60, 158+85, 100, 15);
        
        Lblthree.backgroundColor = [UIColor clearColor];
        Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
        Lblthree.text = @"3 on 1";
        [optionView addSubview:Lblthree];
        
        controller = [[UIViewController alloc]init];
        controller.contentSizeForViewInPopover = CGSizeMake(150, 100+180);
        controller.view = optionView;
        popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
        [popOver presentPopoverFromRect:CGRectMake(215, 250, 120, 254) inView:self.view permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        ////NSLog(@"tfoptionalFeatureArr2244 = %@",tfoptionalFeatureArr);
        if (textView.text.length != 0) {
            [self setvalueofOptionalFeatures];
        }
        else{
            textView.text = @"";
        }
         return NO;
    }
 return YES;
   
}

-(void)textFieldDidBeginEditing:(UITextField *)textField
{
    
   
    //NSLog(@"text_field_tag=%i",textField.tag);
    ////NSLog(@"fromView = %@",appdelObj.fromView);
    
    for(UITextField *txtf in self.viewforControlls.subviews)
    {
        //        ////NSLog(@"frommmmmm");
        if ([txtf isFirstResponder])
        {
            textF_touch_flag_tab1 =1;
        }
        
    }
    
    for(UITextField *txtf in self.viewfortabtwo_Controlls.subviews)
    {
        if ([txtf isFirstResponder])
        {
            textF_touch_flag_tab2 =1;
        }
    }
    
    if ([appdelObj.fromView isEqualToString:@"install"])
    {
        [textField resignFirstResponder];
    }
    
    else
    {
        
        if (textField == productnameTF || textField == productnameTF_tab2) {
            [productnameTF resignFirstResponder];
            [productnameTF_tab2 resignFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 1000;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            controller = [[UIViewController alloc]init];
            if ([self.productNameLbl.text isEqualToString:@"SHADES + BLINDS"])
            {
                optionArray = [NSArray arrayWithArray:form_oneArr];
                controller.contentSizeForViewInPopover = CGSizeMake(150, 265);
            }
            else
            {
                optionArray =[NSArray arrayWithArray:formtwoArr];
                controller.contentSizeForViewInPopover = CGSizeMake(150, 130);
            }
            [optionTable reloadData];
            
            
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(575, 90, 150, 254) inView:self.view permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 1)
        {
            
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 2;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other",nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 3 )
        {
            
//            [textField resignFirstResponder];
            [(UITextField *)[self.viewforControlls viewWithTag:2] becomeFirstResponder];
//            [(UITextField *)[self.viewforControlls viewWithTag:2] resignFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 3;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -110, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            
        }
        else if (textField.tag == 100)
        {
            
            
            [textField resignFirstResponder];
            uphFlag = 0;
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            mvalanceFlag = 0;
            mvOtionBtnoneFlag = 0;
            mvOtionBtntwoFlag = 0;
            mvOtionBtnthreeFlag= 0;
            
            
            //            [tfoptionalFeatureArr removeAllObjects];
            
            
            
            optionView = [[UIView alloc]init];
            optionView.backgroundColor = [UIColor whiteColor];
            optionView.tag = 10;
            noneBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            noneBtn.tag = 1001;
            [noneBtn addTarget:self action:@selector(noneBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            noneBtn.frame = CGRectMake(5, 8, 25, 25);
            
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:noneBtn];
            
            UILabel *noneLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 13, 50, 15)];
            noneLbl.backgroundColor = [UIColor clearColor];
            noneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            noneLbl.text = @"None";
            [optionView addSubview:noneLbl];
            
            uphBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [uphBtn addTarget:self action:@selector(uphBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphBtn.frame = CGRectMake(5, 37, 25, 25);
            uphBtn.tag = 1002;
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphBtn];
            
            UILabel *uphLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 42, 100, 15)];
            uphLbl.backgroundColor = [UIColor clearColor];
            uphLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            uphLbl.text = @"UPH Valance";
            [optionView addSubview:uphLbl];
            
            mvalanceBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [mvalanceBtn addTarget:self action:@selector(mvalanceBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            mvalanceBtn.frame = CGRectMake(5, 150, 25, 25);
            mvalanceBtn.tag = 1003;
            [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:mvalanceBtn];
            
            mvalanceLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 155, 100, 15)];
            mvalanceLbl.backgroundColor = [UIColor clearColor];
            mvalanceLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            mvalanceLbl.text = @"M.Valance";
            [optionView addSubview:mvalanceLbl];
            //////options for uph valance///////////////
            
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 999;
            
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 69, 20, 20);
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            oneLbl = [[UILabel alloc]initWithFrame:CGRectMake(60, 71, 50, 15)];
            oneLbl.backgroundColor = [UIColor clearColor];
            oneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            oneLbl.text = @"1";
            [optionView addSubview:oneLbl];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 888;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 98, 20, 20);
            
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            Lbltwo = [[UILabel alloc]initWithFrame:CGRectMake(60, 100, 100, 15)];
            
            Lbltwo.backgroundColor = [UIColor clearColor];
            Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lbltwo.text = @"2 on 1";
            [optionView addSubview:Lbltwo];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 777;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 127, 20, 20);
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            Lblthree = [[UILabel alloc]initWithFrame:CGRectMake(60, 129, 100, 15)];
            
            Lblthree.backgroundColor = [UIColor clearColor];
            Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lblthree.text = @"3 on 1";
            [optionView addSubview:Lblthree];
            
            /////////m.valance options////////
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 998;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 99+83, 20, 20);
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            oneLbl = [[UILabel alloc]init ];
            oneLbl.frame=CGRectMake(60, 100+85, 50, 15);
            
            oneLbl.backgroundColor = [UIColor clearColor];
            oneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            oneLbl.text = @"1";
            
            [optionView addSubview:oneLbl];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 887;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 128+83, 20, 20);
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lbltwo = [[UILabel alloc]init ];
            Lbltwo.frame=CGRectMake(60, 129+85, 100, 15);
            
            Lbltwo.backgroundColor = [UIColor clearColor];
            Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lbltwo.text = @"2 on 1";
            [optionView addSubview:Lbltwo];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 776;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 157+83, 20, 20);
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lblthree = [[UILabel alloc]init] ;
            Lblthree.frame = CGRectMake(60, 158+85, 100, 15);
            
            Lblthree.backgroundColor = [UIColor clearColor];
            Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lblthree.text = @"3 on 1";
            [optionView addSubview:Lblthree];
            
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 100+180);
            controller.view = optionView;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(215, 250, 120, 254) inView:self.view permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            ////NSLog(@"tfoptionalFeatureArr2244 = %@",tfoptionalFeatureArr);
            if (textField.text.length != 0) {
                [self setvalueofOptionalFeatures];
            }
            else{
                textField.text = @"";
            }
        }
        else if (textField.tag ==101){
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 101;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other",nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag ==103) {
             [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
            
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 103;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -110, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 110)
        {
            
            
          // [textField resignFirstResponder];
             [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
            
            uphFlag = 0;
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            optionView = [[UIView alloc]init];
            optionView.backgroundColor = [UIColor whiteColor];
            optionView.tag = 110;
            noneBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [noneBtn addTarget:self action:@selector(noneBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            noneBtn.frame = CGRectMake(5, 8, 25, 25);
            noneBtn.tag = 2001;
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:noneBtn];
            
            UILabel *noneLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 13, 50, 15)];
            noneLbl.backgroundColor = [UIColor clearColor];
            noneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            noneLbl.text = @"None";
            [optionView addSubview:noneLbl];
            
            uphBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [uphBtn addTarget:self action:@selector(uphBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphBtn.frame = CGRectMake(5, 37, 25, 25);
            uphBtn.tag = 2002;
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphBtn];
            
            UILabel *uphLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 43, 100, 15)];
            uphLbl.backgroundColor = [UIColor clearColor];
            uphLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            uphLbl.text = @"UPH Valance";
            [optionView addSubview:uphLbl];
            /////uph options/////////
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 999;
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 69, 20, 20);
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            oneLbl = [[UILabel alloc]initWithFrame:CGRectMake(60, 71, 50, 15)];
            oneLbl.backgroundColor = [UIColor clearColor];
            oneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            oneLbl.text = @"1";
            [optionView addSubview:oneLbl];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 888;
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 98, 20, 20);
            
            
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lbltwo = [[UILabel alloc]initWithFrame:CGRectMake(60, 100, 100, 15)];
            Lbltwo.backgroundColor = [UIColor clearColor];
            Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lbltwo.text = @"2 on 1";
            [optionView addSubview:Lbltwo];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 777;
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 127, 20, 20);
            
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lblthree = [[UILabel alloc]initWithFrame:CGRectMake(60, 129, 100, 15)];
            Lblthree.backgroundColor = [UIColor clearColor];
            Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lblthree.text = @"3 on 1";
            [optionView addSubview:Lblthree];
            /////////////////////////////////
            
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 150);
            controller.view = optionView;
            optionTable.tag = 110;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -30, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            
            if (textField.text.length != 0) {
                [self setvalueofOptionalFeatures];
            }
            else{
                textField.text = @"";
            }
            
        }
        else if (textField.tag == 114){
            UITextField *nexttf = (UITextField *)[self.viewforControlls viewWithTag:textField.tag];
            [nexttf resignFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 114;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"3/4",@"1 3/4",@"2 1/2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 120);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -30, 120, 254) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 301){
            //        [textField resignFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 301;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            
        }
        else if (textField.tag == 303){
            [(UITextField *)[self.view viewWithTag:1041] becomeFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 303;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -190, 120, 254) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        if (textField == txfdtopOM || textField == txfdtopOM_inch||textField== txfdheightOM|| textField == txfdheightOM_inch||textField== txfdbottomOM||textField==txfdbottomOM_inch) {
            svos = scrollFortab1.contentOffset;
            CGPoint pt;
            CGRect rc = [textField bounds];
            rc = [textField convertRect:rc toView:scrollFortab1];
            pt = rc.origin;
            pt.x = 0;
            pt.y -= 300;
            [scrollFortab1 setContentOffset:pt animated:YES];
        }
        else if ((textField.tag == 313)||textField.tag== 314||textField.tag == 321||textField.tag==322) {
            [textField resignFirstResponder];
        }
        if (textField.tag == 323){
            //        CGRect frame = self.view.frame;
            //        frame.origin.y = frame.origin.y-100;
            //        self.view.frame = frame;
        }
        if (textField.tag == 324 ||textField.tag == 325||textField.tag == 326||textField.tag == 327||textField.tag == 335) {
            svos = scrollFortab2.contentOffset;
            CGPoint pt;
            CGRect rc = [textField bounds];
            rc = [textField convertRect:rc toView:scrollFortab2];
            pt = rc.origin;
            pt.x = 0;
            pt.y -= 280;
            [scrollFortab2 setContentOffset:pt animated:YES];
        }
        
        else if (textField.tag == 401){
            //        [textField resignFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 401;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 403){
             [(UITextField *)[self.view viewWithTag:1041] becomeFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 403;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -190, 120, 254) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if ((textField.tag == 413)||textField.tag== 414||textField.tag == 421||textField.tag==422) {
            [textField resignFirstResponder];
        }
        
        else if (textField.tag == 424 || textField.tag == 425||textField.tag == 426 || textField.tag == 427||textField.tag == 431 || textField.tag == 436||textField.tag == 437 || textField.tag == 438 ||textField.tag == 439){
            textField.keyboardType = UIKeyboardTypeNumberPad;
            if ([appdelObj.fromView isEqualToString:@"install"]){
                [textField resignFirstResponder];
            }
            else{
                svos = scrollFortab2.contentOffset;
                CGPoint pt;
                CGRect rc = [textField bounds];
                rc = [textField convertRect:rc toView:scrollFortab2];
                pt = rc.origin;
                pt.x = 0;
                pt.y -= 280;
                [scrollFortab2 setContentOffset:pt animated:YES];
                
            }
        }
        else if (textField.tag == 432){
            if ([appdelObj.fromView isEqualToString:@"install"]){
                [textField resignFirstResponder];
            }
            else{
            }
        }
        else if (textField.tag == 901){
            //        [textField resignFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 901;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 903){
            [(UITextField *)[self.view viewWithTag:1041] becomeFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 903;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -190, 120, 254) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if ((textField.tag == 913)||textField.tag== 914||textField.tag == 921||textField.tag==922) {
            [textField resignFirstResponder];
        }
        
        
        if (textField.tag == 924 ||textField.tag == 925||textField.tag == 926||textField.tag == 927||textField.tag == 936) {
            svos = scrollFortab2.contentOffset;
            CGPoint pt;
            CGRect rc = [textField bounds];
            rc = [textField convertRect:rc toView:scrollFortab2];
            pt = rc.origin;
            pt.x = 0;
            pt.y -= 280;
            [scrollFortab2 setContentOffset:pt animated:YES];
        }
        else if (textField.tag == 501)
        {
          
            
            ////////NSLog(@"tvvvv");
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 501;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            
            
        }
        else if (textField.tag == 503){
              [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 503;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -110, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 510){

            [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
//            [(UITextField *)[self.view viewWithTag:1040] resignFirstResponder];
            
            uphFlag = 0;
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            optionView = [[UIView alloc]init];
            optionView.backgroundColor = [UIColor whiteColor];
            optionView.tag = 510;
            noneBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [noneBtn addTarget:self action:@selector(noneBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            noneBtn.frame = CGRectMake(5, 8, 25, 25);
            noneBtn.tag = 2001;
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:noneBtn];
            
            UILabel *noneLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 13, 50, 15)];
            noneLbl.backgroundColor = [UIColor clearColor];
            noneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            noneLbl.text = @"None";
            [optionView addSubview:noneLbl];
            
            uphBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [uphBtn addTarget:self action:@selector(uphBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphBtn.frame = CGRectMake(5, 37, 25, 25);
            uphBtn.tag = 2002;
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphBtn];
            
            UILabel *uphLbl = [[UILabel alloc]initWithFrame:CGRectMake(35, 43, 100, 15)];
            uphLbl.backgroundColor = [UIColor clearColor];
            uphLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            uphLbl.text = @"UPH Valance";
            [optionView addSubview:uphLbl];
            /////uph options/////////
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 999;
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 69, 20, 20);
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            oneLbl = [[UILabel alloc]initWithFrame:CGRectMake(60, 71, 50, 15)];
            oneLbl.backgroundColor = [UIColor clearColor];
            oneLbl.font = [UIFont fontWithName:@"Helvetica" size:12];
            oneLbl.text = @"1";
            [optionView addSubview:oneLbl];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 888;
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 98, 20, 20);
            
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lbltwo = [[UILabel alloc]initWithFrame:CGRectMake(60, 100, 100, 15)];
            Lbltwo.backgroundColor = [UIColor clearColor];
            Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lbltwo.text = @"2 on 1";
            [optionView addSubview:Lbltwo];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 777;
            uphoptionBtn.userInteractionEnabled = NO;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(25+10, 127, 20, 20);
            
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lblthree = [[UILabel alloc]initWithFrame:CGRectMake(60, 129, 100, 15)];
            Lblthree.backgroundColor = [UIColor clearColor];
            Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lblthree.text = @"3 on 1";
            [optionView addSubview:Lblthree];
            /////////////////////////////////
            
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 150);
            controller.view = optionView;
            optionTable.tag = 107;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -30, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            
            if (textField.text.length != 0) {
                [self setvalueofOptionalFeatures];
            }
            else{
                textField.text = @"";
            }
            
        }
        else if (textField.tag == 514){
            UITextField *nexttf = (UITextField *)[self.viewforControlls viewWithTag:textField.tag];
            //        [nexttf resignFirstResponder];
            textField.keyboardType = UIKeyboardTypeNumberPad;
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 514;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"3/4",@"1 3/4",@"2 1/2",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 170);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -30, 120, 254) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 601){
            ////////NSLog(@"tvvvv");
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 601;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 603){
            [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 603;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -110, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 701){
            ////////NSLog(@"tvvvv");
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 701;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"MBR",@"LR", @"DR",@"Other", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 703){
             [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
            optionTable = [[UITableView alloc]init];
            optionTable.tag = 703;
            optionTable.backgroundColor = [UIColor whiteColor];
            optionTable.dataSource = self;
            optionTable.delegate = self;
            optionArray = [NSArray arrayWithObjects:@"1",@"2", nil];
            [optionTable reloadData];
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionTable;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(170, -110, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        else if (textField.tag == 712){
            [textField resignFirstResponder];
            //        [tfoptionalFeatureArr removeAllObjects];
             [(UITextField *)[self.view viewWithTag:1040] becomeFirstResponder];
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            optionView = [[UIView alloc]init];
            optionView.backgroundColor = [UIColor whiteColor];
            optionView.tag = 712;
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            uphoptionBtn.tag = 888;
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(5+10, 11, 20, 20);
            
            
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lbltwo = [[UILabel alloc]initWithFrame:CGRectMake(40, 13, 50, 15)];
            Lbltwo.backgroundColor = [UIColor clearColor];
            Lbltwo.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lbltwo.text = @"2 on 1";
            [optionView addSubview:Lbltwo];
            
            uphoptionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            [uphoptionBtn addTarget:self action:@selector(uphoptionBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            uphoptionBtn.frame = CGRectMake(5+10, 40, 20, 20);
            uphoptionBtn.tag = 777;
            [uphoptionBtn setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [optionView addSubview:uphoptionBtn];
            
            Lblthree = [[UILabel alloc]initWithFrame:CGRectMake(40, 43, 100, 15)];
            Lblthree.backgroundColor = [UIColor clearColor];
            Lblthree.font = [UIFont fontWithName:@"Helvetica" size:12];
            Lblthree.text = @"3 on 1";
            [optionView addSubview:Lblthree];
            
            controller = [[UIViewController alloc]init];
            controller.contentSizeForViewInPopover = CGSizeMake(150, 80);
            controller.view = optionView;
            popOver = [[UIPopoverController alloc]initWithContentViewController:controller];
            [popOver presentPopoverFromRect:CGRectMake(540, -70, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            
            
            
            if (textField.text.length != 0) {
                [self setvalueofOptionalFeatures];
            }
            else{
                textField.text = @"";
            }
            
        }
        if (textField.tag == 12 ) {
            textField.text = @"";
        }
        if (textField.tag == 14 ) {
            textField.text = @"";
        }
        if (textField.tag == 16 ) {
            textField.text = @"";
        }
        if (textField.tag == 516 ) {
            textField.text = @"";
        }
        if (textField.tag == 518 ) {
            textField.text = @"";
        }
        if (textField.tag == 521 ) {
            textField.text = @"";
        }
        if (textField.tag == 116) {
            textField.text = @"";
        }
        if (textField.tag == 118 ) {
            textField.text = @"";
        }
        if (textField.tag == 121 ) {
            textField.text = @"";
        }
        if (textField.tag == 615 ) {
            textField.text = @"";
        }
        if (textField.tag == 617 ) {
            textField.text = @"";
        }
        if (textField.tag == 619 ) {
            textField.text = @"";
        }
        if (textField.tag == 714 ) {
            textField.text = @"";
        }
        if (textField.tag == 716 ) {
            textField.text = @"";
        }
        if (textField.tag == 718 ) {
            textField.text = @"";
        }
        if (textField.tag == 308 ) {
            textField.text = @"";
        }
        if (textField.tag == 310 ) {
            textField.text = @"";
        }
        if (textField.tag == 312 ) {
            textField.text = @"";
        }
        if (textField.tag == 318) {
            textField.text = @"";
        }
        if (textField.tag == 320 ) {
            textField.text = @"";
        }
        if (textField.tag == 325 ) {
            textField.text = @"";
        }
        if (textField.tag == 327 ) {
            textField.text = @"";
        }
        if (textField.tag == 408 ) {
            textField.text = @"";
        }
        if (textField.tag == 410 ) {
            textField.text = @"";
        }
        if (textField.tag == 412 ) {
            textField.text = @"";
        }
        if (textField.tag == 418 ) {
            textField.text = @"";
        }
        if (textField.tag == 420 ) {
            textField.text = @"";
        }
        if (textField.tag == 425 ) {
            textField.text = @"";
        }
        if (textField.tag == 427 ) {
            textField.text = @"";
        }
        if (textField.tag == 908 ) {
            textField.text = @"";
        }
        if (textField.tag == 910 ) {
            textField.text = @"";
        }
        if (textField.tag == 912 ) {
            textField.text = @"";
        }
        if (textField.tag == 918 ) {
            textField.text = @"";
        }
        if (textField.tag == 920 ) {
            textField.text = @"";
        }
        if (textField.tag == 925 ) {
            textField.text = @"";
        }
        if (textField.tag == 927 ) {
            textField.text = @"";
        }
        if (textField.tag == 121 ) {
            textField.text = @"";
        }
        if (textField.tag == 521 ) {
            textField.text = @"";
        }
        
        
        if (textField==txt_left_inch ) {
            textField.text = @"";
        }
        if (textField==txt_center_inch ) {
            textField.text = @"";
        }
        if (textField==txt_right_inch ) {
            textField.text = @"";
        }
        if (textField==txt_bottum_inch ) {
            textField.text = @"";
        }
        if (textField==txt_hard_inch ) {
            textField.text = @"";
        }
        if (textField==txt_puddle_inch ) {
            textField.text = @"";
        }
        if (textField==txt_return_inch ) {
            textField.text = @"";
        }
        if (textField==txt_offthefloor_inch ) {
            textField.text = @"";
        }
        if (textField==txt_finished_inch ) {
            textField.text = @"";
        }
        
        
        
        if (viewforMounttypeOM.hidden == NO)
        {
            if (textField == txfdleftOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdwidthOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdrightOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdbracketOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdleftOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdtopOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdheightOM_inch) {
                textField.text = @"";
            }
            if (textField == txfdbottomOM_inch) {
                textField.text = @"";
            }
            
        }
        
    }
    //working here
    if(textField.tag==11||textField.tag==13||textField.tag==15||textField.tag==551||textField.tag==553||textField.tag==555||textField.tag==557||textField.tag==559||textField.tag==561||textField.tag==563||textField.tag==515||textField.tag==517||textField.tag==519||textField.tag==115||textField.tag==117||textField.tag==119 ||textField.tag==614||textField.tag==616||textField.tag==618||textField.tag==713||textField.tag==715||textField.tag==717   ||textField.tag==407||textField.tag==409||textField.tag==411||textField.tag==416||textField.tag==417||textField.tag==419||textField.tag==424 ||textField.tag==426||textField.tag==431||textField.tag==436||textField.tag==437||textField.tag==438||textField.tag==439||textField==txt_left_ft||textField==txt_center_ft||textField==txt_right_ft||textField.tag==307||textField.tag==309||textField.tag==311||textField.tag==316||textField.tag==317||textField.tag==319||textField.tag==324 ||textField.tag==326||textField.tag==335||textField.tag==907||textField.tag==909||textField.tag==911||textField.tag==916||textField.tag==917||textField.tag==919||textField.tag==924||textField.tag==926||textField.tag==936)
    {
        
        if([textField.text isEqualToString:@"0"])
        {
            
           textField.text=@"";
            
        }
        
        
    }
    
}

-(void)textFieldDidEndEditing:(UITextField *)textField
{
    
    
    
    NSLog(@"textFieldDidEndEditing....%i",textField.tag);
    
    
    if(firstselection==1)
    {
        if([textField.text length]>0)
        {
            firstchoose=1;
        }
    }
    else if (secondselection==1)
    {
        if([textField.text length]>0)
        {
            secondchoose=1;
        }
    }
    //NSLog(@"textFieldDidEndEditing...");
    //    [textField resignFirstResponder];
    if (textField.tag == 438)
    {
        
        
        
        //        if(noteText_tab2.length>0){
        //            NSString *finalStr;
        //            BOOL Val = 0;
        //            NSArray *myArray = [noteText_tab2 componentsSeparatedByString:@"\n"];
        //            for(int i=0;i<myArray.count;i++){
        //                NSString *strr = [myArray objectAtIndex:i];
        //                if([strr hasPrefix:@"Off the floor :"]){
        //                    finalStr = strr;
        //                    Val = 1;
        //                }
        //                            }
        //            if (Val == 1) {
        //                noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@"%@",finalStr] withString:[NSString stringWithFormat:@"Puddle : %@",textField.text]];
        //            }
        //            else{
        //                noteText_tab2 = [noteText_tab2 stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@"%@",finalStr] withString:@""];
        //                noteText_tab2 =[noteText_tab2 stringByAppendingString:[NSString stringWithFormat:@"\nPuddle : %@",textField.text]];
        //            }
        //
        //        }
        //        else{
        //            noteText_tab2 =[noteText_tab2 stringByAppendingString:[NSString stringWithFormat:@"Puddle : %@",textField.text]];
        //        }
        
        
        
        
    }
    if (textField.tag == 439) {
        
    }
    if (textField.tag == 431|| textField.tag == 436||textField.tag == 437 || textField.tag == 439){
        if ([appdelObj.fromView isEqualToString:@"install"]){
            [textField resignFirstResponder];
        }
        else{
            
        }
    }
    
    if (textField.tag == 432){
        if ([appdelObj.fromView isEqualToString:@"install"]){
            [textField resignFirstResponder];
        }
        else{
            
        }
    }
    if (textField.tag == 423){
        if ([appdelObj.fromView isEqualToString:@"install"]){
        }
        else{
        }
    }
    
    
    if (textField.tag == 323){
        if ([appdelObj.fromView isEqualToString:@"install"]){
        }
        else{
            
        }
    }
    if (textField.tag == 923){
        if ([appdelObj.fromView isEqualToString:@"install"]){
        }
        else{
            
        }
    }
    if(textField.tag == 514){
        //    if(textField.text.length>0){
        //
        //
        //                if(noteText.length>0){
        //                    NSString *finalStr;
        //                    NSArray *myArray = [noteText componentsSeparatedByString:@"\n"];
        //                    ////NSLog(@"myArray %@",myArray);
        //                    for(int i=0;i<myArray.count;i++){
        //                        NSString *strr = [myArray objectAtIndex:i];
        //                        if([strr hasPrefix:@"Head Rail Size :"]){
        //                            finalStr = strr;
        //                        }
        //                    }
        //                    noteText = [noteText stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@"\n%@",finalStr] withString:@""];
        //                    noteText =[noteText stringByAppendingString:[NSString stringWithFormat:@"\nHead Rail Size : %@",textField.text]];
        //                }
        //                else{
        //                    noteText =[noteText stringByAppendingString:[NSString stringWithFormat:@"Head Rail Size : %@",textField.text]];
        //                }
        //
        //
        //        }
    }
    
    
    
    
    
    //////////////for  addition//////////////////
    if (textField.tag == 12 ||textField.tag == 14 ||textField.tag == 16 )
    {
        //if(textField.text.length>0)
        {
            
            textField.text=[self getInchesValues:textField.text];
            
           /* if ([textField.text isEqualToString:@"2/8"]) {
                textField.text = @"1/4";
            }
            if ([textField.text isEqualToString:@"4/8"]) {
                textField.text = @"1/2";
            }
            if ([textField.text isEqualToString:@"6/8"]) {
                textField.text = @"3/4";
            }*/
            
            left_inch = ((UITextField *)[self.viewforControlls viewWithTag:12]).text;
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
            
            width_inch = ((UITextField *)[self.viewforControlls viewWithTag:14]).text;
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
            
            right_inch = ((UITextField *)[self.viewforControlls viewWithTag:16]).text;
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
            
            NSLog(@"valuesArr...%@",valuesArr);
            
            if (textField.tag == 12 && (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
              
                if(![[valuesArr objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from       0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
                
            }
            else if ( textField.tag == 14&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
                if(![[valuesArr2 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from       0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            else if (  textField.tag == 16&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
                if(![[valuesArr3 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from       0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            
            
        }
        
    }
    if(textField.tag == 516 ||textField.tag == 518 ||textField.tag == 521)
    {
        
        textField.text=[self getInchesValues:textField.text];
        
       /* if ([textField.text isEqualToString:@"2/8"]) {
            textField.text = @"1/4";
        }
        if ([textField.text isEqualToString:@"4/8"]) {
            textField.text = @"1/2";
        }
        if ([textField.text isEqualToString:@"6/8"]) {
            textField.text = @"3/4";
        }*/
        
        left_inch = ((UITextField *)[self.viewforControlls viewWithTag:516]).text;
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        
        width_inch = ((UITextField *)[self.viewforControlls viewWithTag:518]).text;
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        
        right_inch = ((UITextField *)[self.viewforControlls viewWithTag:521]).text;
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        
        if ((textField.tag == 516 )&& (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""]))
        {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            alert.tag = textField.tag;
            textField.text=@"0";
            [alert show];
            
        }
        else if ( textField.tag == 518&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            alert.tag = textField.tag;
            textField.text=@"0";
            [alert show];
        }
        else if (textField.tag == 521&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
        }
        
    }
    if(textField.tag == 116 || textField.tag == 118 ||textField.tag == 121 )
    {
        
        textField.text=[self getInchesValues:textField.text];
        
        
       /* if ([textField.text isEqualToString:@"2/8"]) {
            textField.text = @"1/4";
        }
        if ([textField.text isEqualToString:@"4/8"]) {
            textField.text = @"1/2";
        }
        if ([textField.text isEqualToString:@"6/8"]) {
            textField.text = @"3/4";
        }*/
        
        
        left_inch = ((UITextField *)[self.viewforControlls viewWithTag:116]).text;
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        
        width_inch = ((UITextField *)[self.viewforControlls viewWithTag:118]).text;
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        
        right_inch = ((UITextField *)[self.viewforControlls viewWithTag:121]).text;
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        
        if ((textField.tag == 116 )&& (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if ( textField.tag == 118&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if (textField.tag == 121&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
    }
    if(textField.tag == 615 ||textField.tag == 617 ||textField.tag == 619 )
    {
        
         textField.text=[self getInchesValues:textField.text];
        
        /*if ([textField.text isEqualToString:@"2/8"]) {
            textField.text = @"1/4";
        }
        if ([textField.text isEqualToString:@"4/8"]) {
            textField.text = @"1/2";
        }
        if ([textField.text isEqualToString:@"6/8"]) {
            textField.text = @"3/4";
        }*/
        
        
        
        
        left_inch = ((UITextField *)[self.viewforControlls viewWithTag:615]).text;
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        
        width_inch = ((UITextField *)[self.viewforControlls viewWithTag:617]).text;
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        
        right_inch = ((UITextField *)[self.viewforControlls viewWithTag:619]).text;
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        
        if ( (textField.tag == 615)&& (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if ( textField.tag == 617&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if ( textField.tag == 619&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        
    }
    if(textField.tag == 714 ||textField.tag == 716 ||textField.tag == 718 )
    {
        
         textField.text=[self getInchesValues:textField.text];
        
        /*
        if ([textField.text isEqualToString:@"2/8"]) {
            textField.text = @"1/4";
        }
        if ([textField.text isEqualToString:@"4/8"]) {
            textField.text = @"1/2";
        }
        if ([textField.text isEqualToString:@"6/8"]) {
            textField.text = @"3/4";
        }*/
        
        
        
        left_inch = ((UITextField *)[self.viewforControlls viewWithTag:714]).text;
        valuesArr = [left_inch componentsSeparatedByString:@"/"];
        
        width_inch = ((UITextField *)[self.viewforControlls viewWithTag:716]).text;
        valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        
        right_inch = ((UITextField *)[self.viewforControlls viewWithTag:718]).text;
        valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        
        if ((textField.tag == 714 )&& (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if ( textField.tag == 716&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if ( textField.tag == 718&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
    }
    
    
    if(textField.tag == 307 ||textField.tag == 308 ||textField.tag == 309 ||textField.tag == 310 ||textField.tag == 311 ||textField.tag == 312){
        NSString *final_inch;
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text intValue];
        
        if(textField.tag == 308){
            left_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text;
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 310){
            width_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text;
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 312){
            right_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text;
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        }
        ////NSLog(@"valuesArr %@",valuesArr);
        if (textField.tag == 308 && (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
            
            if(![[valuesArr objectAtIndex:0]isEqualToString:@"0"])
            {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                
            }
           
            
        }
        else if (textField.tag == 310&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valuesArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if (textField.tag == 312&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            if(![[valuesArr3 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else{
            ////NSLog(@"textField.text = %@",textField.text);
            if(textField.tag == 308)
            {
                 left_inch = textField.text;
                 textField.text=[self getInchesValues:textField.text];
                 
                /*if ([textField.text isEqualToString:@"2/8"])
                {
                    
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"])
                {
                    
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"])
                {
                    
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
            }
            if(textField.tag == 310){
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
                
                
            }
            if(textField.tag == 312)
            {
                right_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    right_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    right_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    right_inch = @"6/8";
                    
                }*/
                
            }
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
            //            ////NSLog(@"left_inch = %@ , width_inch = %@ , right_inch = %@",left_inch,width_inch,right_inch);
            //            ////NSLog(@"valuesArr = %@ , valuesArr2 = %@ , valuesArr3 = %@",valuesArr,valuesArr2,valuesArr3);
            
            int finalVal = [[valuesArr objectAtIndex:0]intValue]+[[valuesArr2 objectAtIndex:0]intValue]+[[valuesArr3 objectAtIndex:0]intValue];
            
            int val33 = finalVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalVal/8;
            ////NSLog(@"val44 = %i",val44);
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            
            
            final_inch = [NSString stringWithFormat:@"%i/8",val33];
            
            ////NSLog(@"final_inch = %@",final_inch);
            if ([final_inch isEqualToString:@"2/8"]) {
                final_inch = @"1/4";
                
            }
            if ([final_inch isEqualToString:@"4/8"]) {
                final_inch = @"1/2";
                
                
            }
            if ([final_inch isEqualToString:@"6/8"]) {
                final_inch = @"3/4";
                
            }
            if ([final_inch isEqualToString:@"0/8"])
            {
                
                final_inch = @"0";
                
            }
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:313]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:314]).text =final_inch;
            total_width_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_width_i_text = final_inch;
            
        }
    }
    
    if(textField.tag == 317 ||textField.tag == 318 ||textField.tag == 319 ||textField.tag == 320){
        NSString *finalinch;
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text intValue];
        
        if(textField.tag == 318){
            topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text;
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 320){
            heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text;
            valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        }
        
        if ((textField.tag == 318)&& (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""])) {
            if(![[valueArr1 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if ( textField.tag == 320 && (valueArr2.count<2 || [[valueArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valueArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else{
            if(textField.tag == 318)
            {
                
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
            }
            if(textField.tag == 320)
            {
                
                
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
                
            }
            
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
            valueArr2 = [heightInch componentsSeparatedByString:@"/"];
            
            int finalInchVal = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
            int val33 = finalInchVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalInchVal/8;
            ////NSLog(@"val44 = %i",val44);
            
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            finalinch = [NSString stringWithFormat:@"%i/8",val33];
            
            if ([finalinch isEqualToString:@"2/8"]) {
                finalinch = @"1/4";
                
            }
            if ([finalinch isEqualToString:@"4/8"]) {
                finalinch = @"1/2";
                
                
            }
            if ([finalinch isEqualToString:@"6/8"]) {
                finalinch = @"3/4";
                
            }
            if ([finalinch isEqualToString:@"0/8"]) {
                finalinch = @"0";
                
            }
//            if (val33 == 0) {
//                finalinch = @"1";
//            }
            
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:321]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text =finalinch;
            total_height_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_height_i_text = finalinch;
        }
    }
    
    if(textField.tag == 324 ||textField.tag == 325 ||textField.tag == 326 ||textField.tag == 327)
    {
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text intValue];
        
        NSString *finalinch;
       // if(textField.tag == 325)
        //{
            topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text;
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
       // }
       // if(textField.tag == 327){
            heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text;
            valueArr2  = [heightInch componentsSeparatedByString:@"/"];
       // }
        if (textField.tag == 325  && (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""]))
        {
            
            if(![[valueArr1 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
            
        }
        else if ( textField.tag == 327  && (valueArr2.count<2 || [[valueArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valueArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else{
            if(textField.tag == 325)
            {
                
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
                
            }
            if(textField.tag == 327)
            {
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
                
                
                
            }
            
            //NSLog(@"topInch...%@",topInch);
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
            valueArr2 = [heightInch componentsSeparatedByString:@"/"];
            
            
            
             //NSLog(@"valueArr1...%@",valueArr1);
             //NSLog(@"valueArr2...%@",valueArr2);
            
            
            int finalInchVal = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
            
            int val33 = finalInchVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalInchVal/8;
            ////NSLog(@"val44 = %i",val44);
            
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            finalinch = [NSString stringWithFormat:@"%i/8",val33];
            if ([finalinch isEqualToString:@"2/8"]) {
                finalinch = @"1/4";
                
            }
            if ([finalinch isEqualToString:@"4/8"]) {
                finalinch = @"1/2";
                
                
            }
            if ([finalinch isEqualToString:@"6/8"]) {
                finalinch = @"3/4";
                
            }
            if ([finalinch isEqualToString:@"0/8"]) {
                finalinch = @"0";
                
            }
            
            //NSLog(@"finalinch.....%@",finalinch);
//            if (val33 == 0) {
//                finalinch = @"1";
//            }
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:329]).text =finalinch;
            total_height_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_height_i_text = finalinch;
        }
    }
    
    if(textField.tag == 407 ||textField.tag == 408 ||textField.tag == 409 ||textField.tag == 410 ||textField.tag == 411 ||textField.tag == 412){
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text intValue];
        NSString *final_inch;
        if(textField.tag == 408){
            left_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text;
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 410){
            width_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text;
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 412){
            right_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text;
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        }
        if ( textField.tag == 408   && (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
            if(![[valuesArr objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else if (textField.tag == 410   && (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valuesArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if (textField.tag == 412   && (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            if(![[valuesArr3 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else{
            if(textField.tag == 408){
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
                
            }
            if(textField.tag == 410){
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];

                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
                
                
            }
            if(textField.tag == 412)
            {
                
                
                
                right_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];

                
                /*if ([textField.text isEqualToString:@"2/8"])
                {
                    textField.text = @"1/4";
                    right_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    right_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    right_inch = @"6/8";
                    
                }*/
                
                
                
            }
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
            int finalVal = [[valuesArr objectAtIndex:0]intValue]+[[valuesArr2 objectAtIndex:0]intValue]+[[valuesArr3 objectAtIndex:0]intValue];
            
            int val33 = finalVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalVal/8;
            ////NSLog(@"val44 = %i",val44);
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            final_inch = [NSString stringWithFormat:@"%i/8",val33];
            
            if ([final_inch isEqualToString:@"2/8"]) {
                final_inch = @"1/4";
                
            }
            if ([final_inch isEqualToString:@"4/8"]) {
                final_inch = @"1/2";
            }
            if ([final_inch isEqualToString:@"6/8"]) {
                final_inch = @"3/4";
                
            }
            if ([final_inch isEqualToString:@"0/8"]) {
                final_inch = @"0";
                
            }
//            if (val33 == 0) {
//                final_inch = @"1";
//            }
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:413]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:414]).text =final_inch;
            
            
            total_width_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_width_i_text = final_inch;
        }
    }
    
    if(textField.tag == 417 ||textField.tag == 418 ||textField.tag == 419 ||textField.tag == 420){
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text intValue];
        
        NSString *finalinch;
        if(textField.tag == 418){
            topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text;
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 420){
            heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text;
            valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        }
        if (textField.tag == 418   && (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""])) {
            if(![[valueArr1 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if ( textField.tag == 420 && (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""])){
            if(![[valueArr1 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else{
            if(textField.tag == 418){
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
            }
            if(textField.tag == 420){
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
               /* if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
            }
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
            valueArr2 = [heightInch componentsSeparatedByString:@"/"];
            
            int finalInchVal = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
            
            int val33 = finalInchVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalInchVal/8;
            ////NSLog(@"val44 = %i",val44);
            
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            finalinch = [NSString stringWithFormat:@"%i/8",val33];
            if ([finalinch isEqualToString:@"2/8"]) {
                finalinch = @"1/4";
                
            }
            if ([finalinch isEqualToString:@"4/8"]) {
                finalinch = @"1/2";
                
                
            }
            if ([finalinch isEqualToString:@"6/8"]) {
                finalinch = @"3/4";
                
            }
            if ([finalinch isEqualToString:@"0/8"]) {
                finalinch = @"0";
                
            }
//            if (val33 == 0) {
//                finalinch = @"1";
//            }
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:421]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text =finalinch;
            total_height_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_height_i_text = finalinch;
        }
        
    }
    
    if(textField.tag == 424 ||textField.tag == 425 ||textField.tag == 426 ||textField.tag == 427){
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:426]).text intValue];
        
        NSString *finalinch;
        if(textField.tag == 425){
            topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text;
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 427){
            heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:427]).text;
            valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        }
        if ((textField.tag == 425  )&& (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""])) {
            if(![[valueArr1 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else if (textField.tag == 427 && (valueArr2.count<2 || [[valueArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valueArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else{
            if(textField.tag == 425){
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];

                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
            }
            if(textField.tag == 427){
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
            }
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
            valueArr2 = [heightInch componentsSeparatedByString:@"/"];
            
            int finalInchVal = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
            
            int val33 = finalInchVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalInchVal/8;
            ////NSLog(@"val44 = %i",val44);
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            finalinch = [NSString stringWithFormat:@"%i/8",val33];
            
            if ([finalinch isEqualToString:@"2/8"]) {
                finalinch = @"1/4";
                
            }
            if ([finalinch isEqualToString:@"4/8"]) {
                finalinch = @"1/2";
                
                
            }
            if ([finalinch isEqualToString:@"6/8"]) {
                finalinch = @"3/4";
                
            }
            if ([finalinch isEqualToString:@"0/8"]) {
                finalinch = @"0";
                
            }
//            if (val33 ==0) {
//                finalinch = @"1";
//            }
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:428]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:429]).text =finalinch;
            total_height_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_height_i_text = finalinch;
        }
    }
    
    if(textField.tag == 907 ||textField.tag == 908 ||textField.tag == 909 ||textField.tag == 910 ||textField.tag == 911 ||textField.tag == 912){
        
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text intValue];
        NSString *final_inch;
        if(textField.tag == 908){
            left_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text;
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 910){
            width_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text;
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 912){
            right_inch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text;
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
        }
        
        if ((textField.tag == 908)&& (valuesArr.count<2 || [[valuesArr objectAtIndex:1]isEqualToString:@""])) {
            if(![[valuesArr objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if (textField.tag == 910&& (valuesArr2.count<2 || [[valuesArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valuesArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if ( textField.tag == 912&& (valuesArr3.count<2 || [[valuesArr3 objectAtIndex:1]isEqualToString:@""])){
            if(![[valuesArr3 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else{
            if(textField.tag == 908){
                
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];

                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
                
            }
            if(textField.tag == 910)
            {
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];

                
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
                
                
            }
            if(textField.tag == 912){
                
                right_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    right_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    right_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    right_inch = @"6/8";
                    
                }*/
                
               
                
                
            }
            valuesArr = [left_inch componentsSeparatedByString:@"/"];
            valuesArr2 = [width_inch componentsSeparatedByString:@"/"];
            valuesArr3 = [right_inch componentsSeparatedByString:@"/"];
            int finalVal = [[valuesArr objectAtIndex:0]intValue]+[[valuesArr2 objectAtIndex:0]intValue]+[[valuesArr3 objectAtIndex:0]intValue];
            
            int val33 = finalVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalVal/8;
            ////NSLog(@"val44 = %i",val44);
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            final_inch = [NSString stringWithFormat:@"%i/8",val33];
            if ([final_inch isEqualToString:@"2/8"]) {
                final_inch = @"1/4";
                
            }
            if ([final_inch isEqualToString:@"4/8"]) {
                final_inch = @"1/2";
                
                
            }
            if ([final_inch isEqualToString:@"6/8"]) {
                final_inch = @"3/4";
                
            }
            if ([final_inch isEqualToString:@"0/8"]) {
                final_inch = @"0";
                
            }
//            if (val33 ==0) {
//                final_inch = @"1";
//            }
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:914]).text =final_inch;
            total_width_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_width_i_text = final_inch;
        }
    }
    
    if(textField.tag == 917 ||textField.tag == 918 ||textField.tag == 919 ||textField.tag == 920){
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text intValue];
        
        NSString *finalinch;
        if(textField.tag == 918){
            topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text;
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
        }
        if(textField.tag == 920){
            heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text;
            valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        }
        if ( (textField.tag == 918  )&& (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""])) {
            if(![[valueArr1 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
            
        }
        else if ( textField.tag == 920&& (valueArr2.count<2 || [[valueArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valueArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else{
            if(textField.tag == 918){
                
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
            }
            if(textField.tag == 920){
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
               /* if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
            }
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
            valueArr2 = [heightInch componentsSeparatedByString:@"/"];
            
            int finalInchVal = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
            
            int val33 = finalInchVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalInchVal/8;
            ////NSLog(@"val44 = %i",val44);
            
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            
            finalinch = [NSString stringWithFormat:@"%i/8",val33];
            
            if ([finalinch isEqualToString:@"2/8"]) {
                finalinch = @"1/4";
                
            }
            if ([finalinch isEqualToString:@"4/8"]) {
                finalinch = @"1/2";
                
                
            }
            if ([finalinch isEqualToString:@"6/8"]) {
                finalinch = @"3/4";
                
            }
            if ([finalinch isEqualToString:@"0/8"]) {
                finalinch = @"0";
                
            }
//            if (val33 ==0) {
//                finalinch = @"1";
//            }
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text =finalinch;
            total_height_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_height_i_text = finalinch;
        }
    }
    
    if(textField.tag == 924 ||textField.tag == 925 ||textField.tag == 926 ||textField.tag == 927){
        
        int feetValue = [((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text intValue]+[((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:926]).text intValue];
        
        NSString *finalinch;
        //if(textField.tag == 925){
            topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:925]).text;
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
        //}
        //if(textField.tag == 927){
            heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:927]).text;
            valueArr2  = [heightInch componentsSeparatedByString:@"/"];
        //}
        if ((textField.tag == 925  )&& (valueArr1.count<2 || [[valueArr1 objectAtIndex:1]isEqualToString:@""])) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 1-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            
        }
        else if ( textField.tag == 927&& (valueArr2.count<2 || [[valueArr2 objectAtIndex:1]isEqualToString:@""])){
            if(![[valueArr2 objectAtIndex:0]isEqualToString:@"0"])
            {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            textField.text=@"0";
            alert.tag = textField.tag;
            [alert show];
            }
        }
        else{
            if(textField.tag == 925){
                
                left_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];
                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    left_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    left_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    left_inch = @"6/8";
                    
                }*/
                
                
                
            }
            if(textField.tag == 927){
                
                width_inch = textField.text;
                textField.text=[self getInchesValues:textField.text];

                
                /*
                if ([textField.text isEqualToString:@"2/8"]) {
                    textField.text = @"1/4";
                    width_inch = @"2/8";
                    
                }
                if ([textField.text isEqualToString:@"4/8"]) {
                    textField.text = @"1/2";
                    width_inch = @"4/8";
                    
                    
                }
                if ([textField.text isEqualToString:@"6/8"]) {
                    textField.text = @"3/4";
                    width_inch = @"6/8";
                    
                }*/
            }
            valueArr1 = [topInch componentsSeparatedByString:@"/"];
            valueArr2 = [heightInch componentsSeparatedByString:@"/"];
            
            int finalInchVal = [[valueArr1 objectAtIndex:0]intValue]+[[valueArr2 objectAtIndex:0]intValue];
            
            int val33 = finalInchVal%8;
            ////NSLog(@"val33 = %i",val33);
            int val44 = finalInchVal/8;
            ////NSLog(@"val44 = %i",val44);
            
//            if (val33 !=0){
//                feetValue = feetValue+val44;
//            }
//            else if (val33 ==0 && val44 >1){
                feetValue = feetValue+val44;
//            }
            finalinch = [NSString stringWithFormat:@"%i/8",val33];
            
            if ([finalinch isEqualToString:@"2/8"]) {
                finalinch = @"1/4";
                
            }
            if ([finalinch isEqualToString:@"4/8"]) {
                finalinch = @"1/2";
                
                
            }
            if ([finalinch isEqualToString:@"6/8"]) {
                finalinch = @"3/4";
                
            }
            if ([finalinch isEqualToString:@"0/8"]) {
                finalinch = @"0";
                
            }
//            if (val33 == 0) {
//                finalinch = @"1";
//            }
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:928]).text =[NSString stringWithFormat:@"%i",feetValue];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:929]).text =finalinch;
            total_height_f_text = [NSString stringWithFormat:@"%i",feetValue];
            total_height_i_text = finalinch;
        }
    }
    
    if (textField == txt_left_inch || textField == txt_center_inch || textField == txt_right_inch) {
        if(textField.text.length>0)
        {
            
            textField.text=[self getInchesValues:textField.text];
            /*if ([textField.text isEqualToString:@"2/8"]) {
                textField.text = @"1/4";
            }
            if ([textField.text isEqualToString:@"4/8"]) {
                textField.text = @"1/2";
            }
            if ([textField.text isEqualToString:@"6/8"]) {
                textField.text = @"3/4";
            }*/
            }
    }
    if(textField == txt_hard_inch || textField == txt_bottum_inch || textField == txt_finished_inch||textField == txt_puddle_inch || textField == txt_return_inch || textField == txt_offthefloor_inch)
    {
        if(textField.text.length>0)
        {
            
            textField.text=[self getInchesValues:textField.text];
            /*if ([textField.text isEqualToString:@"2/8"]) {
             textField.text = @"1/4";
             }
             if ([textField.text isEqualToString:@"4/8"]) {
             textField.text = @"1/2";
             }
             if ([textField.text isEqualToString:@"6/8"]) {
             textField.text = @"3/4";
             }*/
        }
    }
    
    if (viewforMounttypeOM.hidden == NO)
    {
        
        if(textField == txfdleftOM || textField == txfdwidthOM || textField == txfdrightOM ||textField == txfdbracketOM ||textField== txfdleftOM_inch || textField == txfdwidthOM_inch || textField == txfdrightOM_inch || textField == txfdbracketOM_inch){
            if (textField.text.length>0)
            {
                textF_touch_flag_tab1 = 1;
            }
            
            int feetValue = [txfdleftOM.text intValue]+[txfdwidthOM.text intValue]+[txfdrightOM.text intValue]+[txfdbracketOM.text intValue];
            
            NSString *final_inch;
            if(textField == txfdleftOM_inch){
                left_inch_form1 = txfdleftOM_inch.text;
                valuesArr_form1 = [left_inch_form1 componentsSeparatedByString:@"/"];
            }
            if(textField == txfdwidthOM_inch){
                width_inch_form1 = txfdwidthOM_inch.text;
                valuesArr2_form1 = [width_inch_form1 componentsSeparatedByString:@"/"];
            }
            if(textField == txfdrightOM_inch){
                right_inch_form1 = txfdrightOM_inch.text;
                valuesArr3_form1 = [right_inch_form1 componentsSeparatedByString:@"/"];
            }
            if(textField == txfdbracketOM_inch){
                bracket_inch_form1 = txfdbracketOM_inch.text;
                valuesArr4_form1 = [bracket_inch_form1 componentsSeparatedByString:@"/"];
            }
            
            if ((textField == txfdleftOM_inch)&& (valuesArr_form1.count<2 || [[valuesArr_form1 objectAtIndex:1]isEqualToString:@""])) {
                if(![[valuesArr_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            else if ( textField == txfdwidthOM_inch&& (valuesArr2_form1.count<2 || [[valuesArr2_form1 objectAtIndex:1]isEqualToString:@""])){
                if(![[valuesArr2_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            else if ( textField == txfdrightOM_inch&& (valuesArr3_form1.count<2 || [[valuesArr3_form1 objectAtIndex:1]isEqualToString:@""]))
            {
                if(![[valuesArr3_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            else if ( textField == txfdbracketOM_inch&& (valuesArr4_form1.count<2 || [[valuesArr4_form1 objectAtIndex:1]isEqualToString:@""]))
            {
                
                if(![[valuesArr4_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
                
                
            }
            else
            {
                
                if(textField == txfdleftOM_inch)
                {
                    
                    left_inch_form1 = textField.text;
                    textField.text=[self getInchesValues:textField.text];

                    
                    /*if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        left_inch_form1 = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        left_inch_form1 = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        left_inch_form1 = @"6/8";
                        
                    }*/
                    
                    
                    
                }
                if(textField == txfdwidthOM_inch){
                    
                    
                    width_inch_form1 = textField.text;
                    textField.text=[self getInchesValues:textField.text];
                    
                    
                    /*
                    if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        width_inch_form1 = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        width_inch_form1 = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        width_inch_form1 = @"6/8";
                        
                    }*/
                    
                    
                    
                }
                if(textField == txfdrightOM_inch)
                {
                    
                    right_inch_form1 = textField.text;
                    textField.text=[self getInchesValues:textField.text];

                    
                    /*
                    if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        right_inch_form1 = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        right_inch_form1 = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        right_inch_form1 = @"6/8";
                        
                    }*/
                }
                if(textField == txfdbracketOM_inch){
                    
                    bracket_inch_form1 = textField.text;
                    textField.text=[self getInchesValues:textField.text];

                    
                    /*
                    if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        bracket_inch_form1 = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        bracket_inch_form1 = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        bracket_inch_form1 = @"6/8";
                        
                    }*/
                    
                }
                valuesArr_form1 = [left_inch_form1 componentsSeparatedByString:@"/"];
                valuesArr2_form1 = [width_inch_form1 componentsSeparatedByString:@"/"];
                valuesArr3_form1 = [right_inch_form1 componentsSeparatedByString:@"/"];
                valuesArr4_form1 = [bracket_inch_form1 componentsSeparatedByString:@"/"];
                
                int finalInchVal =[[valuesArr_form1 objectAtIndex:0]intValue]+[[valuesArr2_form1 objectAtIndex:0]intValue]+[[valuesArr3_form1 objectAtIndex:0]intValue]+[[valuesArr4_form1 objectAtIndex:0]intValue];
                
                int val33 = finalInchVal%8;
                //NSLog(@"val33 = %i",val33);
                int val44 = finalInchVal/8;
                
                
                //NSLog(@"val44 = %i",val44);
                
//                if (val33 !=0){
//                    feetValue = feetValue+val44;
//                }
//                else if (val33 ==0 && val44 >1){
                    feetValue = feetValue+val44;
//                }
                
                
                
                final_inch = [NSString stringWithFormat:@"%i/8",val33];
                
                if ([final_inch isEqualToString:@"2/8"]) {
                    final_inch = @"1/4";
                    
                }
                if ([final_inch isEqualToString:@"4/8"]) {
                    final_inch = @"1/2";
                    
                    
                }
                if ([final_inch isEqualToString:@"6/8"]) {
                    final_inch = @"3/4";
                    
                }
                if ([final_inch isEqualToString:@"0/8"]) {
                    final_inch = @"0";
                    
                }
                
//                if (val33 == 0) {
//                    final_inch = @"1";
//                }
                //NSLog(@"txftotalWidthOM_inch2");
                
                
                txftotalWidthOM_ft.text =[NSString stringWithFormat:@"%i",feetValue];
                txftotalWidthOM_inch.text =final_inch;
                total_width_f_form1_text = [NSString stringWithFormat:@"%i",feetValue];
                total_width_i_form1_text = final_inch;
            }
        }
        if(textField ==txfdtopOM || textField == txfdheightOM || textField == txfdbottomOM || textField ==txfdtopOM_inch || textField == txfdheightOM_inch || textField == txfdbottomOM_inch)
        {
            
            
            if (textField.text.length>0)
            {
                textF_touch_flag_tab1 = 1;
            }
            
            int feetValue2 = [txfdtopOM.text intValue]+[txfdheightOM.text intValue]+[txfdbottomOM.text intValue];
            
            NSString *final_inch;
            if(textField ==txfdtopOM_inch)
            {
                top_inch = txfdtopOM_inch.text;
                valueArr_form1 = [top_inch componentsSeparatedByString:@"/"];
            }
            if(textField == txfdheightOM_inch){
                height_inch = txfdheightOM_inch.text;
                valueArr2_form1 = [height_inch componentsSeparatedByString:@"/"];
            }
            if(textField == txfdbottomOM_inch){
                bottom_inch = txfdbottomOM_inch.text;
                valueArr3_form1 = [bottom_inch componentsSeparatedByString:@"/"];
            }
            if ((textField == txfdtopOM_inch  )&& (valueArr_form1.count<2 || [[valueArr_form1 objectAtIndex:1]isEqualToString:@""])) {
                if(![[valueArr_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
                
            }
            else if (textField == txfdheightOM_inch&& (valueArr2_form1.count<2 || [[valueArr2_form1 objectAtIndex:1]isEqualToString:@""]))
            {
                if(![[valueArr2_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            else if (textField == txfdbottomOM_inch&& (valueArr3_form1.count<2 || [[valueArr3_form1 objectAtIndex:1]isEqualToString:@""])){
                if(![[valueArr3_form1 objectAtIndex:0]isEqualToString:@"0"])
                {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from 0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                textField.text=@"0";
                alert.tag = textField.tag;
                [alert show];
                }
            }
            else{
                if(textField == txfdtopOM_inch){
                    
                    top_inch = textField.text;
                    textField.text=[self getInchesValues:textField.text];

                    /*
                    if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        top_inch = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        top_inch = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        top_inch = @"6/8";
                        
                    }*/
                    
                    
                    
                }
                if(textField == txfdheightOM_inch){
                    
                    height_inch = textField.text;
                    textField.text=[self getInchesValues:textField.text];
                    
                    /*
                    if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        height_inch = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        height_inch = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        height_inch = @"6/8";
                        
                    }*/
                    
                    
                    
                }
                if(textField == txfdbottomOM_inch){
                    
                    bottom_inch = textField.text;
                    textField.text=[self getInchesValues:textField.text];

                    
                    /*
                    if ([textField.text isEqualToString:@"2/8"]) {
                        textField.text = @"1/4";
                        bottom_inch = @"2/8";
                        
                    }
                    if ([textField.text isEqualToString:@"4/8"]) {
                        textField.text = @"1/2";
                        bottom_inch = @"4/8";
                        
                        
                    }
                    if ([textField.text isEqualToString:@"6/8"]) {
                        textField.text = @"3/4";
                        bottom_inch = @"6/8";
                        
                    }*/
                     
                     
                }
                valueArr_form1 = [top_inch componentsSeparatedByString:@"/"];
                valueArr2_form1 = [height_inch componentsSeparatedByString:@"/"];
                valueArr3_form1 = [bottom_inch componentsSeparatedByString:@"/"];
                
                int finalInchVal = [[valueArr_form1 objectAtIndex:0]intValue]+[[valueArr2_form1 objectAtIndex:0]intValue]+[[valueArr3_form1 objectAtIndex:0]intValue];
                
                int val33 = finalInchVal%8;
                ////NSLog(@"val33 = %i",val33);
                int val44 = finalInchVal/8;
                ////NSLog(@"val44 = %i",val44);
//                if (val33 !=0){
//                    feetValue2 = feetValue2+val44;
//                }
//                else if (val33 ==0&&val44 >1){
                    feetValue2 = feetValue2+val44;
//                }
                
                final_inch = [NSString stringWithFormat:@"%i/8",val33];
                if ([final_inch isEqualToString:@"2/8"]) {
                    final_inch = @"1/4";
                    
                }
                if ([final_inch isEqualToString:@"4/8"]) {
                    final_inch = @"1/2";
                    
                    
                }
                if ([final_inch isEqualToString:@"6/8"]) {
                    final_inch = @"3/4";
                    
                }
                if ([final_inch isEqualToString:@"0/8"]) {
                    final_inch = @"0";
                    
                }
//                if (val33 ==0) {
//                    final_inch = @"1";
//                    
//                }
                txftotalHeightOM_ft.text =[NSString stringWithFormat:@"%i",feetValue2];
                txftotalHeightOM_inch.text =final_inch;
                total_height_f_form1_text = [NSString stringWithFormat:@"%i",feetValue2];
                total_height_i_form1_text = final_inch;
            }
        }
    }
    
    
    
    
    if (textField==txt_left_inch||textField==txt_center_inch||textField==txt_right_inch||textField==txt_bottum_inch||textField==txt_hard_inch||textField==txt_puddle_inch||textField==txt_return_inch||textField==txt_offthefloor_inch||textField==txt_finished_inch)
    {
        if((([textField.text length]==1)&&(![textField.text isEqualToString:@"0"]))||([textField.text length]==0))
        {
            
           textField.text=@"0";
           UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please enter valid number from       0-7/8." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
           
            [alert show];
            
        }
    }
   
    if(textField.tag == 1040||textField.tag ==1041)
    {
        
        if([textField.text length]==0)
        {
            textField.text=@"1";
        }
        
    }
    
    
    //working here
    if(textField.tag==11||textField.tag==13||textField.tag==15||textField.tag==551||textField.tag==553||textField.tag==555||textField.tag==557||textField.tag==559||textField.tag==561||textField.tag==563||textField.tag==515||textField.tag==517||textField.tag==519||textField.tag==115||textField.tag==117||textField.tag==119 ||textField.tag==614||textField.tag==616||textField.tag==618||textField.tag==713||textField.tag==715||textField.tag==717   ||textField.tag==407||textField.tag==409||textField.tag==411||textField.tag==416||textField.tag==417||textField.tag==419||textField.tag==424 ||textField.tag==426||textField.tag==431||textField.tag==436||textField.tag==437||textField.tag==438||textField.tag==439||textField==txt_left_ft||textField==txt_center_ft||textField==txt_right_ft||textField.tag==307||textField.tag==309||textField.tag==311||textField.tag==316||textField.tag==317||textField.tag==319||textField.tag==324 ||textField.tag==326||textField.tag==335||textField.tag==907||textField.tag==909||textField.tag==911||textField.tag==916||textField.tag==917||textField.tag==919||textField.tag==924||textField.tag==926||textField.tag==936)
    {
        if([textField.text length]==0)
        {
            
            textField.text=@"0";
            
        }
        
    }
    
  
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    
    if ((alertView.tag == 308 || alertView.tag == 310|| alertView.tag == 312 || alertView.tag == 318 || alertView.tag == 320|| alertView.tag == 325 || alertView.tag == 327 || alertView.tag == 408 || alertView.tag == 410 || alertView.tag == 412 || alertView.tag == 418 || alertView.tag == 420|| alertView.tag == 425 || alertView.tag == 427 || alertView.tag == 908 || alertView.tag == 910 || alertView.tag == 912 || alertView.tag == 918 || alertView.tag == 920 || alertView.tag == 925 || alertView.tag == 927|| alertView.tag == 552  || alertView.tag == 554 || alertView.tag == 556 || alertView.tag == 558 || alertView.tag == 560 || alertView.tag == 562 || alertView.tag == 564) && buttonIndex == 0) {
        UITextField *txfd = (UITextField *)[self.viewfortabtwo_Controlls viewWithTag:alertView.tag];
        txfd.text = @"0";
        [txfd resignFirstResponder];
    }
    if (( alertView.tag == 552  || alertView.tag == 554 || alertView.tag == 556 || alertView.tag == 558 || alertView.tag == 560 || alertView.tag == 562 || alertView.tag == 564) && buttonIndex == 0) {
        UITextField *txfd = (UITextField *)[self.view viewWithTag:alertView.tag];
        txfd.text = @"0";
        [txfd resignFirstResponder];
    }
    if (alertView.tag ==12 || alertView.tag ==14 || alertView.tag == 16||alertView.tag ==516 || alertView.tag ==518 || alertView.tag == 520||alertView.tag ==116 || alertView.tag ==118 || alertView.tag == 120|| alertView.tag == 520||alertView.tag ==615 || alertView.tag ==617 || alertView.tag == 619||alertView.tag ==714 || alertView.tag ==716 || alertView.tag == 718) {
        UITextField *txfd = (UITextField *)[self.view viewWithTag:alertView.tag];
        txfd.text = @"0";
        [txfd resignFirstResponder];
    }
    if (alertView.tag == 11) {
        [self gotoCustomer_INfo_Page];
    }
}

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    if(textField.tag == 1||textField.tag == 501||textField.tag == 101||textField.tag == 601||textField.tag == 701||textField.tag == 401||textField.tag == 301||textField.tag == 901)
    {
        if([modeValue isEqualToString:@"edit"]&&[textField.text length]>0)
        {
            
            return NO;
        }
        else
        {
            return YES;
        }
    }
    return YES;
}

-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    
    NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                             withString:string];
    
    //NSLog(@"text %@, count %i",text,text.length);
    /////for saving the value of window side mark and material////////
    if (textField.tag == 2||textField.tag == 102 || textField.tag == 502|| textField.tag == 602 || textField.tag == 702) {
        NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                 withString:string];
        windowSideMarkText = text;
    }
    if (textField.tag == 6||textField.tag == 106 || textField.tag == 506|| textField.tag == 613 || textField.tag == 706) {
        NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                 withString:string];
        
        materialText = text;
    }
    if (textField.tag == 302||textField.tag == 402 || textField.tag == 902 ) {
        NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                 withString:string];
        
        windowSideMarkText = text;
    }
    if (textField.tag == 306||textField.tag == 406 || textField.tag == 906 ) {
        NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                 withString:string];
        
        materialText = text;
    }
    ///////////////////end///////////////////////////
    if (textField.tag == 11|| textField.tag == 13|| textField.tag == 15 || textField.tag == 115|| textField.tag == 117|| textField.tag == 119|| textField.tag == 515 || textField.tag == 517|| textField.tag == 519|| textField.tag == 614|| textField.tag == 616|| textField.tag == 618|| textField.tag == 713|| textField.tag == 715|| textField.tag == 717 || textField.tag == 551|| textField.tag == 553|| textField.tag == 555|| textField.tag == 557|| textField.tag == 559|| textField.tag == 561|| textField.tag == 563|| textField.tag == 307|| textField.tag == 309|| textField.tag == 311|| textField.tag == 317|| textField.tag == 319|| textField.tag == 907|| textField.tag == 909|| textField.tag == 911|| textField.tag == 917|| textField.tag == 919|| textField.tag == 407|| textField.tag == 409|| textField.tag == 411|| textField.tag == 417|| textField.tag == 419|| textField.tag == 924|| textField.tag == 926|| textField.tag == 324|| textField.tag == 326|| textField.tag == 424|| textField.tag == 426|| textField.tag == 431|| textField.tag == 436|| textField.tag == 437|| textField.tag == 438|| textField.tag == 439|| textField.tag == 335|| textField.tag == 936 || textField.tag == 416) {
        char *x = (char*)[string UTF8String];
        
        //if(DEBUG_MODE) ////NSLog(@"char index is %i",x[0]);
        
        if([string isEqualToString:@"0"] || [string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] ||  [string isEqualToString:@"8"] ||  [string isEqualToString:@"9"] || x[0]==0 ) {
            
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            return (newLength > 3) ? NO : YES;
            
            
        } else {
            return NO;
        }
                
    }
    
    if (textField.tag == 514|| textField.tag == 114|| textField.tag == 416){
        char *x = (char*)[string UTF8String];
        //if(DEBUG_MODE) ////NSLog(@"char index is %i",x[0]);
        if([string isEqualToString:@"0"] || [string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] ||  [string isEqualToString:@"8"] ||  [string isEqualToString:@"9"] ||  [string isEqualToString:@"/"]|| x[0]==0 ) {
            
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            return (newLength > 10) ? NO : YES;
            
            
        } else {
            return NO;
        }
        
    }
    
    if (textField.tag == 316|| textField.tag == 916)
    {
        char *x = (char*)[string UTF8String];
        //if(DEBUG_MODE) ////NSLog(@"char index is %i",x[0]);
        if([string isEqualToString:@"0"] || [string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] ||  [string isEqualToString:@"8"] ||  [string isEqualToString:@"9"] ||  [string isEqualToString:@"."]|| x[0]==0 ) {
            
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            return (newLength > 15) ? NO : YES;
            
            
        } else {
            return NO;
        }
        
    }
    
    
    ////////////for addition////////////////
    if (textField.tag == 12 || textField.tag == 14 || textField.tag == 16|| textField.tag == 116|| textField.tag == 118|| textField.tag == 121|| textField.tag == 121|| textField.tag == 516|| textField.tag == 518|| textField.tag == 521|| textField.tag == 521|| textField.tag == 615|| textField.tag == 617|| textField.tag == 619|| textField.tag == 714|| textField.tag == 716|| textField.tag == 718|| textField.tag == 408|| textField.tag == 410|| textField.tag == 412|| textField.tag == 418|| textField.tag == 420|| textField.tag == 308|| textField.tag == 310|| textField.tag == 312|| textField.tag == 318|| textField.tag == 320|| textField.tag == 908|| textField.tag == 910|| textField.tag == 912|| textField.tag == 918|| textField.tag == 920|| textField.tag == 925|| textField.tag == 927|| textField.tag == 325|| textField.tag == 327|| textField.tag == 425|| textField.tag == 427) {
        char *x = (char*)[string UTF8String];
        //if(DEBUG_MODE) ////NSLog(@"char index is %i",x[0]);
        if( [string isEqualToString:@"0"] ||[string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"]|| x[0]==0 ) {
            
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            
            if(textField.text.length == 0)
            {
                if([text isEqualToString:@"0"])
                {
                   textField.text = [NSString stringWithFormat: @"0"];
                }
                else
                textField.text = [NSString stringWithFormat: @"%@/8", text];
                return NO;
                
            }
            if (text.length == 2) {
                textField.text = @"";
            }
            return (newLength > 3) ? NO : YES;
            
            
        } else {
            return NO;
        }
        
        
    }
    
    
    if (textField == txfdleftOM_inch|| textField == txfdwidthOM_inch|| textField ==txfdrightOM_inch|| textField == txfdbracketOM_inch|| textField == txfdtopOM_inch|| textField ==txfdheightOM_inch|| textField ==txfdbottomOM_inch ) {
        //////NSLog(@">3...%@",textField.text);
        //////NSLog(@">3...%i",textField.text.length);
        
        char *x = (char*)[string UTF8String];
        //if(DEBUG_MODE) ////NSLog(@"char index is %i",x[0]);
        if([string isEqualToString:@"0"] ||[string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] || x[0]==0 ) {
            
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            
            if(textField.text.length == 0 ){
                if([text isEqualToString:@"0"])
                {
                    textField.text = [NSString stringWithFormat: @"0"];
                }
                else
                textField.text = [NSString stringWithFormat: @"%@/8", text];
                return NO;
                
            }
            if (text.length == 2) {
                textField.text = @"";
            }
            return (newLength > 3) ? NO : YES;
        }
        else
            return NO;
        
        //        else{
        //            NSUInteger newLength = [textField.text length] + [string length] - range.length;
        //            return (newLength > 3) ? NO : YES;
        //        }
        
        
        
        
        
        //////////////end////////////////////
        
        ///////////saving textfield value form2////////////
        
        if (textField.tag == 307 || textField.tag == 407 || textField.tag == 907)
        {
            
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            left_f_text = text;
            
        }
        if (textField.tag == 308 || textField.tag == 408 || textField.tag == 908) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            left_i_text = text;
        }
        if (textField.tag == 309 || textField.tag == 409 || textField.tag == 909) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            width_f_text = text;
        }
        if (textField.tag == 310 || textField.tag == 410 || textField.tag == 910) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            width_i_text = text;
        }
        if (textField.tag == 311 || textField.tag == 411 || textField.tag == 911) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            right_f_text = text;
        }
        if (textField.tag == 312 || textField.tag == 412 || textField.tag == 912) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            right_i_text = text;
        }
        
        if (textField.tag == 316 || textField.tag == 416 || textField.tag == 916) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            hardware_width_text = text;
        }
        if (textField.tag == 317 || textField.tag == 417 || textField.tag == 917) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            top_f_text = text;
        }
        if (textField.tag == 318 || textField.tag == 418 || textField.tag == 918) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            top_i_text = text;
        }
        if (textField.tag == 319 || textField.tag == 419 || textField.tag == 919) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            height_f_text = text;
        }
        if (textField.tag == 320 || textField.tag == 420 || textField.tag == 920) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            height_i_text = text;
        }
        if (textField.tag == 321 || textField.tag == 421 || textField.tag == 921) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            total_height_f_text = text;
        }
        if (textField.tag == 322 || textField.tag == 422 || textField.tag == 922) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            total_height_i_text = text;
        }
        if (textField.tag == 323 || textField.tag == 423 || textField.tag == 923) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            topofpole_text = text;
        }
        //////NSLog(@" height_i_text=%@",height_i_text);
        /////////////end//////////////////////
        
        ///////////saving textfield value form1////////////
        if (textField.tag == 11 || textField.tag == 115|| textField.tag == 515 || textField.tag == 613|| textField.tag == 713) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            width_f_form1_text = text;
            
            //        if (textField.text.length == 3) {
            //            return NO;
            //        }
        }
        
        if (textField.tag == 12 || textField.tag == 116 || textField.tag == 516|| textField.tag == 614|| textField.tag == 714) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            width_i_form1_text = text;
        }
        
        if (textField.tag == 13 || textField.tag == 117 || textField.tag == 517|| textField.tag == 615|| textField.tag == 715) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            height_f_form1_text = text;
        }
        
        if (textField.tag == 14 || textField.tag == 118 || textField.tag == 518|| textField.tag == 616|| textField.tag == 716) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            height_i_form1_text = text;
        }
        
        if (textField.tag == 15 || textField.tag == 119 || textField.tag == 519|| textField.tag == 617|| textField.tag == 717) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            depth_f_form1_text = text;
        }
        
        if (textField.tag == 16 || textField.tag == 121 || textField.tag == 521|| textField.tag == 618|| textField.tag == 718) {
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            depth_i_form1_text = text;
        }
        
        if(viewforMounttypeOM.hidden == NO)
        {
            if(textField == txfdleftOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                left_f_form1_text = text;
            }
            if(textField == txfdleftOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                left_i_form1_text = text;
            }
            if(textField == txfdwidthOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                width_f_form1_text = text;
            }
            if(textField == txfdwidthOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                width_i_form1_text = text;
            }
            if(textField == txfdrightOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                right_f_form1_text = text;
            }
            if(textField == txfdrightOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                right_i_form1_text = text;
            }
            if(textField == txfdbracketOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                bracket_f_form1_text = text;
            }
            if(textField == txfdbracketOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                bracket_i_form1_text = text;
            }
            if(textField == txfdtopOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                top_f_form1_text = text;
            }
            if(textField == txfdtopOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                top_i_form1_text = text;
            }
            if(textField == txfdheightOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                height_f_form1_text = text;
            }
            if(textField == txfdheightOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                height_i_form1_text = text;
            }
            if(textField == txfdbottomOM){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                bottom_f_form1_text = text;
            }
            if(textField == txfdbottomOM_inch){
                NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                         withString:string];
                bottom_i_form1_text = text;
            }
        }
    }
    
    if (textField == txt_left_inch||textField == txt_right_inch||textField == txt_center_inch||textField == txt_hard_inch||textField == txt_bottum_inch||textField == txt_puddle_inch||textField == txt_return_inch||textField == txt_offthefloor_inch ||textField == txt_finished_inch)
    {
        
        char *x = (char*)[string UTF8String];
        if([string isEqualToString:@"0"] ||[string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] || x[0]==0 ) {
            
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            
            NSString *text = [textField.text stringByReplacingCharactersInRange:range
                                                                     withString:string];
            
            if(textField.text.length == 0 )
            {
                if([text isEqualToString:@"0"])
                {
                    textField.text = [NSString stringWithFormat: @"0"];
                }
                else
                textField.text = [NSString stringWithFormat: @"%@/8", text];
                return NO;
                
            }
            if (text.length == 2) {
                textField.text = @"";
            }
            return (newLength > 3) ? NO : YES;
        }
        else
            return NO;
    }
    
     if (textField == txt_left_ft||textField == txt_center_ft||textField == txt_right_ft)
     {
          char *x = (char*)[string UTF8String];
          if([string isEqualToString:@"0"] || [string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] ||  [string isEqualToString:@"8"] ||  [string isEqualToString:@"9"] || x[0]==0 ) {
        
        NSUInteger newLength = [textField.text length] + [string length] - range.length;
        return (newLength > 3) ? NO : YES;
        
        
    } else {
        return NO;
    }
     }
    if(textField.tag==401||textField.tag==1||textField.tag==301||textField.tag==901||textField.tag== 501||textField.tag== 101||textField.tag== 601||textField.tag==701)//new 10
    {
        
        
        NSArray *beginMatch = [room_label_arr filteredArrayUsingPredicate:
                               [NSPredicate predicateWithFormat:
                                @"self BEGINSWITH[c] %@", text]];
        
        //NSLog(@"beginMatch....%@",beginMatch);
        if(beginMatch.count>0)
        {
        if(textField.tag==401)
        {
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        if(textField.tag==1)
        {
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        if(textField.tag==301)
        {
            
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        if(textField.tag==901)
        {
            
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        if(textField.tag==501||textField.tag==101||textField.tag==601||textField.tag==701)
        {
            
            [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
        }
        }
        // optionArray = beginMatch;
        
        //NSLog(@"controller....%@",controller);
        
        if(text.length==0)
        {
            
            
            beginMatch=room_label_arr;
            if(textField.tag==401)
            {
                [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            }
            if(textField.tag==1)
            {
                [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            }
            if(textField.tag==301)
            {
                
                [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            }
            if(textField.tag==901)
            {
                
                [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewfortabtwo_Controlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            }
            if(textField.tag==501||textField.tag==101||textField.tag==601||textField.tag==701)
            {
                
                [popOver presentPopoverFromRect:CGRectMake(170, -150, 120, 175) inView:self.viewforControlls permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
            }
            controller.contentSizeForViewInPopover = CGSizeMake(150, 175);
            
            
            
        }
        else
        {
            
            
            //NSLog(@"here...");
            
            controller.contentSizeForViewInPopover = CGSizeMake(150, 40);
            
            
        }
        if(beginMatch.count==0)
        {
            
            [self.popOver dismissPopoverAnimated:YES];
            
        }
        else
        {
            
            //NSLog(@"here2......");
            
        }
        
         optionArray = beginMatch;
         NSLog(@"optionArray...%@",optionArray);
         [optionTable reloadData];
    }
    
    if(textField.tag == 1||textField.tag == 501||textField.tag == 101||textField.tag == 601||textField.tag == 701||textField.tag == 401||textField.tag == 301||textField.tag == 901)
    {
        
        
        // NSCharacterSet *blockedCharacters = [[NSCharacterSet alphanumericCharacterSet] invertedSet];
        //return ([string rangeOfCharacterFromSet:blockedCharacters].location == NSNotFound);
        NSCharacterSet *cs = [[NSCharacterSet characterSetWithCharactersInString:ACCEPTABLE_CHARECTERS] invertedSet];
        NSString *filtered = [[string componentsSeparatedByCharactersInSet:cs] componentsJoinedByString:@""];
        NSUInteger newLength = [textField.text length] + [string length] - range.length;
        if(newLength > 32)
            return NO;
        return [string isEqualToString:filtered];
        
        
    }
    
    if(textField.tag == 2||textField.tag == 600||textField.tag == 502||textField.tag == 506||textField.tag == 102||textField.tag == 106||textField.tag == 602||textField.tag == 613||textField.tag == 702||textField.tag == 705||textField.tag == 402||textField.tag == 406||textField.tag == 302||textField.tag == 306||textField.tag == 902||textField.tag == 906)
    {
        
        
        
       // NSCharacterSet *blockedCharacters = [[NSCharacterSet alphanumericCharacterSet] invertedSet];
        //return ([string rangeOfCharacterFromSet:blockedCharacters].location == NSNotFound);
        NSCharacterSet *cs = [[NSCharacterSet characterSetWithCharactersInString:ACCEPTABLE_CHARECTERS] invertedSet];
        NSString *filtered = [[string componentsSeparatedByCharactersInSet:cs] componentsJoinedByString:@""];
        NSUInteger newLength = [textField.text length] + [string length] - range.length;
        if(newLength > 64)
            return NO;
        return [string isEqualToString:filtered];
        
        
    }
    
   if(textField.tag == 1040|| textField.tag == 1041)
   {
       
       
       
        char *x = (char*)[string UTF8String];
        
        //if(DEBUG_MODE) ////NSLog(@"char index is %i",x[0]);
        
        if([string isEqualToString:@"0"] || [string isEqualToString:@"1"] ||  [string isEqualToString:@"2"] ||  [string isEqualToString:@"3"] ||  [string isEqualToString:@"4"] ||  [string isEqualToString:@"5"] ||  [string isEqualToString:@"6"] ||  [string isEqualToString:@"7"] ||  [string isEqualToString:@"8"] ||  [string isEqualToString:@"9"] || x[0]==0 ) {
            if([text isEqualToString:@"0"])
            return NO;
            NSUInteger newLength = [textField.text length] + [string length] - range.length;
            return (newLength > 6) ? NO : YES;
            
            
        } else
        {
            return NO;
        }
   }
    
    return YES;
    
    
}




// Called when the UIKeyboardWillHideNotification is sent


- (void)keyboardWillBeHidden:(NSNotification*)aNotification
{
    UIEdgeInsets contentInsets = UIEdgeInsetsZero;
    scrollFortab2.contentInset = contentInsets;
    scrollFortab2.scrollIndicatorInsets = contentInsets;
}


//-(void)textFieldDidChange:(UITextField *)txfd{
////     //////NSLog(@"text=%i",txfd.text.length);
//    if (txfd.text.length==1) {
//         strr = txfd.text;
//         txfd.text = [strr stringByAppendingString:@"/"];
//        strr = txfd.text;
//    }
////    else if(txfd.text.length==2) {
////        txfd.text=@"";
////        //////NSLog(@"text=");
////    }
//}



- (void)gotoHideKeyboard
{
    
    [self.view endEditing:YES];
    
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    
    
    // to update NoteView
    [note setNeedsDisplay];
    
    
}

-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    
    [scrollFortab2 setContentOffset:svos animated:YES];
    [textField resignFirstResponder];
    return YES;
    
}

-(void)noneBtnClicked:(id)sender{
    
    if(optionView.tag == 10)
    {
        
        
        //////NSLog(@"nonetag=%i",noneBtn.tag);
        if (noneFlag == 0 ) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphFlag = 0;
            mvalanceFlag = 0;
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:998] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:887] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:776] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:998]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:887]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:776]).userInteractionEnabled = NO;
            
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = @"None";
            //         //////NSLog(@"txt_text = %@",((UITextField *)[self.viewforControlls viewWithTag:10]).text);
            [tfoptionalFeatureArr removeAllObjects];
            
        }
        else
        {
            
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = @"";
            noneFlag = 0;
            
        }
    }
    else if (optionView.tag == 110)
    {
        if (noneFlag == 0 )
        {
            
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphFlag = 0;
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            
            [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = NO;
            ((UITextField *)[self.viewforControlls viewWithTag:110]).text = @"None";
            [tfoptionalFeatureArr removeAllObjects];
            
            
        }
        else{
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            ((UITextField *)[self.viewforControlls viewWithTag:110]).text = @"";
            noneFlag = 0;
        }
        
    }
    
    else if (optionView.tag == 510){
        if (noneFlag == 0 ) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            noneFlag = 1;
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphFlag = 0;
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            
            [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = NO;
            ((UITextField *)[self.viewforControlls viewWithTag:510]).text = @"None";
            [tfoptionalFeatureArr removeAllObjects];
            
        }
        else{
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            ((UITextField *)[self.viewforControlls viewWithTag:510]).text = @"";
            noneFlag = 0;
        }
        
    }
    
    
}


-(void)uphBtnClicked:(UIButton *)sender{
    ////NSLog(@"tagg = %i",sender.tag);
    ////NSLog(@"optionView.tag = %i",optionView.tag);
    if(sender.tag == 2002){
        if (uphFlag == 0) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            noneFlag = 0;
            
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            uphFlag = 1;
            
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = YES;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = YES;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = YES;
            
            //        controller.contentSizeForViewInPopover = CGSizeMake(120, 150);
            [tfoptionalFeatureArr addObject:@"1"];
            //////NSLog(@"tfoptionalFeatureArr=%@",tfoptionalFeatureArr);
            if(optionView.tag == 110){
                //////NSLog(@"110");
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else{
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
        
        
        else
        {
            
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphFlag = 0;
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = NO;
            //        controller.contentSizeForViewInPopover = CGSizeMake(120, 70);
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [tfoptionalFeatureArr removeObject:@"1"];
            [tfoptionalFeatureArr removeObject:@"2"];
            [tfoptionalFeatureArr removeObject:@"3"];
            [tfoptionalFeatureArr removeObject:@"4"];
            if(optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else{
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
    }
    else if(sender.tag == 1002){
        if (uphFlag == 0) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            noneFlag = 0;
            
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            uphFlag = 1;
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = YES;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = YES;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = YES;
            if (optionView.tag == 10) {
                [tfoptionalFeatureArr addObject:@"1"];
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
        else{
            [uphBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphFlag = 0;
            ((UIButton *)[optionView viewWithTag:999]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:888]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:777]).userInteractionEnabled = NO;
            
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            uphOtionBtnoneFlag = 0;
            uphOtionBtntwoFlag = 0;
            uphOtionBtnthreeFlag = 0;
            [tfoptionalFeatureArr removeObject:@"1"];
            [tfoptionalFeatureArr removeObject:@"2"];
            [tfoptionalFeatureArr removeObject:@"3"];
            [tfoptionalFeatureArr removeObject:@"4"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            
            
        }
        
    }
    [self textFieldwothtag100_text];
}

-(void)mvalanceBtnClicked:(UIButton *)sender{
    
    //NSLog(@"mvalanceBtnClicked....");
    
    if (sender.tag == 1003)
    {
        if (mvalanceFlag == 0) {
            [noneBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            noneFlag = 0;
            
            [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            mvalanceFlag = 1;
            
            ((UIButton *)[optionView viewWithTag:998]).userInteractionEnabled = YES;
            ((UIButton *)[optionView viewWithTag:887]).userInteractionEnabled = YES;
            ((UIButton *)[optionView viewWithTag:776]).userInteractionEnabled = YES;
            [tfoptionalFeatureArr addObject:@"5"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
        else{
            
            
            [mvalanceBtn setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            mvalanceFlag = 0;
            ((UIButton *)[optionView viewWithTag:998]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:887]).userInteractionEnabled = NO;
            ((UIButton *)[optionView viewWithTag:776]).userInteractionEnabled = NO;
            [(UIButton *)[optionView viewWithTag:998] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:887] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:776] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            mvOtionBtnoneFlag = 0;
            mvOtionBtntwoFlag = 0;
            mvOtionBtnthreeFlag = 0;
            [tfoptionalFeatureArr removeObject:@"6"];
            [tfoptionalFeatureArr removeObject:@"7"];
            [tfoptionalFeatureArr removeObject:@"8"];
            [tfoptionalFeatureArr removeObject:@"5"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            
        }
        
    }
    [self textFieldwothtag100_text];
}

-(void)uphoptionBtnClicked:(UIButton *)sender{
    ////NSLog(@"uphoptionBtnClicked.tag = %i",sender.tag);
    if(sender.tag == 999){
        
        
        if(uphOtionBtnoneFlag == 0){
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            uphOtionBtnoneFlag = 1;
            [tfoptionalFeatureArr addObject:@"2"];
            [tfoptionalFeatureArr removeObject:@"3"];
            [tfoptionalFeatureArr removeObject:@"4"];
            uphOtionBtnthreeFlag=0;
            uphOtionBtntwoFlag=0;
            if(optionView.tag == 10)
            {
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 510){
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            
            
        }
        else{
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            uphOtionBtnoneFlag = 0;
            [tfoptionalFeatureArr removeObject:@"2"];
            if(optionView.tag == 10){
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 510){
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            
        }
    }
    if(sender.tag == 888){
        if(uphOtionBtntwoFlag == 0){
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            uphOtionBtntwoFlag = 1;
            [tfoptionalFeatureArr addObject:@"3"];
            [tfoptionalFeatureArr removeObject:@"2"];
            [tfoptionalFeatureArr removeObject:@"4"];
            uphOtionBtnthreeFlag=0;
            uphOtionBtnoneFlag=0;
            if (optionView.tag == 10){
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 510){
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            
            else if (optionView.tag == 712){
                //                ((UITextField *)[self.viewforControlls viewWithTag:712]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
        else{
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            
            uphOtionBtntwoFlag = 0;
            [tfoptionalFeatureArr removeObject:@"3"];
           
            
            if (optionView.tag == 10){
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 510){
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            
            else if (optionView.tag == 712){
                //                ((UITextField *)[self.viewforControlls viewWithTag:712]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
        //[self textFieldwothtag100_text];
    }
    if(sender.tag == 777){
        if(uphOtionBtnthreeFlag == 0){
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:999] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:888] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            uphOtionBtnthreeFlag = 1;
            uphOtionBtntwoFlag=0;
             uphOtionBtnoneFlag=0;
            [tfoptionalFeatureArr addObject:@"4"];
            [tfoptionalFeatureArr removeObject:@"2"];
            [tfoptionalFeatureArr removeObject:@"3"];
            if (optionView.tag == 10){
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 510){
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            
            else if (optionView.tag == 712){
                //                ((UITextField *)[self.viewforControlls viewWithTag:712]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
        else{
            [(UIButton *)[optionView viewWithTag:777] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            uphOtionBtnthreeFlag = 0;
            [tfoptionalFeatureArr removeObject:@"4"];
            if (optionView.tag == 10){
                //                ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 110){
                //                ((UITextField *)[self.viewforControlls viewWithTag:110]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            else if (optionView.tag == 510){
                //                ((UITextField *)[self.viewforControlls viewWithTag:510]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
            
            else if (optionView.tag == 712){
                //                ((UITextField *)[self.viewforControlls viewWithTag:712]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
            }
        }
      //  [self textFieldwothtag100_text];
    }
    if (sender.tag == 998) {
        if (mvOtionBtnoneFlag == 0) {
            
            [(UIButton *)[optionView viewWithTag:998] setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:887] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:776] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            mvOtionBtnoneFlag = 1;
            mvOtionBtnthreeFlag = 0;
            mvOtionBtntwoFlag = 0;
            [tfoptionalFeatureArr addObject:@"6"];
            [tfoptionalFeatureArr removeObject:@"7"];
            [tfoptionalFeatureArr removeObject:@"8"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
        else{
            [(UIButton *)[optionView viewWithTag:998] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            
            mvOtionBtnoneFlag = 0;
            [tfoptionalFeatureArr removeObject:@"6"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
    }
    if (sender.tag == 887) {
        if(mvOtionBtntwoFlag == 0){
            [(UIButton *)[optionView viewWithTag:887] setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:998] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:776] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            mvOtionBtnoneFlag = 0;
            mvOtionBtnthreeFlag = 0;
            [tfoptionalFeatureArr addObject:@"7"];
            [tfoptionalFeatureArr removeObject:@"8"];
            mvOtionBtntwoFlag = 1;
            [tfoptionalFeatureArr removeObject:@"6"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
        else{
            [(UIButton *)[optionView viewWithTag:887] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            mvOtionBtntwoFlag = 0;
            [tfoptionalFeatureArr removeObject:@"7"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
        
    }
    if (sender.tag == 776) {
        if(mvOtionBtnthreeFlag == 0){
            [(UIButton *)[optionView viewWithTag:776] setImage:[UIImage imageNamed:@"radio_button_on.png"] forState:UIControlStateNormal];
            mvOtionBtnthreeFlag = 1;
            [tfoptionalFeatureArr addObject:@"8"];
            [(UIButton *)[optionView viewWithTag:998] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            [(UIButton *)[optionView viewWithTag:887] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            mvOtionBtnoneFlag = 0;
            [tfoptionalFeatureArr removeObject:@"6"];
            mvOtionBtntwoFlag = 0;
            [tfoptionalFeatureArr removeObject:@"7"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
        else{
            [(UIButton *)[optionView viewWithTag:776] setImage:[UIImage imageNamed:@"Radio_button_off.png"] forState:UIControlStateNormal];
            mvOtionBtnthreeFlag = 0;
            [tfoptionalFeatureArr removeObject:@"8"];
            //            ((UITextField *)[self.viewforControlls viewWithTag:100]).text = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
        }
        
    }
    if(sender.tag == 88){
        if(uphOtionBtntwoFlag == 0){
            [(UIButton *)[optionView viewWithTag:88] setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            uphOtionBtntwoFlag = 1;
        }
        else{
            [(UIButton *)[optionView viewWithTag:88] setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphOtionBtntwoFlag = 0;
        }
    }
    if(sender.tag == 77){
        if(uphOtionBtnthreeFlag == 0){
            [(UIButton *)[optionView viewWithTag:77] setImage:[UIImage imageNamed:@"checkbox_on.png"] forState:UIControlStateNormal];
            uphOtionBtnthreeFlag = 1;
        }
        else{
            [(UIButton *)[optionView viewWithTag:77] setImage:[UIImage imageNamed:@"checkbox_off.png"] forState:UIControlStateNormal];
            uphOtionBtnthreeFlag = 0;
        }
    }
    
    [self textFieldwothtag100_text];
    
}

-(void)textFieldwothtag100_text
{
    
    //NSLog(@"textFieldwothtag100_text...%i",optionView.tag);
    //NSLog(@"tfoptionalFeatureArr...%@",tfoptionalFeatureArr);
    NSString *str121 = @"UPH Valance";
    NSString *str122 = @" M. Valance";
    if([modeValue isEqualToString:@"new"]){
        if(optionView.tag == 10){
            if ([tfoptionalFeatureArr containsObject:@"1"])
            {
                if ([tfoptionalFeatureArr containsObject:@"2"])
                {
                    str121=[NSString stringWithFormat:@"%@-1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"3"])
                {
                    str121=[NSString stringWithFormat:@"%@-2 on 1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"4"])
                {
                    str121=[NSString stringWithFormat:@"%@-3 on 1",str121];
                }
                
                ((UITextField *)[self.view viewWithTag:100]).text =str121;
            }
            
             if ([tfoptionalFeatureArr containsObject:@"5"])
            {
                
                if ([tfoptionalFeatureArr containsObject:@"6"])
                {
                    str122=[NSString stringWithFormat:@"%@-1",str122];
                }
                else if ([tfoptionalFeatureArr containsObject:@"7"])
                {
                    str122=[NSString stringWithFormat:@"%@-2 on 1",str122];
                }
                else if ([tfoptionalFeatureArr containsObject:@"8"])
                {
                    str122=[NSString stringWithFormat:@"%@-3 on 1",str122];
                }
               
                ((UITextField *)[self.view viewWithTag:100]).text = str122;
            }
            if ([tfoptionalFeatureArr containsObject:@"1"] &&[tfoptionalFeatureArr containsObject:@"5"] )
            {
                
                ////NSLog(@"tfoptionalFeatureArr = ");
                ((UITextField *)[self.view viewWithTag:100]).text =[NSString stringWithFormat:@"%@,%@",str121, str122];
                
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:100]).text = @"";
            }
        }
        if (optionView.tag == 510) {
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                
                if ([tfoptionalFeatureArr containsObject:@"2"])
                {
                    str121=[NSString stringWithFormat:@"%@-1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"3"])
                {
                    str121=[NSString stringWithFormat:@"%@-2 on 1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"4"])
                {
                    str121=[NSString stringWithFormat:@"%@-3 on 1",str121];
                }
                
                 //NSLog(@"come here...");
                
                ((UITextField *)[self.view viewWithTag:510]).text =str121;
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:510]).text = @"";
            }
        }
        if (optionView.tag == 110) {
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                
                if ([tfoptionalFeatureArr containsObject:@"2"])
                {
                    str121=[NSString stringWithFormat:@"%@-1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"3"])
                {
                    str121=[NSString stringWithFormat:@"%@-2 on 1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"4"])
                {
                    str121=[NSString stringWithFormat:@"%@-3 on 1",str121];
                }
                ((UITextField *)[self.view viewWithTag:110]).text =str121;
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:110]).text = @"";
            }
        }
        if (optionView.tag == 712) {
            NSString *str121 = @"2 on 1";
            NSString *str122 = @"3 on 1";
            if ([tfoptionalFeatureArr containsObject:@"3"]) {
                ((UITextField *)[self.view viewWithTag:712]).text =str121;
            }
            else if ([tfoptionalFeatureArr containsObject:@"4"]) {
                ((UITextField *)[self.view viewWithTag:712]).text = str122;
            }
            if ([tfoptionalFeatureArr containsObject:@"3"] &&[tfoptionalFeatureArr containsObject:@"4"] ){
                ////NSLog(@"tfoptionalFeatureArr = ");
                ((UITextField *)[self.view viewWithTag:712]).text =[NSString stringWithFormat:@"%@,%@",str121, str122];
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:712]).text = @"";
            }
            
        }
    }
    else{
        if([productnameTF.text isEqualToString:@"Roller Shade"]){
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                if ([tfoptionalFeatureArr containsObject:@"2"])
                {
                    str121=[NSString stringWithFormat:@"%@-1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"3"])
                {
                    str121=[NSString stringWithFormat:@"%@-2 on 1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"4"])
                {
                    str121=[NSString stringWithFormat:@"%@-3 on 1",str121];
                }
                ((UITextField *)[self.view viewWithTag:100]).text =str121;
            }
            if ([tfoptionalFeatureArr containsObject:@"5"])
            {
                
                if ([tfoptionalFeatureArr containsObject:@"6"])
                {
                    str122=[NSString stringWithFormat:@"%@-1",str122];
                }
                else if ([tfoptionalFeatureArr containsObject:@"7"])
                {
                    str122=[NSString stringWithFormat:@"%@-2 on 1",str122];
                }
                else if ([tfoptionalFeatureArr containsObject:@"8"])
                {
                    str122=[NSString stringWithFormat:@"%@-3 on 1",str122];
                }
                 //NSLog(@"come here...");
                ((UITextField *)[self.view viewWithTag:100]).text = str122;
            }
            if ([tfoptionalFeatureArr containsObject:@"1"] &&[tfoptionalFeatureArr containsObject:@"5"] ){
                ////NSLog(@"tfoptionalFeatureArr = ");
                ((UITextField *)[self.view viewWithTag:100]).text =[NSString stringWithFormat:@"%@,%@",str121, str122];
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:100]).text = @"";
            }
        }
        else if ([productnameTF.text isEqualToString:@"Roman Shade"]){
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                
                if ([tfoptionalFeatureArr containsObject:@"2"])
                {
                    str121=[NSString stringWithFormat:@"%@-1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"3"])
                {
                    str121=[NSString stringWithFormat:@"%@-2 on 1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"4"])
                {
                    str121=[NSString stringWithFormat:@"%@-3 on 1",str121];
                }
                
                ((UITextField *)[self.view viewWithTag:510]).text =str121;
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:510]).text = @"";
            }
            
        }
        else if ([productnameTF.text isEqualToString:@"Woven Wood"]){
            if ([tfoptionalFeatureArr containsObject:@"1"]) {
                if ([tfoptionalFeatureArr containsObject:@"2"])
                {
                    str121=[NSString stringWithFormat:@"%@-1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"3"])
                {
                    str121=[NSString stringWithFormat:@"%@-2 on 1",str121];
                }
                else if ([tfoptionalFeatureArr containsObject:@"4"])
                {
                    str121=[NSString stringWithFormat:@"%@-3 on 1",str121];
                }
                ((UITextField *)[self.view viewWithTag:110]).text =str121;
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:110]).text = @"";
            }
        }
        
        else if ([productnameTF.text isEqualToString:@"XL Pleat"]){
            NSString *str121 = @"2 on 1";
            NSString *str122 = @"3 on 1";
            if ([tfoptionalFeatureArr containsObject:@"3"]) {
                ((UITextField *)[self.view viewWithTag:712]).text =str121;
            }
            else if ([tfoptionalFeatureArr containsObject:@"4"]) {
                ((UITextField *)[self.view viewWithTag:712]).text = str122;
            }
            if ([tfoptionalFeatureArr containsObject:@"3"] &&[tfoptionalFeatureArr containsObject:@"4"] ){
                ((UITextField *)[self.view viewWithTag:712]).text =[NSString stringWithFormat:@"%@,%@",str121, str122];
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:712]).text = @"";
            }
            
        }
        else if ([productnameTF.text isEqualToString:@"Cellular Shade"]){
            NSString *str121 = @"2 on 1";
            NSString *str122 = @"3 on 1";
            if ([tfoptionalFeatureArr containsObject:@"3"]) {
                ((UITextField *)[self.view viewWithTag:712]).text =str121;
            }
            else if ([tfoptionalFeatureArr containsObject:@"4"]) {
                ((UITextField *)[self.view viewWithTag:712]).text = str122;
            }
            if ([tfoptionalFeatureArr containsObject:@"3"] &&[tfoptionalFeatureArr containsObject:@"4"] ){
                ////NSLog(@"tfoptionalFeatureArr = ");
                ((UITextField *)[self.view viewWithTag:712]).text =[NSString stringWithFormat:@"%@,%@",str121, str122];
            }
            else if(tfoptionalFeatureArr.count == 0||(tfoptionalFeatureArr.count == 1 && [tfoptionalFeatureArr containsObject:@""]) ){
                ((UITextField *)[self.view viewWithTag:712]).text = @"";
            }
            
        }
    }
    //    ////NSLog(@"tfoptionalFeatureArr22 = %@",tfoptionalFeatureArr);
}

-(int)gcdForNumber1:(int) m andNumber2:(int) n
{
    while( m!= n) // execute loop until m == n
    {
        if( m > n)
            m= m - n; // large - small , store the results in large variable<br>
        else
            n= n - m;
    }
    return ( m); // m or n is GCD
}


-(int)tenRaisedTopower:(int)decimalLength {
    int answer = 10;
    while (decimalLength!= 1) {
        answer *= 10;
        decimalLength -- ;
    }
    return answer;
}

-(NSString *)floatToFraction:(float)decimalNumber
{
    NSString *decimalString = [NSString stringWithFormat:@"%f", decimalNumber];
    NSArray *components = [decimalString componentsSeparatedByString:@"."];
    int decimalLength = [[components objectAtIndex:1] length];
    int n = [self tenRaisedTopower:decimalLength];
    int m = [[components objectAtIndex:1] intValue];
    int gcd = [self gcdForNumber1:m andNumber2:n];
    int numer = m/gcd;
    int deno = n/gcd;
    int fractionnumer = ([[components objectAtIndex:0] intValue] * deno) + numer;
    NSString *answer = [NSString stringWithFormat:@"%d/%d",fractionnumer,deno];
    return answer;
}




-(void)printDataOnFields_second:(NSMutableArray *)arr{
    ////////NSLog(@"arrTab2=%@",arrTab2);
    if (!arr) {
        
        ////////NSLog(@"no value in array");
    }
    else{
        
        leadMeasurementInfotab2 * leadMeasObj22= [[leadMeasurementInfotab2 alloc]init];
        leadMeasObj22 = [arr objectAtIndex:0];
        if ([leadMeasObj22.controlPosition isEqualToString:@"S"]) {
            leadMeasObj22.controlPosition =@"Standard";
        }
        else if ([leadMeasObj22.controlPosition isEqualToString:@"BOTHL"]){
            leadMeasObj22.controlPosition =@"Both On Left";
        }
        else if ([leadMeasObj22.controlPosition isEqualToString:@"BOTHR"]){
            leadMeasObj22.controlPosition =@"Both On Right";
        }
        else if ([leadMeasObj22.controlPosition isEqualToString:@"L"]){
            leadMeasObj22.controlPosition =@"Left";
        }
        else if ([leadMeasObj22.controlPosition isEqualToString:@"R"]){
            leadMeasObj22.controlPosition =@"Right";
        }
        
        if ([leadMeasObj22.mountType2 isEqualToString:@"W"]) {
            leadMeasObj22.mountType2 = @"Wall";
        }
        else if ([leadMeasObj22.mountType2 isEqualToString:@"C"]){
            leadMeasObj22.mountType2 = @"Ceiling";
        }
        if ([leadMeasObj22.cordType isEqualToString:@"C"]) {
            leadMeasObj22.cordType = @"Cord";
        }
        else if ([leadMeasObj22.cordType isEqualToString:@"CL"]){
            leadMeasObj22.cordType = @"Con-Loop";
        }
        if ([leadMeasObj22.tdbu isEqualToString:@"1"]) {
            leadMeasObj22.tdbu = @"Yes";
        }
        else if ([leadMeasObj22.tdbu isEqualToString:@"0"]){
            leadMeasObj22.tdbu = @"No";
        }
        if ([leadMeasObj22.spacerNeeded isEqualToString:@"1"]) {
            leadMeasObj22.spacerNeeded = @"Yes";
        }
        else if ([leadMeasObj22.spacerNeeded isEqualToString:@"0"]){
            leadMeasObj22.spacerNeeded = @"No";
        }
        if ([leadMeasObj22.oldTreatment isEqualToString:@"1"]) {
            leadMeasObj22.oldTreatment = @"Yes";
        }
        else if ([leadMeasObj22.oldTreatment isEqualToString:@"0"]){
            leadMeasObj22.oldTreatment = @"No";
        }
        if ([leadMeasObj22.extentionBracket isEqualToString:@"1"]) {
            leadMeasObj22.extentionBracket = @"Yes";
        }
        else if ([leadMeasObj22.extentionBracket isEqualToString:@"0"]){
            leadMeasObj22.extentionBracket = @"No";
        }
        
        if ([leadMeasObj22.mountType isEqualToString:@"Inside Mount"]) {
            leadMeasObj22.mountType = @"IM";
        }
        else if ([leadMeasObj22.mountType isEqualToString:@"Outside Mount"]){
            leadMeasObj22.mountType = @"OM";
        }
        ////////NSLog(@"selectedTreatmentType=%@ and %@",selectedTreatmentType,leadMeasObj22.mountType);
        
        
        if ([selectedTreatmentType_two isEqualToString:@"3" ] ){
            ////////NSLog(@"afdfa");
            
            
            if([leadMeasObj22.roomLabel isEqualToString:@"OTHER"])
            {
                
                NSLog(@".....leadMeasObj2.winTitle...%@",leadMeasObj22.winTitle);
                
                if([leadMeasObj22.winTitle length]==0||[leadMeasObj22.winTitle isEqualToString:@"(null)"])
                {
                    
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = leadMeasObj22.roomLabel;
                    
                }
                else
                {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = [NSString stringWithFormat:@"%@",leadMeasObj22.winTitle];
                }
                
                
            }
            else
            {
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = leadMeasObj22.roomLabel;
            }
            
           // ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text = leadMeasObj22.roomLabel;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302]).text = leadMeasObj22.windowSidemark;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:303]).text = leadMeasObj22.laye;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:304]).text = leadMeasObj22.material;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306]).text = leadMeasObj22.pairorSingle;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text =  leadMeasObj22.leftFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text =  leadMeasObj22.leftInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text = leadMeasObj22.widthFt;
            [NSString stringWithFormat:@"%@.%@",leadMeasObj22.rightFt,leadMeasObj22.rightInch];
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text = leadMeasObj22.widthInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text = leadMeasObj22.rightFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text =leadMeasObj22.rightInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:316]).text =leadMeasObj22.hardwareWidth;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text =leadMeasObj22.topFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text =leadMeasObj22.topInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text =leadMeasObj22.heightFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text =leadMeasObj22.heightInch;
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text = leadMeasObj22.topofPole;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text = leadMeasObj22.ceilingtofloor;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text = leadMeasObj22.mountType2;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text = leadMeasObj22.cordSide;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text = leadMeasObj22.extentionBracket;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text = leadMeasObj22.oldTreatment;
            
            for (int i =301 ; i<329; i++) {
                if ([((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i]).text isEqualToString:@"(null)"]) {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i]).text = @"";
                }
            }
            
        }
        else if ([selectedTreatmentType_two isEqualToString:@"4" ] )
        {
            if([leadMeasObj22.roomLabel isEqualToString:@"OTHER"])
            {
                
                if([leadMeasObj22.winTitle length]==0||[leadMeasObj22.winTitle isEqualToString:@"(null)"])
                {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = leadMeasObj22.roomLabel;
                }
                else
                {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = [NSString stringWithFormat:@"%@",leadMeasObj22.winTitle];
                }
                
                
            }
            else
            {
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = leadMeasObj22.roomLabel;
            }
          //  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text = leadMeasObj22.roomLabel;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402]).text = leadMeasObj22.windowSidemark;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:403]).text = leadMeasObj22.laye;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:404]).text = leadMeasObj22.material;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406]).text = leadMeasObj22.pairorSingle;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text =  leadMeasObj22.leftFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text = leadMeasObj22.leftInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text = leadMeasObj22.widthFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text = leadMeasObj22.widthInch;
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text =leadMeasObj22.rightFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text =  leadMeasObj22.rightInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:416]).text =leadMeasObj22.hardwareWidth;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text =leadMeasObj22.topFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text =leadMeasObj22.topInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text =leadMeasObj22.heightFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text =leadMeasObj22.heightInch;
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text = leadMeasObj22.topofPole;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text = leadMeasObj22.finishedLength;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text = leadMeasObj22.ceilingtofloor;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:426]).text = leadMeasObj22.mountType2;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:427]).text = leadMeasObj22.functionality;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:428]).text = leadMeasObj22.extentionBracket;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:429]).text = leadMeasObj22.oldTreatment;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:430]).text = leadMeasObj22.returnn;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:431]).text = leadMeasObj22.puddle;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:432]).text = leadMeasObj22.oftheFloor;
            
            for (int i =401 ; i<433; i++) {
                if ([((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i]).text isEqualToString:@"(null)"]) {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i]).text = @"";
                }
            }
            
        }
        else if ([selectedTreatmentType_two isEqualToString:@"9" ] ){
            if([leadMeasObj22.roomLabel isEqualToString:@"OTHER"])
            {
                
                NSLog(@".....leadMeasObj2.winTitle...%@",leadMeasObj22.winTitle);
                
                if([leadMeasObj22.winTitle length]==0||[leadMeasObj22.winTitle isEqualToString:@"(null)"])
                {
                    
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = leadMeasObj22.roomLabel;
                    
                }
                else
                {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = [NSString stringWithFormat:@"%@",leadMeasObj22.winTitle];
                }
                
                
            }
            else
            {
                ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = leadMeasObj22.roomLabel;
            }
            //((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text = leadMeasObj22.roomLabel;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902]).text = leadMeasObj22.windowSidemark;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:903]).text = leadMeasObj22.laye;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:904]).text = leadMeasObj22.material;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:905]).text = leadMeasObj22.pairorSingle;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text = leadMeasObj22.leftFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text = leadMeasObj22.leftInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text = leadMeasObj22.widthFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text = leadMeasObj22.widthInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text = leadMeasObj22.rightFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text = leadMeasObj22.rightInch;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text = leadMeasObj22.hardwareWidth;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:915]).text =leadMeasObj22.topFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:916]).text =leadMeasObj22.topInch;
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text =leadMeasObj22.heightFt;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text =leadMeasObj22.heightInch;
            
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text = leadMeasObj22.topofPole;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text = leadMeasObj22.ceilingtofloor;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text = leadMeasObj22.mountType2;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:922]).text = leadMeasObj22.systemm;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text = leadMeasObj22.cordSide;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text = leadMeasObj22.extentionBracket;
            ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:925]).text = leadMeasObj22.oldTreatment;
            
            for (int i =901 ; i<930; i++) {
                if ([((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i]).text isEqualToString:@"(null)"]) {
                    ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:i]).text = @"";
                }
            }
        }
    }
    
}

-(void)cleartextfield:(UITextField *)tf{
    if ([tf.text isEqualToString:@"null"]) {
        tf.text = @"";
    }
}

-(void)displayUserDetails:(customerDetails *)custDetailObj{
    if ([custDetailObj.addressStr isEqualToString:@"<null>"]) {
        custDetailObj.addressStr = @"";
    }
    if ([custDetailObj.nameStr isEqualToString:@"<null>"]) {
        custDetailObj.nameStr = @"";
    }
    if ([custDetailObj.lastName isEqualToString:@"<null>"]) {
        custDetailObj.lastName = @"";
    }
    if ([custDetailObj.emailStr isEqualToString:@"<null>"]) {
        custDetailObj.emailStr = @"";
    }
    if ([custDetailObj.phoneStr isEqualToString:@"<null>"]) {
        custDetailObj.phoneStr = @"";
    }
    if ([custDetailObj.lead_hash isEqualToString:@"<null>"]) {
        custDetailObj.lead_hash = @"";
    }
    if ([custDetailObj.manufac_name isEqualToString:@"<null>"]) {
        custDetailObj.manufac_name = @"";
    }
    if ([custDetailObj.date isEqualToString:@"<null>"]) {
        custDetailObj.date = @"";
    }
    NSString *newString1 = [[custDetailObj.addressStr componentsSeparatedByCharactersInSet:[NSCharacterSet newlineCharacterSet]] componentsJoinedByString:@" "];
    custDetailObj.addressStr = newString1;
    //////customer name/////////////////
    //SET THE WIDTH CONSTRAINTS FOR LABEL.
    CGFloat constrainedWidth = 150;
    //CALCULATE THE SPACE FOR THE TEXT SPECIFIED.
    CGSize sizeOfText=[custDetailObj.nameStr sizeWithFont:custName.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    CGRect fram = custName.frame;
    fram.size.height = sizeOfText.height;
    custName.frame = fram;
    custName.text = [NSString stringWithFormat:@"%@ %@",custDetailObj.nameStr,custDetailObj.lastName];
    custName.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    
    
    ///////manufacturer name/////////////
    //     techName.text = custDetailObj.manufac_name;
    CGSize sizeOfText1=[custDetailObj.manufac_name sizeWithFont:techName.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    CGRect fram1 = techName.frame;
    fram1.size.height = sizeOfText1.height;
    techName.frame = fram1;
    techName.text=custDetailObj.manufac_name;
    techName.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    
    ////////customer address/////////
    
    
    //    CGRect lblframe = cust_addrLbl.frame;
    //    lblframe.origin.y = custName.frame.origin.y+custName.frame.size.height+5;
    //    cust_addrLbl.frame = lblframe;
    //
    //    CGRect semiframe1 = cust_addrSemi.frame;
    //    semiframe1.origin.y = cust_addrLbl.frame.origin.y;
    //    cust_addrSemi.frame = semiframe1;
    //
    //    //    custAdd.text = custDetailObj.addressStr;
    //
    //    CGSize sizeOfText2=[custDetailObj.addressStr sizeWithFont:custAdd.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //    CGRect fram2 = custAdd.frame;
    //    fram2.size.height = sizeOfText2.height;
    //    fram2.origin.y = cust_addrLbl.frame.origin.y;
    //    custAdd.frame = fram2;
    //    custAdd.text=custDetailObj.addressStr;
    //    custAdd.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    
    
    ////////Date///////////
   // NSArray *components = [custDetailObj.date componentsSeparatedByString:@" "];
    //NSString *newString = [components objectAtIndex:0];
    
    //DateFormat Change
   // NSLog(@"pDate.....%@",custDetailObj.date);
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSDate *myDate = [dateFormatter dateFromString:custDetailObj.date];
    [dateFormatter setDateFormat:@"MM-dd-yyyy"];
    NSString *newString=[dateFormatter stringFromDate:myDate];
   // NSLog(@"newString.....%@",newString);
   
    
    CGRect lblframe2 = dateLbl.frame;
    lblframe2.origin.y = custName.frame.origin.y+custName.frame.size.height+5;
    dateLbl.frame = lblframe2;
    
    CGRect semiframe2 = dateSemi.frame;
    semiframe2.origin.y = dateLbl.frame.origin.y;
    dateSemi.frame = semiframe2;
    
    //     techPhone.text = newString;
    CGSize sizeOfText3=[newString sizeWithFont:techPhone.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:NSLineBreakByWordWrapping];
    CGRect fram3 = techPhone.frame;
    fram3.size.height = sizeOfText3.height;
    fram3.origin.x = custName.frame.origin.x;
    fram3.origin.y = dateLbl.frame.origin.y+3;
    techPhone.frame = fram3;
    techPhone.text=newString;
    techPhone.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    
    
    
    ///////customer email//////////
    //    if ( [custDetailObj.addressStr isEqualToString:@""]) {
    //        CGRect lblframe3 = cust_emailLbl.frame;
    //        lblframe3.origin.y = cust_addrLbl.frame.origin.y+cust_addrLbl.frame.size.height+5;
    //        cust_emailLbl.frame = lblframe3;
    //
    //        CGRect semiframe3 = cust_emailSemi.frame;
    //        semiframe3.origin.y = cust_emailLbl.frame.origin.y;
    //        cust_emailSemi.frame = semiframe3;
    //
    //        //     custEmail.text = custDetailObj.emailStr;
    //        CGSize sizeOfText4=[custDetailObj.emailStr sizeWithFont:custEmail.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //        CGRect fram4 = custEmail.frame;
    //        fram4.size.height = sizeOfText4.height;
    //        fram4.origin.y = cust_emailLbl.frame.origin.y;
    //        custEmail.frame = fram4;
    //        custEmail.text=custDetailObj.emailStr;
    //        custEmail.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    //
    //
    //        ///////lead #/////////
    //        CGRect lblframe4 = lead_hashLbl.frame;
    //        lblframe4.origin.y = cust_emailLbl.frame.origin.y;
    //        lead_hashLbl.frame = lblframe4;
    //
    //        CGRect semiframe4 = lead_hashSemi.frame;
    //        semiframe4.origin.y = lead_hashLbl.frame.origin.y;
    //        lead_hashSemi.frame = semiframe4;
    //
    //        //    salesPerson.text = custDetailObj.lead_hash;
    //        CGSize sizeOfText5 = [custDetailObj.lead_hash sizeWithFont:salesPerson.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //        CGRect fram5 = salesPerson.frame;
    //        fram5.size.height = sizeOfText5.height;
    //        fram5.origin.y = cust_emailLbl.frame.origin.y;
    //        salesPerson.frame = fram5;
    //        salesPerson.text=custDetailObj.lead_hash;
    //        salesPerson.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    //    }
    //    else
    //    {
    //        CGRect lblframe3 = cust_emailLbl.frame;
    //        lblframe3.origin.y = custAdd.frame.origin.y+custAdd.frame.size.height+5;
    //        cust_emailLbl.frame = lblframe3;
    //
    //        CGRect semiframe3 = cust_emailSemi.frame;
    //        semiframe3.origin.y = cust_emailLbl.frame.origin.y;
    //        cust_emailSemi.frame = semiframe3;
    //
    //        //     custEmail.text = custDetailObj.emailStr;
    //        CGSize sizeOfText4=[custDetailObj.emailStr sizeWithFont:custEmail.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //        CGRect fram4 = custEmail.frame;
    //        fram4.size.height = sizeOfText4.height;
    //        fram4.origin.y = cust_emailLbl.frame.origin.y;
    //        custEmail.frame = fram4;
    //        custEmail.text=custDetailObj.emailStr;
    //        custEmail.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    //
    //
    //        ///////lead #/////////
    //        CGRect lblframe4 = lead_hashLbl.frame;
    //        lblframe4.origin.y = cust_emailLbl.frame.origin.y;
    //        lead_hashLbl.frame = lblframe4;
    //
    //        CGRect semiframe4 = lead_hashSemi.frame;
    //        semiframe4.origin.y = lead_hashLbl.frame.origin.y;
    //        lead_hashSemi.frame = semiframe4;
    //
    //        //    salesPerson.text = custDetailObj.lead_hash;
    //        CGSize sizeOfText5 = [custDetailObj.lead_hash sizeWithFont:salesPerson.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //        CGRect fram5 = salesPerson.frame;
    //        fram5.size.height = sizeOfText5.height;
    //        fram5.origin.y = cust_emailLbl.frame.origin.y;
    //        salesPerson.frame = fram5;
    //        salesPerson.text=custDetailObj.lead_hash;
    //        salesPerson.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    //
    //    }
    //    //////customer phone////////
    //    if ([custDetailObj.emailStr isEqualToString:@""]) {
    //        CGRect lblframe5 = cust_phoneLbl.frame;
    //        lblframe5.origin.y = cust_emailLbl.frame.origin.y+cust_emailLbl.frame.size.height+5;
    //        cust_phoneLbl.frame = lblframe5;
    //
    //        CGRect semiframe5 = cust_phoneSemi.frame;
    //        semiframe5.origin.y = cust_phoneLbl.frame.origin.y;
    //        cust_phoneSemi.frame = semiframe5;
    //
    //        custPhone.text = custDetailObj.phoneStr;
    //        CGSize sizeOfText6 = [custDetailObj.phoneStr sizeWithFont:custPhone.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //        CGRect fram6 = custPhone.frame;
    //        fram6.size.height = sizeOfText6.height;
    //        fram6.origin.y = cust_phoneLbl.frame.origin.y;
    //        custPhone.frame = fram6;
    //        custPhone.text=custDetailObj.phoneStr;
    //        custPhone.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    //    }
    //    else
    //    {
    //        CGRect lblframe5 = cust_phoneLbl.frame;
    //        lblframe5.origin.y = custEmail.frame.origin.y+custEmail.frame.size.height+5;
    //        cust_phoneLbl.frame = lblframe5;
    //
    //        CGRect semiframe5 = cust_phoneSemi.frame;
    //        semiframe5.origin.y = cust_phoneLbl.frame.origin.y;
    //        cust_phoneSemi.frame = semiframe5;
    //
    //        custPhone.text = custDetailObj.phoneStr;
    //        CGSize sizeOfText6 = [custDetailObj.phoneStr sizeWithFont:custPhone.font constrainedToSize:CGSizeMake(constrainedWidth, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    //        CGRect fram6 = custPhone.frame;
    //        fram6.size.height = sizeOfText6.height;
    //        fram6.origin.y = cust_phoneLbl.frame.origin.y;
    //        custPhone.frame = fram6;
    //        custPhone.text=custDetailObj.phoneStr;
    //        custPhone.numberOfLines=0;//JUST TO SUPPORT MULTILINING.
    //
    //    }
    cust_addrLbl.hidden = YES;
    cust_addrSemi.hidden = YES;
    salesPerson.hidden = YES;
    cust_emailLbl.hidden = YES;
    cust_emailSemi.hidden = YES;
    lead_hashLbl.hidden = YES;
    lead_hashSemi.hidden = YES;
    cust_phoneLbl.hidden = YES;
    cust_phoneSemi.hidden = YES;
    //    detail_scrollView.contentSize = CGSizeMake(694, 200);
    
}

- (IBAction)backClicked:(id)sender {
    [self dismissViewControllerAnimated:NO completion:nil];
}

//- (void)redirect//NSLogToFile:(NSDictionary *)dict {
//    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
//    NSString *documentsDirectory = [paths objectAtIndex:0];
//    NSString *logPath = [documentsDirectory stringByAppendingPathComponent:@"console.log"];
//    freopen([logPath cStringUsingEncoding:NSASCIIStringEncoding],"a+",stderr);
//}

-(void)sendingUpdatedMeasurementDeatilToWeb:(leadMeasurementInfo*)leadMeaInfo
{
    
    
    
    NSLog(@"sendingUpdatedMeasurementDeatilToWeb......hard width 2%@",leadMeasObj2.str_hard_inch);
    
    
    
    //  ////////NSLog(@"tested ok  %@",objNwCust.firstName);
    NSString * strURL;
    if ([modeValue isEqualToString:@"edit"]) {
        strURL = [NSString stringWithFormat:@"http://www.rstbuilders.com/crm/rstbuilderapi.php?action=addmeasurement&leadID=%@&measurementID=%@&mode=edit",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],leadMeasObj.webMeasurementID];
    }
    else{
        strURL = [NSString stringWithFormat:@"http://www.rstbuilders.com/crm/rstbuilderapi.php?action=addmeasurement&leadID=%@&measurementID=&mode=add",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"]];
    }
    
    NSLog(@"add measurement url calling = %@",strURL);
    // NSString *strURL =@"http://www.rstbuilders.com/crm/rstbuilderapi.php?action=addmeasurement&leadID=18&measurementID=5&mode=edit";
    
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
    [request setDelegate:self];
    [request addRequestHeader:@"Content-Type" value:@"application/json"];
    if([modeValue isEqualToString:@"edit"])
    {
        
        if (arrTab1.count ==0) {
            leadMeasObj2.webMeasurementID =@"0";
        }
        else if(arrTab2.count == 0)
        {
            leadMeasObj3.webMeasurementID = @"0";
        }
        else if (arrTab1.count>0 && arrTab2.count>0) {
            leadMeasurementInfo *leee = [[leadMeasurementInfo alloc]init];
            leee = [arrTab1 objectAtIndex: 0];
            leadMeasurementInfo *leee2 = [[leadMeasurementInfo alloc]init];
            leee2 = [arrTab2 objectAtIndex:0];
            leadMeasObj3.webMeasurementID = leee2.webMeasurementID;
            leadMeasObj2.webMeasurementID = leee.webMeasurementID;
        }
        
    }
    NSDictionary *dic =[self createDictofarray];
//
    NSLog(@"Data.......=%@ ",dic);
    //    [self redirect//NSLogToFile:dic];
    NSString *jsonData = [dic JSONString];
    //    [request appendPostData:jsonData];
    ////////NSLog(@"dicc=%@",[dic JSONData]);
    [request setPostValue:jsonData forKey:@"formdata"];
    
    [request startAsynchronous];
}
-(NSMutableDictionary *)createDictofarray{
    //////NSLog(@"productid_form1=%@",leadMeasObj.leadID);
    ////////NSLog(@"pro_name1=%@",leadMeasObj.product);
    //////NSLog(@"productid_form2=%@",leadMeasObj2.webMeasurementID);
    //    if (tab1ClickedFlag == 1 && textF_touch_flag_tab1 == 1){
    
    NSLog(@"leadMeasObj2.webMeasurementID...%@",leadMeasObj2.webMeasurementID);
    
    
    
    formoneDict = [[NSMutableDictionary alloc] init];
    
    [formoneDict setValue:leadMeasObj2.webMeasurementID forKey:@"measurementID"];
    [formoneDict setValue:leadMeasObj2.mID forKey:@"mID"];
    [formoneDict setValue:leadMeasObj2.leadID forKey:@"leadID"];
    [formoneDict setValue:selectedTreatmentType forKey:@"productID"];
    [formoneDict setValue:leadMeasObj2.widthFt forKey:@"widthFt"];
    [formoneDict setValue:leadMeasObj2.widthInch forKey:@"widthInch"];
    [formoneDict setValue:leadMeasObj2.heightFt forKey:@"heightFt"];
    [formoneDict setValue:leadMeasObj2.heightInch forKey:@"heightInch"];
    [formoneDict setValue:leadMeasObj2.depthFt forKey:@"depthFt"];
    [formoneDict setValue:leadMeasObj2.depthInch forKey:@"depthInch"];
    [formoneDict setValue:leadMeasObj2.rollType forKey:@"rollType"];
    [formoneDict setValue:leadMeasObj2.mountType forKey:@"mountType"];
    [formoneDict setValue:leadMeasObj2.controlPosition forKey:@"controlPosition"];
    [formoneDict setValue:leadMeasObj2.totalHardwareWidth forKey:@"totalHardwareWidth"];
    [formoneDict setValue:leadMeasObj2.formType forKey:@"formType"];
    [formoneDict setValue:leadMeasObj2.product forKey:@"product"];
    [formoneDict setValue:leadMeasObj2.material forKey:@"material"];
    //    [formoneDict setValue:leadMeasObj2.creationDate forKey:@"creationDate"];
    //    [formoneDict setValue:leadMeasObj2.updationDate forKey:@"updationDate"];
    [formoneDict setValue:leadMeasObj2.windowSidemark forKey:@"windowSidemark"];
    [formoneDict setValue:leadMeasObj2.laye forKey:@"layer"];
    [formoneDict setValue:leadMeasObj2.type forKey:@"type"];
    [formoneDict setValue:leadMeasObj2.optionalFeatures forKey:@"optionalFeatures"];
    [formoneDict setValue:leadMeasObj2.extentionBracket forKey:@"extensionBracket"];
    [formoneDict setValue:leadMeasObj2.mountType2 forKey:@"mountTypeW"];
    [formoneDict setValue:leadMeasObj2.leftFt forKey:@"leftFt"];
    [formoneDict setValue:leadMeasObj2.leftInch forKey:@"leftInch"];
    [formoneDict setValue:leadMeasObj2.rightFt forKey:@"rightFt"];
    [formoneDict setValue:leadMeasObj2.rightInch forKey:@"rightInch"];
    [formoneDict setValue:leadMeasObj2.bracketFt forKey:@"bracketFt"];
    [formoneDict setValue:leadMeasObj2.bracketInch forKey:@"bracketInch"];
    [formoneDict setValue:leadMeasObj2.totalWidth forKey:@"totalWidth"];
    [formoneDict setValue:leadMeasObj2.topFt forKey:@"topFt"];
    [formoneDict setValue:leadMeasObj2.topInch forKey:@"topInch"];
    [formoneDict setValue:leadMeasObj2.bottomFt forKey:@"bottomFt"];
    [formoneDict setValue:leadMeasObj2.bottomInch forKey:@"bottomInch"];
    [formoneDict setValue:leadMeasObj2.totalHeight forKey:@"totalHeight"];
    [formoneDict setValue:leadMeasObj2.oldTreatment forKey:@"oldTreatment"];
    [formoneDict setValue:leadMeasObj2.headrailSize forKey:@"headRailSize"];
    [formoneDict setValue:leadMeasObj2.cordType forKey:@"cordType"];
    [formoneDict setValue:leadMeasObj2.tdbu forKey:@"tdbu"];
    
    
    if ([leadMeasObj2.roomLabel isEqualToString:@"MBR"]||[leadMeasObj2.roomLabel isEqualToString:@"LR"]||[leadMeasObj2.roomLabel isEqualToString:@"DR"])
    {
        
    }
    else
    {
        
        leadMeasObj2.winTitle = leadMeasObj2.roomLabel;
        leadMeasObj2.roomLabel = @"OTHER";
        
    }
    
    
    [formoneDict setValue:leadMeasObj2.roomLabel forKey:@"roomLabel"];
    [formoneDict setValue:leadMeasObj2.winTitle forKey:@"winTitle"];
    [formoneDict setValue:leadMeasObj2.pairorSingle forKey:@"pairSingle"];
    [formoneDict setValue:leadMeasObj2.hardwareWidth forKey:@"hardwareWidth"];
    
    
    
    [formoneDict setValue:leadMeasObj2.windowwallHeight forKey:@"windowwallHeight"];
    [formoneDict setValue:leadMeasObj2.topofPole forKey:@"topofPole"];
    [formoneDict setValue:leadMeasObj2.ceilingtofloor forKey:@"ceilingToFloor"];
    [formoneDict setValue:leadMeasObj2.cordSide forKey:@"cordSide"];
    [formoneDict setValue:leadMeasObj2.functionality forKey:@"functionality"];
    [formoneDict setValue:leadMeasObj2.returnn forKey:@"returnn"];
    [formoneDict setValue:leadMeasObj2.puddle forKey:@"puddle"];
    [formoneDict setValue:leadMeasObj2.oftheFloor forKey:@"offTheFloor"];
    [formoneDict setValue:leadMeasObj2.tiltType forKey:@"tiltType"];
    [formoneDict setValue:leadMeasObj2.spacerNeeded forKey:@"spacerNeeded"];
    [formoneDict setValue:leadMeasObj2.systemm forKey:@"system"];
    [formoneDict setValue:leadMeasObj2.notes forKey:@"specialNotes"];
    [formoneDict setValue:leadMeasObj2.installationNote forKey:@"installerInstruction"];
    [formoneDict setValue:leadMeasObj2.controlType forKey:@"controlType"];
    [formoneDict setValue:leadMeasObj2.quantity forKey:@"quantity"];
    [formoneDict setValue:leadMeasObj2.lining forKey:@"linening"];
    //    }
    
    
    //    if (tab2ClickedFlag == 1 && textF_touch_flag_tab2 == 1){
    formtwoDict = [[NSMutableDictionary alloc]init];
    if ([leadMeasObj3.productID isEqualToString:@"3"]) {
        leadMeasObj3.productID = @"8";
    }
    if ([leadMeasObj3.productID isEqualToString:@"4"]) {
        leadMeasObj3.productID = @"6";
    }
    if ([leadMeasObj3.productID isEqualToString:@"9"]) {
        leadMeasObj3.productID = @"7";
    }
    
    [formtwoDict setValue:leadMeasObj3.quantity forKey:@"quantity"];
    [formtwoDict setValue:leadMeasObj3.ctofValue forKey:@"ceilingToFloorValue"];
    
    
    //Usman
    [formtwoDict setValue:leadMeasObj3.ctof_left_ft forKey:@"cfleftFt"];
    [formtwoDict setValue:leadMeasObj3.ctof_left_inch forKey:@"cfleftInch"];
    [formtwoDict setValue:leadMeasObj3.ctof_center_ft forKey:@"cfcenterFt"];
    [formtwoDict setValue:leadMeasObj3.ctof_center_inch forKey:@"cfcenterInch"];
    [formtwoDict setValue:leadMeasObj3.ctof_right_ft forKey:@"cfrightFt"];
    [formtwoDict setValue:leadMeasObj3.ctof_right_inch forKey:@"cfrightInch"];
    //
    
    
    [formtwoDict setValue:leadMeasObj3.webMeasurementID forKey:@"measurementID"];
    [formtwoDict setValue:leadMeasObj3.mID forKey:@"mID"];
    [formtwoDict setValue:leadMeasObj3.leadID forKey:@"leadID"];
    [formtwoDict setValue:selectedTreatmentType_two forKey:@"productID"];
    [formtwoDict setValue:leadMeasObj3.widthFt forKey:@"widthFt"];
    [formtwoDict setValue:leadMeasObj3.widthInch forKey:@"widthInch"];
    [formtwoDict setValue:leadMeasObj3.heightFt forKey:@"heightFt"];
    [formtwoDict setValue:leadMeasObj3.heightInch forKey:@"heightInch"];
    [formtwoDict setValue:leadMeasObj3.depthFt forKey:@"depthFt"];
    [formtwoDict setValue:leadMeasObj3.depthInch forKey:@"depthInch"];
    [formtwoDict setValue:leadMeasObj3.rollType forKey:@"rollType"];
    [formtwoDict setValue:leadMeasObj3.mountType forKey:@"mountType"];
    [formtwoDict setValue:leadMeasObj3.controlPosition forKey:@"controlPosition"];
    [formtwoDict setValue:leadMeasObj3.totalHardwareWidth forKey:@"totalHardwareWidth"];
    [formtwoDict setValue:leadMeasObj3.formType forKey:@"formType"];
    [formtwoDict setValue:leadMeasObj3.product forKey:@"product"];
    [formtwoDict setValue:leadMeasObj3.material forKey:@"material"];
    [formtwoDict setValue:leadMeasObj3.windowSidemark forKey:@"windowSidemark"];
    [formtwoDict setValue:leadMeasObj3.laye forKey:@"layer"];
    [formtwoDict setValue:leadMeasObj3.type forKey:@"type"];
    [formtwoDict setValue:leadMeasObj3.optionalFeatures forKey:@"optionalFeatures"];
    [formtwoDict setValue:leadMeasObj3.extentionBracket forKey:@"extensionBracket"];
    [formtwoDict setValue:leadMeasObj3.mountType2 forKey:@"mountTypeW"];
    [formtwoDict setValue:leadMeasObj3.leftFt forKey:@"leftFt"];
    [formtwoDict setValue:leadMeasObj3.leftInch forKey:@"leftInch"];
    [formtwoDict setValue:leadMeasObj3.rightFt forKey:@"rightFt"];
    [formtwoDict setValue:leadMeasObj3.rightInch forKey:@"rightInch"];
    [formtwoDict setValue:leadMeasObj3.bracketFt forKey:@"bracketFt"];
    [formtwoDict setValue:leadMeasObj3.bracketInch forKey:@"bracketInch"];
    [formtwoDict setValue:leadMeasObj3.totalWidth forKey:@"totalWidth"];
    [formtwoDict setValue:leadMeasObj3.topFt forKey:@"topFt"];
    [formtwoDict setValue:leadMeasObj3.topInch forKey:@"topInch"];
    [formtwoDict setValue:leadMeasObj3.bottomFt forKey:@"bottomFt"];
    [formtwoDict setValue:leadMeasObj3.bottomInch forKey:@"bottomInch"];
    [formtwoDict setValue:leadMeasObj3.totalHeight forKey:@"totalHeight"];
    [formtwoDict setValue:leadMeasObj3.oldTreatment forKey:@"oldTreatment"];
    [formtwoDict setValue:leadMeasObj3.headrailSize forKey:@"headRailSize"];
    [formtwoDict setValue:leadMeasObj3.cordType forKey:@"cordType"];
    [formtwoDict setValue:leadMeasObj3.tdbu forKey:@"tdbu"];
    
    
    if ([leadMeasObj3.roomLabel isEqualToString:@"MBR"]||[leadMeasObj3.roomLabel isEqualToString:@"LR"]||[leadMeasObj3.roomLabel isEqualToString:@"DR"])
    {
        
        
        
    }
    else
    {
        
        
        leadMeasObj3.winTitle = leadMeasObj3.roomLabel;
        leadMeasObj3.roomLabel = @"OTHER";
        
        
    }
    [formtwoDict setValue:leadMeasObj3.roomLabel forKey:@"roomLabel"];
    [formtwoDict setValue:leadMeasObj3.winTitle forKey:@"winTitle"];
    [formtwoDict setValue:leadMeasObj3.pairorSingle forKey:@"pairSingle"];
    [formtwoDict setValue:leadMeasObj3.hardwareWidth forKey:@"hardwareWidth"];
   // leadMeasObj2.str_hard_inch=txt_hard_inch.text
    //NSLog(@"leadMeasObj2.str_hard_inch.......%@",leadMeasObj2.str_hard_inch);
    [formtwoDict setValue:leadMeasObj3.str_hard_inch forKey:@"hardwareWidth2"];
    
    
    
    [formtwoDict setValue:leadMeasObj3.windowwallHeight forKey:@"windowwallHeight"];
    
    
    //    [formtwoDict setValue:leadMeasObj3.topofPole forKey:@"topofPole"];
    //    [formtwoDict setValue:leadMeasObj3.topofTrack forKey:@"topofPole"];
    
    
    [formtwoDict setValue:leadMeasObj3.ceilingtofloor forKey:@"ceilingToFloor"];
    [formtwoDict setValue:leadMeasObj3.cordSide forKey:@"cordSide"];
    [formtwoDict setValue:leadMeasObj3.functionality forKey:@"rollType"];
    [formtwoDict setValue:leadMeasObj3.returnn forKey:@"returnVal"];
    //NSLog(@"leadMeasObj3.str_return_inch...%@",leadMeasObj3.str_return_inch);
    [formtwoDict setValue:leadMeasObj3.str_return_inch forKey:@"returnVal2"];
     //NSLog(@"leadMeasObj3.returnn...%@",leadMeasObj3.returnn);
    
    
    
    if (leadMeasObj3.returnn.length>0) {
        [formtwoDict setValue:@"1" forKey:@"returnType"];
    }
    else{
        [formtwoDict setValue:@"0" forKey:@"returnType"];
    }
    
    NSLog(@"leadMeasObj3.puddle.....%@",leadMeasObj3.puddle);
    
    if (leadMeasObj3.puddle.length>0)
    {
        
        [formtwoDict setValue:leadMeasObj3.puddle forKey:@"puddle"];
        [formtwoDict setValue:leadMeasObj3.str_puddle_inch forKey:@"puddle2"];
        [formtwoDict setValue:@"1" forKey:@"poType"];
    }
    else if(leadMeasObj3.oftheFloor.length>0)
    {
        [formtwoDict setValue:leadMeasObj3.oftheFloor forKey:@"puddle"];
        [formtwoDict setValue:leadMeasObj3.str_offthefloor_inch forKey:@"puddle2"];
        [formtwoDict setValue:@"2" forKey:@"poType"];
    }
    [formtwoDict setValue:leadMeasObj3.tiltType forKey:@"tiltType"];
    [formtwoDict setValue:leadMeasObj3.finishedLength forKey:@"finishedLength"];
    [formtwoDict setValue:leadMeasObj3.str_finished_inch forKey:@"finishedLength2"];
    
    
    
    [formtwoDict setValue:leadMeasObj3.spacerNeeded forKey:@"spacerNeeded"];
    [formtwoDict setValue:leadMeasObj3.systemm forKey:@"system"];
    [formtwoDict setValue:leadMeasObj3.notes forKey:@"specialNotes"];
    [formtwoDict setValue:leadMeasObj3.installationNote forKey:@"installerInstruction"];
    [formtwoDict setValue:leadMeasObj3.poleTopFt forKey:@"poleTopFt"];
    [formtwoDict setValue:leadMeasObj3.poleTopInch forKey:@"poleTopInch"];
    [formtwoDict setValue:leadMeasObj3.poleHeightFt forKey:@"poleHeightFt"];
    [formtwoDict setValue:leadMeasObj3.poleHeightInch forKey:@"poleHeightInch"];
    [formtwoDict setValue:leadMeasObj3.bootomOfCrownFloor forKey:@"bootomOfCrownFloor"];
    [formtwoDict setValue:leadMeasObj3.str_bottum_inch forKey:@"bootomOfCrownFloor2"];
    
    
    
    
    //    }
    
    
    NSMutableArray *onearr = [[NSMutableArray alloc]init];
    [onearr insertObject:formoneDict atIndex:0];
    [onearr insertObject:formtwoDict atIndex:1];
    //    ////////NSLog(@"formoneDict=%@",formoneDict);
    //    NSArray *twoarr = [NSArray arrayWithObject:formtwoDict];
    //     ////////NSLog(@"formtwoDict=%@",formtwoDict);
    //    ////////NSLog(@"onearr%@",onearr);
    //    ////////NSLog(@"twoarr%@",twoarr);
    NSMutableDictionary *allValueDict = [[NSMutableDictionary alloc]init];
    
    if (tab1ClickedFlag == 1 && textF_touch_flag_tab1 == 1){
        [allValueDict setObject:formoneDict forKey:@"formone"];
    }
    if (tab2ClickedFlag == 1 && textF_touch_flag_tab2 == 1){
        [allValueDict setObject:formtwoDict forKey:@"formtwo"];
    }
    //    [allValueDict setObject:twoarr forKey:@"formtwo"];
    
    return allValueDict;
}

-(void)saveFirstMeasurementInfo
{
    
    
    leadMeasObj2 = [[leadMeasurementInfotab2 alloc]init];
    NSDate *currDate = [NSDate date];
    NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
    dateFormatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
    NSString *date1String = [dateFormatter stringFromDate:currDate];
    leadMeasObj2.localleadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"];
    leadMeasObj2.formType = @"1";
    
    if([selectedTreatmentType isEqualToString:@"1" ]  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
        //////NSLog(@"saveFirstMeasurementInfo_measurement_inEdit=%@",selectedTreatmentType);
        if (((UITextField *)[self.viewforControlls viewWithTag:1]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((((UITextField *)[self.viewforControlls viewWithTag:11]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:12]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:13]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:14]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:15]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:16]).text.length == 0) &&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:6]).selected == YES) {
                rollTypeStr = @"REG";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:56]).selected == YES) {
                rollTypeStr = @"REV";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES) {
                mountTypeStr = @"IM";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES) {
                mountTypeStr = @"OM";
            }
            //////NSLog(@"fddafdad=%@",selectedTreatmentType);
            if([modeValue isEqualToString:@"new"])
            {
                
                
                leadMeasObj2.mode = @"add";
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";

                
                //NSLog(@"max......%i",max);
                
                
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.mountType = mountTypeStr;
                leadMeasObj2.rollType = rollTypeStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:2]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:600]).text;
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:11]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:12]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:13]).text;
                leadMeasObj2.heightInch =((UITextField *)[self.viewforControlls viewWithTag:14]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:15]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:16]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:3]).text;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:1]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                [arrTab1 addObject:leadMeasObj2];
                
                //////NSLog(@"insaveFirstMeasurementInfo");
            }
            else{
                
                 //NSLog(@"min......%i",max);
                leadMeasObj2.mode = @"edit";
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.mountType = mountTypeStr;
                leadMeasObj2.rollType = rollTypeStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:600]).text;
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:11]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:12]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:13]).text;
                leadMeasObj2.heightInch =((UITextField *)[self.viewforControlls viewWithTag:14]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:15]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:16]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:2]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:3]).text;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:1]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
                //            [arrTab1 addObject:leadMeasObj2];
                
                
            }
        }
    }
    else if([selectedTreatmentType isEqualToString:@"1" ]  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
        
        if (((UITextField *)[self.viewforControlls viewWithTag:1]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((txfdleftOM.text.length == 0 ||txfdwidthOM.text.length == 0|| txfdrightOM.text.length == 0|| txfdbracketOM.text.length == 0|| txfdheightOM.text.length == 0|| txfdtopOM.text.length == 0|| txfdbottomOM.text.length == 0||txfdleftOM_inch.text.length == 0 ||txfdwidthOM_inch.text.length == 0|| txfdrightOM_inch.text.length == 0|| txfdbracketOM_inch.text.length == 0|| txfdheightOM_inch.text.length == 0|| txfdtopOM_inch.text.length == 0|| txfdbottomOM_inch.text.length == 0) &&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:6]).selected == YES) {
                rollTypeStr = @"REG";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:56]).selected == YES) {
                rollTypeStr = @"REV";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES) {
                mountTypeStr = @"IM";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:60]).selected == YES) {
                mountTypeStr = @"OM";
            }
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                
                //NSLog(@"max1......%i",max);
                
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.mountType = mountTypeStr;
                leadMeasObj2.rollType = rollTypeStr;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                 //NSLog(@"txftotalWidthOM_inch10");
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:600]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:2]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:3]).text;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:1]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
                
            }
            else{
                
                //NSLog(@"min1......%i",max);
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.mountType = mountTypeStr;
                leadMeasObj2.rollType = rollTypeStr;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:600]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:2]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:3]).text;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:1]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                 //NSLog(@"txftotalWidthOM_inch11");
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
            }
        }
    }
    else if([selectedTreatmentType isEqualToString:@"2" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
        if (((UITextField *)[self.viewforControlls viewWithTag:101]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((((UITextField *)[self.viewforControlls viewWithTag:115]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:116]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:117]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:118]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:119]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:121]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:11]).selected == YES) {
                typeStr = @"S";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:61]).selected == YES) {
                typeStr = @"WF";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if ([((UITextField *)[self.viewforControlls viewWithTag:114]).text isEqualToString:@"3/4"]) {
                headrailStr = @"0.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:114]).text isEqualToString:@"1 3/4"]) {
                headrailStr = @"1.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:114]).text isEqualToString:@"2 1/2"]) {
                headrailStr = @"2.50";
            }
            else
            {
                
                if([((UITextField *)[self.viewforControlls viewWithTag:114]).text length]>0)
                {
                    headrailStr=((UITextField *)[self.viewforControlls viewWithTag:114]).text;
                }
                
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:1000+13]).selected == YES) {
                liningStr = @"U";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+14]).selected == YES) {
                liningStr = @"P";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+15]).selected == YES) {
                liningStr = @"B";
            }
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:101]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:102]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:103]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:106]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:115]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:116]).text;
                leadMeasObj2.heightFt =((UITextField *)[self.viewforControlls viewWithTag:117]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:118]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:119]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:121]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
                
            }
            else{
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:101]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:102]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:103]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:106]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:115]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:116]).text;
                leadMeasObj2.heightFt =((UITextField *)[self.viewforControlls viewWithTag:117]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:118]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:119]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:121]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
            }
        }
    }
    else if([selectedTreatmentType isEqualToString:@"2" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
        if (((UITextField *)[self.viewforControlls viewWithTag:101]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((txfdleftOM.text.length == 0 ||txfdwidthOM.text.length == 0|| txfdrightOM.text.length == 0|| txfdbracketOM.text.length == 0|| txfdheightOM.text.length == 0|| txfdtopOM.text.length == 0|| txfdbottomOM.text.length == 0||txfdleftOM_inch.text.length == 0 ||txfdwidthOM_inch.text.length == 0|| txfdrightOM_inch.text.length == 0|| txfdbracketOM_inch.text.length == 0|| txfdheightOM_inch.text.length == 0|| txfdtopOM_inch.text.length == 0|| txfdbottomOM_inch.text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:11]).selected == YES) {
                typeStr = @"S";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:61]).selected == YES) {
                typeStr = @"WF";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if ([((UITextField *)[self.viewforControlls viewWithTag:114]).text isEqualToString:@"3/4"]) {
                headrailStr = @"0.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:114]).text isEqualToString:@"1 3/4"]) {
                headrailStr = @"1.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:114]).text isEqualToString:@"2 1/2"]) {
                headrailStr = @"2.50";
            }
            else
            {
                
                if([((UITextField *)[self.viewforControlls viewWithTag:114]).text length]>0)
                {
                    headrailStr=((UITextField *)[self.viewforControlls viewWithTag:114]).text;
                }
                
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:1000+13]).selected == YES) {
                liningStr = @"U";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+14]).selected == YES) {
                liningStr = @"P";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+15]).selected == YES) {
                liningStr = @"B";
            }

            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:101]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:102]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:103]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:106]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                 //NSLog(@"txftotalWidthOM_inch12");
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
            }
            else{
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:101]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:102]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:103]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:106]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
                
            }
            
        }
    }
    else if([selectedTreatmentType isEqualToString:@"5" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
        
        if (((UITextField *)[self.viewforControlls viewWithTag:501]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((((UITextField *)[self.viewforControlls viewWithTag:515]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:516]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:517]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:518]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:519]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:521]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:11]).selected == YES) {
                typeStr = @"S";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:61]).selected == YES) {
                typeStr = @"WF";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if ([((UITextField *)[self.viewforControlls viewWithTag:514]).text isEqualToString:@"3/4"]) {
                headrailStr = @"0.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:514]).text isEqualToString:@"1 3/4"]) {
                headrailStr = @"1.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:514]).text isEqualToString:@"2 1/2"]) {
                headrailStr = @"2.50";
            }
            else
            {
                
                if([((UITextField *)[self.viewforControlls viewWithTag:514]).text length]>0)
                {
                    headrailStr=((UITextField *)[self.viewforControlls viewWithTag:514]).text;
                }
                
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:1000+13]).selected == YES) {
                liningStr = @"U";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+14]).selected == YES) {
                liningStr = @"P";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+15]).selected == YES) {
                liningStr = @"B";
            }

            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:501]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:502]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:503]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:506]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:515]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:516]).text;
                leadMeasObj2.heightFt =((UITextField *)[self.viewforControlls viewWithTag:517]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:518]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:519]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:521]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
                
            }
            else{
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:501]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:502]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:503]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:506]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:515]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:516]).text;
                leadMeasObj2.heightFt =((UITextField *)[self.viewforControlls viewWithTag:517]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:518]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:519]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:521]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                //////NSLog(@"roomlabel2=%@",controlPositionStr);
                
            }
        }
    }
    else if([selectedTreatmentType isEqualToString:@"5" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
        if (((UITextField *)[self.viewforControlls viewWithTag:501]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((txfdleftOM.text.length == 0 ||txfdwidthOM.text.length == 0|| txfdrightOM.text.length == 0|| txfdbracketOM.text.length == 0|| txfdheightOM.text.length == 0|| txfdtopOM.text.length == 0|| txfdbottomOM.text.length == 0||txfdleftOM_inch.text.length == 0 ||txfdwidthOM_inch.text.length == 0|| txfdrightOM_inch.text.length == 0|| txfdbracketOM_inch.text.length == 0|| txfdheightOM_inch.text.length == 0|| txfdtopOM_inch.text.length == 0|| txfdbottomOM_inch.text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:11]).selected == YES) {
                typeStr = @"S";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:61]).selected == YES) {
                typeStr = @"WF";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if ([((UITextField *)[self.viewforControlls viewWithTag:514]).text isEqualToString:@"3/4"]) {
                headrailStr = @"0.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:514]).text isEqualToString:@"1 3/4"]) {
                headrailStr = @"1.75";
            }
            else if ([((UITextField *)[self.viewforControlls viewWithTag:514]).text isEqualToString:@"2 1/2"]) {
                headrailStr = @"2.50";
            }
            else
            {
                
                if([((UITextField *)[self.viewforControlls viewWithTag:514]).text length]>0)
                {
                    headrailStr=((UITextField *)[self.viewforControlls viewWithTag:514]).text;
                }
                
            }
            
            
            if (((UIButton *)[self.viewforControlls viewWithTag:1000+13]).selected == YES) {
                liningStr = @"U";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+14]).selected == YES) {
                liningStr = @"P";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:1000+15]).selected == YES) {
                liningStr = @"B";
            }

            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:501]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:502]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:503]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:506]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
                
            }
            else{
                leadMeasObj2.lining = liningStr;
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:501]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:502]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:503]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:506]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.creationDate = date1String;
                leadMeasObj2.type = typeStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.headrailSize = headrailStr;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
                
            }
            
        }
    }
    else if([selectedTreatmentType isEqualToString:@"6" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
        if (((UITextField *)[self.viewforControlls viewWithTag:601]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((((UITextField *)[self.viewforControlls viewWithTag:614]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:615]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:616]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:617]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:618]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:619]).text.length == 0)&&[modeValue isEqualToString:@"edit"] ){
            [self lengthAlert:1];
        }
        
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            
            if (((UIButton *)[self.viewforControlls viewWithTag:17]).selected == YES) {
                controlType = @"S";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:67]).selected == YES) {
                controlType = @"BOTHL";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:68]).selected == YES) {
                controlType = @"BOTHR";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:16]).selected == YES) {
                spacerneededStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:66]).selected == YES) {
                spacerneededStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:15]).selected == YES) {
                leadMeasObj2.tiltType = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:65]).selected == YES) {
                leadMeasObj2.tiltType = @"C";
            }
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:601]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:602]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:603]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:613]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.controlType = controlType;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.spacerNeeded = spacerneededStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:614]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:615]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:616]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:617]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:618]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:619]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.controlType = controlType;
                
            }
            else{
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:601]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:602]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:603]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:613]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.controlType = controlType;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.spacerNeeded = spacerneededStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:614]).text;
                leadMeasObj2.widthInch = ((UITextField *)[self.viewforControlls viewWithTag:615]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:616]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:617]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:618]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:619]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.controlType = controlType;
                
            }
            
        }
    }
    else if([selectedTreatmentType isEqualToString:@"6" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
        if (((UITextField *)[self.viewforControlls viewWithTag:601]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((txfdleftOM.text.length == 0 ||txfdwidthOM.text.length == 0|| txfdrightOM.text.length == 0|| txfdbracketOM.text.length == 0|| txfdheightOM.text.length == 0|| txfdtopOM.text.length == 0|| txfdbottomOM.text.length == 0||txfdleftOM_inch.text.length == 0 ||txfdwidthOM_inch.text.length == 0|| txfdrightOM_inch.text.length == 0|| txfdbracketOM_inch.text.length == 0|| txfdheightOM_inch.text.length == 0|| txfdtopOM_inch.text.length == 0|| txfdbottomOM_inch.text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            
            if (((UIButton *)[self.viewforControlls viewWithTag:17]).selected == YES) {
                controlType = @"S";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:67]).selected == YES) {
                controlType = @"BOTHL";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:68]).selected == YES) {
                controlType = @"BOTHR";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:16]).selected == YES) {
                spacerneededStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:66]).selected == YES) {
                spacerneededStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:15]).selected == YES) {
                leadMeasObj2.tiltType = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:65]).selected == YES) {
                leadMeasObj2.tiltType = @"C";
            }
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:601]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:602]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:603]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:613]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.controlType = controlType;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.spacerNeeded = spacerneededStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
            }
            else{
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:601]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:602]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:603]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:613]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.controlType = controlType;
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.spacerNeeded = spacerneededStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
            }
            
            
        }
    }
    else if (([selectedTreatmentType isEqualToString:@"7"] )  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
        if (((UITextField *)[self.viewforControlls viewWithTag:701]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((((UITextField *)[self.viewforControlls viewWithTag:713]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:714]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:715]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:716]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:717]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:718]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:713]).text;
                leadMeasObj2.widthInch  = ((UITextField *)[self.viewforControlls viewWithTag:714]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:715]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:716]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:717]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:718]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.controlType = @"";
            }
            else{
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:713]).text;
                leadMeasObj2.widthInch  = ((UITextField *)[self.viewforControlls viewWithTag:714]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:715]).text;
                leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:716]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:717]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:718]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.controlType = @"";
            }
            
            
        }
    }
    
    else if (([selectedTreatmentType isEqualToString:@"7"] )  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
        if (((UITextField *)[self.viewforControlls viewWithTag:701]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((txfdleftOM.text.length == 0 ||txfdwidthOM.text.length == 0|| txfdrightOM.text.length == 0|| txfdbracketOM.text.length == 0|| txfdheightOM.text.length == 0|| txfdtopOM.text.length == 0|| txfdbottomOM.text.length == 0||txfdleftOM_inch.text.length == 0 ||txfdwidthOM_inch.text.length == 0|| txfdrightOM_inch.text.length == 0|| txfdbracketOM_inch.text.length == 0|| txfdheightOM_inch.text.length == 0|| txfdtopOM_inch.text.length == 0|| txfdbottomOM_inch.text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes =noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
                leadMeasObj2.controlType = @"";
            }
            else{
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
                leadMeasObj2.controlType = @"";
            }
            
            
        }
    }
    else if (([selectedTreatmentType isEqualToString:@"8"])  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
        if (((UITextField *)[self.viewforControlls viewWithTag:701]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((((UITextField *)[self.viewforControlls viewWithTag:713]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:714]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:715]).text.length == 0||((UITextField *)[self.viewforControlls viewWithTag:716]).text.length == 0 ||((UITextField *)[self.viewforControlls viewWithTag:717]).text.length == 0|| ((UITextField *)[self.viewforControlls viewWithTag:718]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:713]).text;
                leadMeasObj2.widthInch  = ((UITextField *)[self.viewforControlls viewWithTag:714]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:715]).text;            leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:716]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:717]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:718]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
                
            }
            else{
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"IM";
                leadMeasObj2.widthFt = ((UITextField *)[self.viewforControlls viewWithTag:713]).text;
                leadMeasObj2.widthInch  = ((UITextField *)[self.viewforControlls viewWithTag:714]).text;
                leadMeasObj2.heightFt = ((UITextField *)[self.viewforControlls viewWithTag:715]).text;            leadMeasObj2.heightInch = ((UITextField *)[self.viewforControlls viewWithTag:716]).text;
                leadMeasObj2.depthFt = ((UITextField *)[self.viewforControlls viewWithTag:717]).text;
                leadMeasObj2.depthInch = ((UITextField *)[self.viewforControlls viewWithTag:718]).text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                
            }
            
            
        }
    }
    
    else if (([selectedTreatmentType isEqualToString:@"8"])  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
        if (((UITextField *)[self.viewforControlls viewWithTag:701]).text.length == 0) {
            [self roomlabelAlert:1];
        }
        else if ((txfdleftOM.text.length == 0 ||txfdwidthOM.text.length == 0|| txfdrightOM.text.length == 0|| txfdbracketOM.text.length == 0|| txfdheightOM.text.length == 0|| txfdtopOM.text.length == 0|| txfdbottomOM.text.length == 0||txfdleftOM_inch.text.length == 0 ||txfdwidthOM_inch.text.length == 0|| txfdrightOM_inch.text.length == 0|| txfdbracketOM_inch.text.length == 0|| txfdheightOM_inch.text.length == 0|| txfdtopOM_inch.text.length == 0|| txfdbottomOM_inch.text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:1];
        }
        else{
            gotonextView = 1;
            tab1valid_success=1;
            if (((UIButton *)[self.viewforControlls viewWithTag:5]).selected == YES) {
                controlPositionStr = @"L";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:55]).selected == YES) {
                controlPositionStr = @"R";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:12]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:62]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:13]).selected == YES) {
                cordtypeStr = @"C";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:63]).selected == YES) {
                cordtypeStr = @"CL";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:14]).selected == YES) {
                tdbuStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:64]).selected == YES) {
                tdbuStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:8]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:58]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewforControlls viewWithTag:9]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewforControlls viewWithTag:59]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = @"0";
                leadMeasObj2.mID =[NSString stringWithFormat:@"%i",max+1];
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
            }
            else{
                leadMeasObj2.quantity = ((UITextField *)[self.view viewWithTag:1040]).text;
                leadMeasObj2.productID =selectedTreatmentType;
                leadMeasObj2.webMeasurementID = leadMeasObj.webMeasurementID;
                leadMeasObj2.mID = @"0";
                leadMeasObj2.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj2.roomLabel = ((UITextField *)[self.viewforControlls viewWithTag:701]).text;
                leadMeasObj2.windowSidemark = ((UITextField *)[self.viewforControlls viewWithTag:702]).text;
                leadMeasObj2.laye = ((UITextField *)[self.viewforControlls viewWithTag:703]).text;
                leadMeasObj2.material = ((UITextField *)[self.viewforControlls viewWithTag:705]).text;
                leadMeasObj2.controlPosition = controlPositionStr;
                leadMeasObj2.optionalFeatures = [NSString stringWithFormat:@"%@",[tfoptionalFeatureArr componentsJoinedByString:@","]];
                leadMeasObj2.mountType2 = mounttype2;
                leadMeasObj2.cordType = cordtypeStr;
                leadMeasObj2.tdbu = tdbuStr;
                leadMeasObj2.extentionBracket = extensionBracketStr;
                leadMeasObj2.oldTreatment = oldTreatmentStr;
                leadMeasObj2.mountType = @"OM";
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.leftFt = txfdleftOM.text;
                leadMeasObj2.leftInch = txfdleftOM_inch.text;
                leadMeasObj2.widthFt = txfdwidthOM.text;
                leadMeasObj2.widthInch = txfdwidthOM_inch.text;
                leadMeasObj2.rightFt = txfdrightOM.text;
                leadMeasObj2.rightInch = txfdrightOM_inch.text;
                leadMeasObj2.bracketFt = txfdbracketOM.text;
                leadMeasObj2.bracketInch = txfdbracketOM_inch.text;
                leadMeasObj2.topFt = txfdtopOM.text;
                leadMeasObj2.topInch = txfdtopOM_inch.text;
                leadMeasObj2.heightFt = txfdheightOM.text;
                leadMeasObj2.heightInch = txfdheightOM_inch.text;
                leadMeasObj2.bottomFt = txfdbottomOM.text;
                leadMeasObj2.bottomInch = txfdbottomOM_inch.text;
                leadMeasObj2.notes = noteText;
                leadMeasObj2.installationNote = installation_note_text;
                leadMeasObj2.totalHeightFt = txftotalHeightOM_ft.text;
                leadMeasObj2.totalHeightInch = txftotalHeightOM_inch.text;
                leadMeasObj2.totalWidthFt = txftotalWidthOM_ft.text;
                leadMeasObj2.totalWidthInch = txftotalWidthOM_inch.text;
            }
            
            
        }
    }
    if (leadMeasObj2.roomLabel.length == 0 ) {
        ////////NSLog(@"leadMeasObj2.roomLabel is null");
    }
    else{
        str = 0;
        //        ////NSLog(@"%@ ====== %@",roomLabelValue1,leadMeasObj2.roomLabel);
        if ([form_1_productID isEqualToString:leadMeasObj2.productID] && [modeValue isEqualToString:@"edit"])
        {
            
            NSLog(@"1roomLabelValue2...%@",roomLabelValue1);
            NSLog(@"1leadMeasObj3.roomLabel...%@",leadMeasObj2.roomLabel);
            
            
            if ([roomLabelValue1 isEqualToString:leadMeasObj2.roomLabel])
            {
                
            }
            else{
                [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                str = [dbSingleton() get_info_for_roomlabel:leadMeasObj2.roomLabel productName:productnameTF.text leadId:[leadMeasObj2.leadID intValue] andlocalleadid:[leadMeasObj2.localleadID intValue]];
            }
        }
        else
        {
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            str = [dbSingleton() get_info_for_roomlabel:leadMeasObj2.roomLabel productName:productnameTF.text leadId:[leadMeasObj2.leadID intValue] andlocalleadid:[leadMeasObj2.localleadID intValue]];
        }
        //        //////NSLog(@"strlog=%hhd",str );
        if (str  == 1 && ![selectedTreatmentType isEqualToString:@"1"]) {
            gotonextView = 0;
            //            textF_touch_flag_tab1 = 0;
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:[NSString stringWithFormat:@"%@ Room/Label already exist for this SHADES AND BLINDS product",leadMeasObj2.roomLabel] delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            alert.tag = 4;
            [alert show];
            tab1valid_success=0;
        }
        
    }
    //////NSLog(@"roomlabel2=%@",leadMeasObj2.controlPosition);
    //NSLog(@"selectedTreatmentType=%@",selectedTreatmentType);
}

-(void)saveSecondMeasurementInfo
{
   
    
    
    leadMeasObj3 = [[leadMeasurementInfotab2 alloc]init];
    NSLog(@"......saveSecondMeasurementInfo.....%@",selectedTreatmentType_two);
    ////////NSLog(@"insaveSecondMeasurementInfo");
    NSDate *currDate = [NSDate date];
    NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
    dateFormatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
    NSString *date1String = [dateFormatter stringFromDate:currDate];
    leadMeasObj3.localleadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"];
    leadMeasObj3.formType = @"2";
    
    
    if ([modeValue isEqualToString:@"edit"])
    {
        
        // leadMeasObj3 = leadMeasObj2;
        
    }
    if([selectedTreatmentType_two isEqualToString:@"3"])
    {
        
        
        if (((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text.length == 0)
        {
            [self roomlabelAlert:2];
        }
        else if ((((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:2];
        }
        else{
            gotonextView_tab2 = 1;
            tab2valid_success=1;
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected == YES) {
                cordSideStr = @"L";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected == YES) {
                cordSideStr = @"R";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected == YES) {
                pairSingleStr = @"PR";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected == YES) {
                pairSingleStr = @"L";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected == YES) {
                pairSingleStr = @"C";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected == YES) {
                pairSingleStr = @"R";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected == YES) {
                cielingtofloorStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected == YES) {
                cielingtofloorStr = @"2";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected == YES) {
                cielingtofloorStr = @"3";
            }
            
            if([modeValue isEqualToString:@"new"])
            {
                
                
                leadMeasObj3.quantity = ((UITextField *)[self.view viewWithTag:1041]).text;
                leadMeasObj3.ctofValue = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:1000+6]).text;
                
                
                
                //Usman
                
                
                leadMeasObj3.ctof_left_ft = txt_left_ft.text;
                leadMeasObj3.ctof_left_inch = txt_left_inch.text;
                leadMeasObj3.ctof_center_ft = txt_center_ft.text;
                leadMeasObj3.ctof_center_inch = txt_center_inch.text;
                leadMeasObj3.ctof_right_ft = txt_right_ft.text;
                leadMeasObj3.ctof_right_inch = txt_right_inch.text;
                
                
                
                //
                
                
                leadMeasObj3.productID = selectedTreatmentType_two;
                leadMeasObj3.webMeasurementID = @"0";
                leadMeasObj3.mID =[NSString stringWithFormat:@"%i",max+1];
                leadMeasObj3.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj3.creationDate = date1String;
                leadMeasObj3.roomLabel = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text;
                leadMeasObj3.windowSidemark = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302]).text;
                leadMeasObj3.laye = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:303]).text;
                leadMeasObj3.material = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306]).text;
                leadMeasObj3.pairorSingle = pairSingleStr;
                leadMeasObj3.leftFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text;
                leadMeasObj3.leftInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text;
                leadMeasObj3.widthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text;
                leadMeasObj3.widthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text;
                leadMeasObj3.rightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text;
                leadMeasObj3.rightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text;
                
                leadMeasObj3.hardwareWidth = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:316]).text;
                leadMeasObj3.topFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text;
                leadMeasObj3.topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text;
                leadMeasObj3.heightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text;
                leadMeasObj3.heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text;
                leadMeasObj3.topofPole = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text;
                leadMeasObj3.ceilingtofloor = cielingtofloorStr;
                leadMeasObj3.mountType2 = mounttype2;
                leadMeasObj3.cordSide = cordSideStr;
                leadMeasObj3.extentionBracket = extensionBracketStr;
                leadMeasObj3.oldTreatment = oldTreatmentStr;
                leadMeasObj3.notes = noteText_tab2;
                leadMeasObj3.installationNote = installation_note_text_tab2;
                leadMeasObj3.totalWidthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:313]).text;
                leadMeasObj3.totalWidthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:314]).text;
                leadMeasObj3.totalHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:321]).text;
                leadMeasObj3.totalHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text;
                
                leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text;
                leadMeasObj3.poleTopInch= ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text;
                leadMeasObj3.poleHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text;
                leadMeasObj3.poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text;
               // leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text;
               // leadMeasObj3.poleTopInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:329]).text;
                leadMeasObj3.bootomOfCrownFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:335]).text;
                
                
                leadMeasObj3.str_hard_inch=txt_hard_inch.text;
                leadMeasObj3.str_bottum_inch=txt_bottum_inch.text;
                //leadMeasObj3.str_puddle_inch=txt_puddle_inch.text;
                //leadMeasObj3.str_return_inch=txt_return_inch.text;
                //leadMeasObj3.str_offthefloor_inch=txt_offthefloor_inch.text;
                
                
            }
            else{
                leadMeasObj3.productID = selectedTreatmentType_two;
                if (arrTab1.count>0 && arrTab2.count>0) {
                    leadMeasObj3.webMeasurementID = leadMeasObj2.webMeasurementID;
                }
                else{
                    leadMeasObj3.webMeasurementID = leadMeasObj.webMeasurementID;
                }
                leadMeasObj3.ctofValue = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:1000+6]).text;
                
                
                
                //Usman
                
                
                leadMeasObj3.ctof_left_ft = txt_left_ft.text;
                leadMeasObj3.ctof_left_inch = txt_left_inch.text;
                leadMeasObj3.ctof_center_ft = txt_center_ft.text;
                leadMeasObj3.ctof_center_inch = txt_center_inch.text;
                leadMeasObj3.ctof_right_ft = txt_right_ft.text;
                leadMeasObj3.ctof_right_inch = txt_right_inch.text;
                
                
                
                //
                
                

                
                leadMeasObj3.quantity = ((UITextField *)[self.view viewWithTag:1041]).text;
                leadMeasObj3.totalWidthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:313]).text;
                leadMeasObj3.totalWidthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:314]).text;
                leadMeasObj3.totalHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:321]).text;
                leadMeasObj3.totalHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:323]).text;
                leadMeasObj3.mID = @"0";
                leadMeasObj3.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj3.creationDate = date1String;
                leadMeasObj3.roomLabel = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:301]).text;
                leadMeasObj3.windowSidemark = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:302]).text;
                leadMeasObj3.laye = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:303]).text;
                leadMeasObj3.material = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:306]).text;
                leadMeasObj3.pairorSingle = pairSingleStr;
                leadMeasObj3.leftFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:307]).text;
                leadMeasObj3.leftInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:308]).text;
                leadMeasObj3.widthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:309]).text;
                leadMeasObj3.widthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:310]).text;
                leadMeasObj3.rightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:311]).text;
                leadMeasObj3.rightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:312]).text;
                leadMeasObj3.hardwareWidth = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:316]).text;
                leadMeasObj3.topFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:317]).text;
                leadMeasObj3.topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:318]).text;
                leadMeasObj3.heightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:319]).text;
                leadMeasObj3.heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:320]).text;
                leadMeasObj3.topofPole = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text;
                leadMeasObj3.ceilingtofloor = cielingtofloorStr;
                leadMeasObj3.mountType2 = mounttype2;
                leadMeasObj3.cordSide = cordSideStr;
                leadMeasObj3.extentionBracket = extensionBracketStr;
                leadMeasObj3.oldTreatment = oldTreatmentStr;
                leadMeasObj3.notes = noteText_tab2;
                leadMeasObj3.installationNote = installation_note_text_tab2;
                leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:324]).text;
                leadMeasObj3.poleTopInch= ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:325]).text;
                leadMeasObj3.poleHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:326]).text;
                leadMeasObj3.poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:327]).text;
                //leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:328]).text;
               // leadMeasObj3.poleTopInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:329]).text;
                leadMeasObj3.bootomOfCrownFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:335]).text;
                ////////NSLog(@"roomlabel3=%@",leadMeasObj3.roomLabel);
                
                leadMeasObj3.str_hard_inch=txt_hard_inch.text;
                leadMeasObj3.str_bottum_inch=txt_bottum_inch.text;
                //leadMeasObj3.str_puddle_inch=txt_puddle_inch.text;
                //leadMeasObj3.str_return_inch=txt_return_inch.text;
                //leadMeasObj3.str_offthefloor_inch=txt_offthefloor_inch.text;
                
            }
            
        }
    }
    else if([selectedTreatmentType_two isEqualToString:@"4"])
    {
        
        if (((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text.length == 0)
        {
            
            [self roomlabelAlert:2];
            
        }
        
        else if ((((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:2];
            
        }
        
        else{
            
            
            gotonextView_tab2 = 1;
             tab2valid_success=1;
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected == YES) {
                
                mounttype2 = @"W";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected == YES) {
                mounttype2 = @"C";
            }
            
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected == YES) {
                pairSingleStr = @"PR";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected == YES) {
                pairSingleStr = @"L";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected == YES) {
                pairSingleStr = @"C";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected == YES) {
                pairSingleStr = @"R";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected == YES) {
                cielingtofloorStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected == YES) {
                cielingtofloorStr = @"2";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected == YES) {
                cielingtofloorStr = @"3";
                
            }
            
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:83]).selected == YES) {
                functionalityStr = @"DEC";
                
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:84]).selected == YES) {
                
                functionalityStr = @"FUNC";
                
            }
            
            
            if([modeValue isEqualToString:@"new"]){
                
                leadMeasObj3.ctofValue = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:1000+6]).text;
                
                
                
                //Usman
                
                
                leadMeasObj3.ctof_left_ft = txt_left_ft.text;
                leadMeasObj3.ctof_left_inch = txt_left_inch.text;
                leadMeasObj3.ctof_center_ft = txt_center_ft.text;
                leadMeasObj3.ctof_center_inch = txt_center_inch.text;
                leadMeasObj3.ctof_right_ft = txt_right_ft.text;
                leadMeasObj3.ctof_right_inch = txt_right_inch.text;
                
                
                
                //
                
                

                
                leadMeasObj3.quantity = ((UITextField *)[self.view viewWithTag:1041]).text;
                leadMeasObj3.totalWidthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:413]).text;
                leadMeasObj3.totalWidthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:414]).text;
                leadMeasObj3.totalHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:421]).text;
                leadMeasObj3.totalHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text;
                leadMeasObj3.productID = selectedTreatmentType_two;
                
                leadMeasObj3.webMeasurementID = @"0";
                leadMeasObj3.mID = [NSString stringWithFormat:@"%i",max+1];
                
                leadMeasObj3.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                
                leadMeasObj3.creationDate = date1String;
                
                leadMeasObj3.roomLabel = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text;
                
                leadMeasObj3.windowSidemark = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402]).text;
                
                leadMeasObj3.laye = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:403]).text;
                
                leadMeasObj3.material = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406]).text;
                
                leadMeasObj3.pairorSingle = pairSingleStr;
                
                leadMeasObj3.leftFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text;
                
                leadMeasObj3.leftInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text;
                
                leadMeasObj3.widthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text;
                
                leadMeasObj3.widthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text;
                
                leadMeasObj3.rightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text;
                
                leadMeasObj3.rightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text;
                
                leadMeasObj3.hardwareWidth = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:416]).text;
                
                leadMeasObj3.topFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text;
                
                leadMeasObj3.topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text;
                
                leadMeasObj3.heightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text;
                
                leadMeasObj3.heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text;
                
                leadMeasObj3.topofPole = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text;
                
                leadMeasObj3.finishedLength = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:436]).text;
                
                leadMeasObj3.ceilingtofloor = cielingtofloorStr;
                leadMeasObj3.mountType2 = mounttype2;
                leadMeasObj3.functionality = functionalityStr;
                leadMeasObj3.extentionBracket = extensionBracketStr;
                leadMeasObj3.oldTreatment = oldTreatmentStr;
                leadMeasObj3.returnn = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).text;
                leadMeasObj3.puddle = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).text;
                leadMeasObj3.oftheFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).text;
                
                leadMeasObj3.notes = noteText_tab2;
                
                leadMeasObj3.installationNote = installation_note_text_tab2;
                leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text;
                leadMeasObj3.poleTopInch= ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text;
                leadMeasObj3.poleHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:426]).text;
                leadMeasObj3.poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:427]).text;
                
                leadMeasObj3.bootomOfCrownFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:431]).text;
                
                
                leadMeasObj3.str_hard_inch=txt_hard_inch.text;
                leadMeasObj3.str_bottum_inch=txt_bottum_inch.text;
                leadMeasObj3.str_puddle_inch=txt_puddle_inch.text;
                leadMeasObj3.str_return_inch=txt_return_inch.text;
                leadMeasObj3.str_offthefloor_inch=txt_offthefloor_inch.text;
                leadMeasObj3.str_finished_inch=txt_finished_inch.text;
                
                
                [arrTab2 addObject:leadMeasObj3];
                
                ////////NSLog(@"insaveFirstMeasurementInfo2");
                
            }
            
            
            else{
                leadMeasObj3.ctofValue = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:1000+6]).text;
                
                
                
                
                
                //Usman
                
                
                leadMeasObj3.ctof_left_ft = txt_left_ft.text;
                leadMeasObj3.ctof_left_inch = txt_left_inch.text;
                leadMeasObj3.ctof_center_ft = txt_center_ft.text;
                leadMeasObj3.ctof_center_inch = txt_center_inch.text;
                leadMeasObj3.ctof_right_ft = txt_right_ft.text;
                leadMeasObj3.ctof_right_inch = txt_right_inch.text;
                
                
                
                //
                
                

                
                
                leadMeasObj3.quantity = ((UITextField *)[self.view viewWithTag:1041]).text;
                leadMeasObj3.productID = selectedTreatmentType_two;
                
                if (arrTab1.count>0 && arrTab2.count>0) {
                    
                    leadMeasObj3.webMeasurementID = leadMeasObj2.webMeasurementID;
                }
                else{
                    leadMeasObj3.webMeasurementID = leadMeasObj.webMeasurementID;
                }
                leadMeasObj3.mID = @"0";
                leadMeasObj3.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj3.creationDate = date1String;
                leadMeasObj3.roomLabel = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:401]).text;
                leadMeasObj3.windowSidemark = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:402]).text;
                leadMeasObj3.laye = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:403]).text;
                leadMeasObj3.material = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:406]).text;
                leadMeasObj3.pairorSingle = pairSingleStr;
                leadMeasObj3.leftFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:407]).text;
                leadMeasObj3.leftInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:408]).text;
                leadMeasObj3.widthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:409]).text;
                leadMeasObj3.widthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:410]).text;
                leadMeasObj3.rightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:411]).text;
                leadMeasObj3.rightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:412]).text;
                leadMeasObj3.hardwareWidth = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:416]).text;
                leadMeasObj3.topFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:417]).text;
                leadMeasObj3.topInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:418]).text;
                leadMeasObj3.heightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:419]).text;
                leadMeasObj3.heightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:420]).text;
                leadMeasObj3.topofPole = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text;
                //            leadMeasObj3.finishedLength = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:429]).text;
                leadMeasObj3.ceilingtofloor = cielingtofloorStr;
                leadMeasObj3.mountType2 = mounttype2;
                leadMeasObj3.functionality = functionalityStr;
                leadMeasObj3.extentionBracket = extensionBracketStr;
                leadMeasObj3.oldTreatment = oldTreatmentStr;
                leadMeasObj3.finishedLength = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:436]).text;
                leadMeasObj3.returnn = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:437]).text;
                leadMeasObj3.puddle = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:438]).text;
                leadMeasObj3.oftheFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:439]).text;
                leadMeasObj3.notes = noteText_tab2;
                leadMeasObj3.installationNote = installation_note_text_tab2;
                leadMeasObj3.totalWidthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:413]).text;
                leadMeasObj3.totalWidthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:414]).text;
                leadMeasObj3.totalHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:421]).text;
                leadMeasObj3.totalHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:423]).text;
                leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:424]).text;
                leadMeasObj3.poleTopInch= ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:425]).text;
                leadMeasObj3.poleHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:426]).text;
                leadMeasObj3.poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:427]).text;
               
                leadMeasObj3.bootomOfCrownFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:431]).text;
                
                
                leadMeasObj3.str_hard_inch=txt_hard_inch.text;
                leadMeasObj3.str_bottum_inch=txt_bottum_inch.text;
                leadMeasObj3.str_puddle_inch=txt_puddle_inch.text;
                leadMeasObj3.str_return_inch=txt_return_inch.text;
                leadMeasObj3.str_offthefloor_inch=txt_offthefloor_inch.text;
                leadMeasObj3.str_finished_inch=txt_finished_inch.text;
                
                //            [arrTab2 addObject:leadMeasObj3];
                
            }
        }
    }
    else if ([selectedTreatmentType_two isEqualToString:@"9"]){
        
        NSLog(@"selectedTreatmentType_two...3");
        if (((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text.length == 0)
        {
            NSLog(@"selectedTreatmentType_two...3");
            [self roomlabelAlert:2];
        }
        else if ((((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text.length == 0||((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text.length == 0)&&[modeValue isEqualToString:@"edit"]){
            [self lengthAlert:2];
            NSLog(@"come here....1");
        }
        else
        {
            NSLog(@"come here....2");
            gotonextView_tab2 = 1;
             tab2valid_success=1;
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:81]).selected == YES) {
                mounttype2 = @"W";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:82]).selected == YES) {
                mounttype2 = @"C";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:77]).selected == YES) {
                extensionBracketStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:78]).selected == YES) {
                extensionBracketStr = @"0";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:79]).selected == YES) {
                oldTreatmentStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:80]).selected == YES) {
                oldTreatmentStr = @"0";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:70]).selected == YES) {
                pairSingleStr = @"PR";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:71]).selected == YES) {
                pairSingleStr = @"L";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:72]).selected == YES) {
                pairSingleStr = @"C";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:73]).selected == YES) {
                pairSingleStr = @"R";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:74]).selected == YES)
            {
                cielingtofloorStr = @"1";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:75]).selected == YES) {
                cielingtofloorStr = @"2";
            }
            
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:76]).selected == YES) {
                cielingtofloorStr = @"3";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:87]).selected == YES) {
                cordSideStr = @"L";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:88]).selected == YES) {
                cordSideStr = @"R";
            }
            if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:85]).selected == YES) {
                systemStr = @"C";
            }
            else if (((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:86]).selected == YES) {
                systemStr = @"W";
            }
            
            if([modeValue isEqualToString:@"new"]){
                leadMeasObj3.ctofValue = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:1000+6]).text;
                
                
                
                
                
                //Usman
                
                
                leadMeasObj3.ctof_left_ft = txt_left_ft.text;
                leadMeasObj3.ctof_left_inch = txt_left_inch.text;
                leadMeasObj3.ctof_center_ft = txt_center_ft.text;
                leadMeasObj3.ctof_center_inch = txt_center_inch.text;
                leadMeasObj3.ctof_right_ft = txt_right_ft.text;
                leadMeasObj3.ctof_right_inch = txt_right_inch.text;
                
                
                
                //
                
                

                
                
                leadMeasObj3.quantity = ((UITextField *)[self.view viewWithTag:1041]).text;
                leadMeasObj3.productID = selectedTreatmentType_two;
                leadMeasObj3.webMeasurementID = @"0";
                leadMeasObj3.mID = [NSString stringWithFormat:@"%i",max+1];
                leadMeasObj3.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj3.creationDate = date1String;
                leadMeasObj3.roomLabel = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text;
                leadMeasObj3.windowSidemark = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902]).text;
                leadMeasObj3.laye = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:903]).text;
                leadMeasObj3.material = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906]).text;
                leadMeasObj3.pairorSingle = pairSingleStr;
                leadMeasObj3.leftFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text;
                leadMeasObj3.leftInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text;
                leadMeasObj3.widthFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text;
                leadMeasObj3.widthInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text;
                leadMeasObj3.rightFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text;
                leadMeasObj3.rightInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text;
                leadMeasObj3.hardwareWidth = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:916]).text;
                leadMeasObj3.topFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text;
                leadMeasObj3.topInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text;
                leadMeasObj3.heightFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text;
                leadMeasObj3.heightInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text;
                leadMeasObj3.topofPole = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:929]).text;
                leadMeasObj3.ceilingtofloor = cielingtofloorStr;
                leadMeasObj3.mountType2 = mounttype2;
                leadMeasObj3.tiltType = systemStr;
                leadMeasObj3.cordSide = cordSideStr;
                leadMeasObj3.extentionBracket = extensionBracketStr;
                leadMeasObj3.oldTreatment = oldTreatmentStr;
                leadMeasObj3.notes = noteText_tab2;
                leadMeasObj3.installationNote = installation_note_text_tab2;
                leadMeasObj3.totalWidthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text;
                leadMeasObj3.totalWidthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:914]).text;
                leadMeasObj3.totalHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text;
                leadMeasObj3.totalHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text;
                leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text;
                leadMeasObj3.poleTopInch= ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:925]).text;
                leadMeasObj3.poleHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:926]).text;
                leadMeasObj3.poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:927]).text;
                        leadMeasObj3.bootomOfCrownFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:936]).text;
                
                
                
                leadMeasObj3.str_hard_inch=txt_hard_inch.text;
                leadMeasObj3.str_bottum_inch=txt_bottum_inch.text;
                //leadMeasObj3.str_puddle_inch=txt_puddle_inch.text;
                //leadMeasObj3.str_return_inch=txt_return_inch.text;
                //leadMeasObj3.str_offthefloor_inch=txt_offthefloor_inch.text;
                
            }
            else{
                leadMeasObj3.ctofValue = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:1000+6]).text;
                
                
                
                
                
                //Usman
                
                
                leadMeasObj3.ctof_left_ft = txt_left_ft.text;
                leadMeasObj3.ctof_left_inch = txt_left_inch.text;
                leadMeasObj3.ctof_center_ft = txt_center_ft.text;
                leadMeasObj3.ctof_center_inch = txt_center_inch.text;
                leadMeasObj3.ctof_right_ft = txt_right_ft.text;
                leadMeasObj3.ctof_right_inch = txt_right_inch.text;
                
                
                
                //
                
                

                
                
                leadMeasObj3.quantity = ((UITextField *)[self.view viewWithTag:1041]).text;
                leadMeasObj3.productID = selectedTreatmentType_two;
                if (arrTab1.count>0 && arrTab2.count>0) {
                    leadMeasObj3.webMeasurementID = leadMeasObj2.webMeasurementID;
                }
                else{
                    leadMeasObj3.webMeasurementID = leadMeasObj.webMeasurementID;
                }
                leadMeasObj3.mID = @"0";
                leadMeasObj3.leadID = [[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"];
                leadMeasObj3.creationDate = date1String;
                leadMeasObj3.roomLabel = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:901]).text;
                leadMeasObj3.windowSidemark = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:902]).text;
                leadMeasObj3.laye = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:903]).text;
                leadMeasObj3.material = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:906]).text;
                leadMeasObj3.pairorSingle = pairSingleStr;
                leadMeasObj3.leftFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:907]).text;
                leadMeasObj3.leftInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:908]).text;
                leadMeasObj3.widthFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:909]).text;
                leadMeasObj3.widthInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:910]).text;
                leadMeasObj3.rightFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:911]).text;
                leadMeasObj3.rightInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:912]).text;
                leadMeasObj3.hardwareWidth = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:916]).text;
                leadMeasObj3.topFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:917]).text;
                leadMeasObj3.topInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:918]).text;
                leadMeasObj3.heightFt =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:919]).text;
                leadMeasObj3.heightInch =  ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:920]).text;
                leadMeasObj3.topofPole = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:929]).text;
                leadMeasObj3.ceilingtofloor = cielingtofloorStr;
                leadMeasObj3.mountType2 = mounttype2;
                leadMeasObj3.tiltType = systemStr;
                leadMeasObj3.cordSide = cordSideStr;
                leadMeasObj3.extentionBracket = extensionBracketStr;
                leadMeasObj3.oldTreatment = oldTreatmentStr;
                leadMeasObj3.notes = noteText_tab2;
                leadMeasObj3.installationNote = installation_note_text_tab2;
                leadMeasObj3.totalWidthFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:913]).text;
                leadMeasObj3.totalWidthInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:914]).text;
                leadMeasObj3.totalHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:921]).text;
                leadMeasObj3.totalHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:923]).text;
                leadMeasObj3.poleTopFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:924]).text;
                leadMeasObj3.poleTopInch= ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:925]).text;
                leadMeasObj3.poleHeightFt = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:926]).text;
                leadMeasObj3.poleHeightInch = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:927]).text;
                
                leadMeasObj3.bootomOfCrownFloor = ((UITextField *)[self.viewfortabtwo_Controlls viewWithTag:936]).text;
                
                
                leadMeasObj3.str_hard_inch=txt_hard_inch.text;
                leadMeasObj3.str_bottum_inch=txt_bottum_inch.text;
                //leadMeasObj3.str_puddle_inch=txt_puddle_inch.text;
                //leadMeasObj3.str_return_inch=txt_return_inch.text;
                //leadMeasObj3.str_offthefloor_inch=txt_offthefloor_inch.text;
                
            }
            
            
        }
    }
    if (leadMeasObj3.roomLabel.length==0) {
        ////////NSLog(@"leadMeasObj3.roomLabel is null");
    }
    else{
#if DEBUG
        //         ////NSLog(@"%@ ====== %@",roomLabelValue2,leadMeasObj3.roomLabel);
#endif
        if ([form_2_productID isEqualToString:leadMeasObj3.productID] && [modeValue isEqualToString:@"edit"])
        {
            
             NSLog(@"roomLabelValue2...%@",roomLabelValue2);
             NSLog(@"leadMeasObj3.roomLabel...%@",leadMeasObj3.roomLabel);
            
            
            if ([roomLabelValue2 isEqualToString:leadMeasObj3.roomLabel])
            {
                
            }
            else
            {
                [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                str = [dbSingleton() get_info_for_roomlabel:leadMeasObj3.roomLabel productName:productnameTF_tab2.text leadId:[leadMeasObj3.leadID intValue] andlocalleadid:[leadMeasObj3.localleadID intValue]];
            }
        }
        else
        {
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            str = [dbSingleton() get_info_for_roomlabel:leadMeasObj3.roomLabel productName:productnameTF_tab2.text leadId:[leadMeasObj3.leadID intValue] andlocalleadid:[leadMeasObj3.localleadID intValue]];
        }
        //////NSLog(@"strlog=%hhd",str);
        if (str  == 1 ) {
            gotonextView_tab2 = 0;
            gotonextView = 0;
            //            textF_touch_flag_tab2 = 0;
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:[NSString stringWithFormat:@"%@ Room/Label already exist for this DRAPEY AND HARDWARE product",leadMeasObj3.roomLabel] delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            alert.tag = 3;
            [alert show];
            tab2valid_success=0;
        }else{
            textF_touch_flag_tab2 = 1;
        }
        
        
        
    }
}


-(void)addDataToDatabase
{
    
    
    
    //NSLog(@"addDataToDatabase......");
    //NSLog(@"selectedTreatmentType......%@",selectedTreatmentType);
    
     NSString *mes_id=[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"];
     NSString *lead_id=[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"];
     NSInteger total_count=0;
    
    if (sqlite3_open([databasePath UTF8String], &database) == SQLITE_OK)
    {
        
        NSLog(@"databse opened");
        
        const char *sql= "SELECT count(*)  FROM rst_lead_measurement_info where localMeasurementID=? and localLeadID=? and offlineDeletionFlag!=?";
        
        sqlite3_stmt *selectstmt=Nil;
        
        if(sqlite3_prepare_v2(database, sql, -1, &selectstmt, NULL) == SQLITE_OK)
        {
           
            sqlite3_bind_text(selectstmt, 1, [mes_id  UTF8String], -1, SQLITE_TRANSIENT);
            sqlite3_bind_text(selectstmt, 2, [lead_id UTF8String], -1, SQLITE_TRANSIENT);
            sqlite3_bind_int(selectstmt, 3, 1);
            
            while(sqlite3_step(selectstmt) == SQLITE_ROW )
            {
                
                if (sqlite3_column_text(selectstmt, 0)!= nil)
                {
                    total_count = sqlite3_column_int(selectstmt, 0);
                }
                else
                    total_count=0;
                
            }
            // sqlite3_reset(selectstmt);
            // sqlite3_finalize(selectstmt);
        }
        sqlite3_finalize(selectstmt);
    }
    else
        sqlite3_close(database);

    NSLog(@"total_count......%i",total_count);
    
    
    if([modeValue isEqualToString:@"edit"]&&total_count==0)
    {
        
        leadMeasObj2.mID=leadMeasObj.mID;
        
    }
    
    
    NSDate *currDate = [NSDate date];
    NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
    dateFormatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
    NSString *date1String = [dateFormatter stringFromDate:currDate];
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        
        
        
        leadMeasObj2.localMeasurementID = [[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"];
        //////NSLog(@"selectedtreatementtype =%@",selectedTreatmentType);
        if (productnameTF.text.length == 0)
        {
            
            gotonextView = 0;
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please choose Product name." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            if ([modeValue isEqualToString:@"edit"]) {
                
            }
            else{
                [alert show];
            }
            dbupdateFlage = 0;
        }
        
        else{
            dbupdateFlage = 1;
            if ([leadMeasObj2.extentionBracket isEqualToString:@"1"]) {
                //                if ( leadMeasObj2.notes && [leadMeasObj2.notes rangeOfString:@"Extention Bracket = Yes"].location != NSNotFound ) {
                //                    // Substring found...
                //                }
                //                else{
                //                    if(leadMeasObj2.notes.length>0){
                //                    leadMeasObj2.notes =[leadMeasObj2.notes stringByAppendingString:@"\nExtention Bracket = Yes"];
                //                    }
                //                    else{
                //                        leadMeasObj2.notes =[leadMeasObj2.notes stringByAppendingString:@"Extention Bracket = Yes"];
                //                    }
                //
                //                }
                ////NSLog(@"leadMeasObj2.notes.... %@",leadMeasObj2.notes);
            }
            if ([leadMeasObj2.oldTreatment isEqualToString:@"1"]) {
                //                if ( leadMeasObj2.notes && [leadMeasObj2.notes rangeOfString:@"Old Treatment = Yes"].location != NSNotFound ) {
                //                    // Substring found...
                //                }
                //                else{
                //                    if(leadMeasObj2.notes.length>0){
                //                    leadMeasObj2.notes =[leadMeasObj2.notes stringByAppendingString:@"\nOld Treatment = Yes"];
                //                    }
                //                    else{
                //                       leadMeasObj2.notes =[leadMeasObj2.notes stringByAppendingString:@"Old Treatment = Yes"];
                //                    }
                //                }
                ////NSLog(@"leadMeasObj2.notes.... %@",leadMeasObj2.notes);
            }
            
            leadMeasObj2.notes = [leadMeasObj2.notes stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
            
            leadMeasObj2.installationNote= [leadMeasObj2.installationNote stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
            //////NSLog(@"selectedTreatmentTypeee=%@",selectedTreatmentType);
            if([selectedTreatmentType isEqualToString:@"1" ]  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    
                    //fixing
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,mountType,rollType, material,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,controlPosition,creationDate,windowSidemark,layer, optionalFeatures,extentionBracket,oldTreatment,roomLabel,installationNote,Notes,MID,Quantity) VALUES(0,'%@',%@,%@,'Roller Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID, [[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                    
                }
                else
                {
                    
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1',productName ='Roller Shade',productID='%@',mountType='%@',rollType='%@', material='%@', widthFt='%@', widthInch='%@', heightFt='%@' , heightInch='%@', depthFt='%@', depthInch='%@', controlPosition='%@', updationDate='%@', windowSidemark='%@', layer='%@',   optionalFeatures='%@', extentionBracket='%@', oldTreatment='%@', roomLabel='%@',installationNote='%@',Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",leadMeasObj2.productID, leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.installationNote,leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                    
                }
            }
            
            else if([selectedTreatmentType isEqualToString:@"1" ]  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO)
            {
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    
                    
                    
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,mountType,rollType, material,controlPosition,creationDate,windowsideMark,layer, optionalFeatures,extentionBracket,oldTreatment,roomLabel,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,'%@','%@','%@','Roller Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                    
                    
                }
                else
                {
                    
                    
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set formType='1', productName='Roller Shade',productID='%@', mountType='%@', rollType = '%@',  material = '%@', controlPosition = '%@', updationDate = '%@', windowsideMark = '%@', layer = '%@',  optionalFeatures = '%@', extentionBracket = '%@', oldTreatment = '%@', roomLabel='%@', leftFt = '%@', leftInch = '%@', widthFt = '%@', widthInch = '%@', rightFt = '%@', rightInch = '%@', bracketFt = '%@', bracketInch = '%@', topFt = '%@', topInch = '%@', heightFt = '%@', heightInch = '%@', bottomFt = '%@', bottomInch = '%@',installationNote='%@', Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",leadMeasObj2.productID, leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                    
                    
                }
            }
            
            
            else if([selectedTreatmentType isEqualToString:@"2" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
                selectedTreatmentType = @"3";
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    
                    
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Woven Wood',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                    
                    
                }
                else
                {
                    
                   
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Woven Wood',productID='%@', roomLabel='%@', windowSidemark='%@', layer='%@', material='%@', controlPosition='%@', updationDate='%@', type='%@',optionalFeatures='%@',extentionBracket='%@',mountType2='%@',oldTreatment='%@',headrailSize='%@',cordType='%@',mountType='%@',TDBU='%@',widthFt='%@',widthInch='%@',heightFt='%@',heightInch='%@',depthFt='%@',depthInch='%@',installationNote='%@', Notes='%@',Quantity='%@',Lining='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.lining,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                }
            }
            else if([selectedTreatmentType isEqualToString:@"2" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO)
            {
                
                selectedTreatmentType = @"3";
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Woven Wood',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                    
                }
                else
                {
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Woven Wood',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',updationDate='%@',type='%@',optionalFeatures='%@',extentionBracket='%@',mountType2='%@',oldTreatment='%@',headrailSize='%@',cordType='%@',mountType='%@',TDBU='%@',leftFt= '%@', leftInch = '%@', widthFt = '%@', widthInch = '%@', rightFt = '%@', rightInch = '%@', bracketFt = '%@', bracketInch = '%@', topFt = '%@', topInch = '%@', heightFt = '%@', heightInch = '%@', bottomFt = '%@', bottomInch = '%@', installationNote='%@', Notes='%@', Quantity='%@',Lining='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.lining,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                }
                
            }
            
            else if([selectedTreatmentType isEqualToString:@"5" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                
                selectedTreatmentType = @"2";
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                   
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                    
                }
                else
                {
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Roman Shade',productID='%@', roomLabel='%@', windowSidemark='%@', layer='%@', material='%@', controlPosition='%@', updationDate='%@', type='%@',optionalFeatures='%@',extentionBracket='%@',mountType2='%@',oldTreatment='%@',headrailSize='%@',cordType='%@',mountType='%@',TDBU='%@',widthFt='%@',widthInch='%@',heightFt='%@',heightInch='%@',depthFt='%@',depthInch='%@',installationNote='%@', Notes='%@',Quantity='%@',Lining='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@", selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.lining,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                }
            }
            else if([selectedTreatmentType isEqualToString:@"5" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
                selectedTreatmentType = @"2";
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    
                    
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                    
                    
                }
                else
                {
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Roman Shade',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',updationDate='%@',type='%@',optionalFeatures='%@',extentionBracket='%@',mountType2='%@',oldTreatment='%@',headrailSize='%@',cordType='%@',mountType='%@',TDBU='%@',leftFt= '%@', leftInch = '%@', widthFt = '%@', widthInch = '%@', rightFt = '%@', rightInch = '%@', bracketFt = '%@', bracketInch = '%@', topFt = '%@', topInch = '%@', heightFt = '%@', heightInch = '%@', bottomFt = '%@', bottomInch = '%@', installationNote='%@', Notes='%@',Quantity='%@' ,Lining='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType , leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.lining,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                }
                
            }
            
            else if([selectedTreatmentType isEqualToString:@"6" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                selectedTreatmentType = @"4";
                
               
                if([modeValue isEqualToString:@"new"]||total_count==0){
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,tiltType,controlType,optionalFeatures,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Wood Blinds','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.tiltType,leadMeasObj2.controlType, leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                }
                else{
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Wood Blinds',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',tiltType='%@', controlType='%@',optionalFeatures='%@',mountType2='%@',cordType='%@',TDBU='%@',spacerNeeded='%@',oldTreatment='%@',mountType='%@',widthFt='%@',widthInch='%@',heightFt='%@',heightInch='%@',depthFt='%@',depthInch='%@',updationDate='%@',installationNote='%@', Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.tiltType, leadMeasObj2.controlType, leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,date1String,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                }
                
            }
            else if([selectedTreatmentType isEqualToString:@"6" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO)
            {
                
                selectedTreatmentType = @"4";
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,controlType,tiltType,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Wood Blinds','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition, leadMeasObj2.controlType, leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                }
                else
                {
                    
                    
                    //////NSLog(@"tilttype=%@",leadMeasObj2.tiltType);
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Wood Blinds',productID='%@', roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',tiltType='%@', controlType = '%@', tiltType='%@',mountType2='%@',cordType='%@',TDBU='%@',spacerNeeded='%@',oldTreatment='%@',mountType='%@',leftFt= '%@', leftInch = '%@', widthFt = '%@', widthInch = '%@', rightFt = '%@', rightInch = '%@', bracketFt = '%@', bracketInch = '%@', topFt = '%@', topInch = '%@', heightFt = '%@', heightInch = '%@', bottomFt = '%@', bottomInch = '%@',updationDate='%@',installationNote='%@', Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@", selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.tiltType, leadMeasObj2.controlType, leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,date1String,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                    
                    
                }
                
                
            }
            else if (([selectedTreatmentType isEqualToString:@"7"] )  &&((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                
                
                 selectedTreatmentType = @"5";
                 if([modeValue isEqualToString:@"new"]||total_count==0)
                 {
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','XL Pleat','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                }
                else
                {
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='XL Pleat',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',optionalFeatures='%@',tiltType='%@',mountType2='%@',cordType='%@',TDBU='%@',extentionBracket='%@',oldTreatment='%@',mountType='%@',widthFt='%@',widthInch='%@',heightFt='%@',heightInch='%@',depthFt='%@',depthInch='%@',updationDate='%@',installationNote='%@',Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,date1String,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                }
                
                
            }
            
            else if (([selectedTreatmentType isEqualToString:@"7"] )  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO)
            {
                selectedTreatmentType = @"5";
                
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','XL Pleat','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                }
                else
                {
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='XL Pleat',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',optionalFeatures='%@',tiltType='%@',mountType2='%@',cordType='%@',TDBU='%@',extentionBracket='%@',oldTreatment='%@',mountType='%@',leftFt= '%@', leftInch = '%@', widthFt = '%@', widthInch = '%@', rightFt = '%@', rightInch = '%@', bracketFt = '%@', bracketInch = '%@', topFt = '%@', topInch = '%@', heightFt = '%@', heightInch = '%@', bottomFt = '%@', bottomInch = '%@',updationDate='%@',installationNote='%@',Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,date1String,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                }
                
                
            }
            
            else if (([selectedTreatmentType isEqualToString:@"8"])  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                selectedTreatmentType = @"6";
                
                //NSLog(@"in edit mode 8-1");
                
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                    
                    
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Cellular Shade','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                    
                    
                }
                else
                {
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Cellular Shade',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',optionalFeatures='%@',tiltType='%@',mountType2='%@',cordType='%@',TDBU='%@',extentionBracket='%@',oldTreatment='%@',mountType='%@',widthFt='%@',widthInch='%@',heightFt='%@',heightInch='%@',depthFt='%@',depthInch='%@',updationDate='%@',installationNote='%@',Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,date1String,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                }
                
                
            }
            
            else if (([selectedTreatmentType isEqualToString:@"8"])  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
                selectedTreatmentType = @"6";
                
                if([modeValue isEqualToString:@"new"]||total_count==0){
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Cellular Shade','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity];
                }
                else
                {
                    
                    insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='1', productName='Cellular Shade',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',controlPosition='%@',optionalFeatures='%@',tiltType='%@',mountType2='%@',cordType='%@',TDBU='%@',extentionBracket='%@',oldTreatment='%@',mountType='%@',leftFt= '%@', leftInch = '%@', widthFt = '%@', widthInch = '%@', rightFt = '%@', rightInch = '%@', bracketFt = '%@', bracketInch = '%@', topFt = '%@', topInch = '%@', heightFt = '%@', heightInch = '%@', bottomFt = '%@', bottomInch = '%@',updationDate='%@',installationNote='%@',Notes='%@',Quantity='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,date1String,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.quantity,leadMeasObj2.localMeasurementID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                    
                }
                
                
            }
            
            
            NSLog(@"insert1....=%@",insertSQL);
            
            const char *sql = [insertSQL UTF8String];
            sqlite3_stmt *sqlStatement1;
            if(sqlite3_prepare_v2(database, sql, -1, &sqlStatement1, NULL) != SQLITE_OK)
            {
                //NSLog(@"Problem with prepare statement////");
                return;
            }
            else{
                
                if(sqlite3_step(sqlStatement1)==SQLITE_DONE)
                {
                    
                    if([modeValue isEqualToString:@"new"]||total_count==0)
                    {
                        
                        
                        ////////NSLog(@"lastInsertId    %lli",sqlite3_last_insert_rowid(database));
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"localMeasurementIDform_one"];
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"lastinsetedrow"];
                        [[NSUserDefaults standardUserDefaults]setValue:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]  forKey:@"formoneMeasid"];
                        [[NSUserDefaults standardUserDefaults] synchronize];
                        leadMeasObj2.localMeasurementID = [[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"];
                        
                        
                        
                    }
                    
                    sqlite3_finalize(sqlStatement1);
                    sqlite3_close(database);
                    
                    NSLog(@"formoneMeasid=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]);
                     NSLog(@"localMeasurementIDform_one=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]);
                    
                     NSLog(@"imageDataArr count=%i",imageDataArr.count);
                    //   [self readDataFromDatabase];
                    //////NSLog(@"imageDataArr.count3=%i",imageDataArr.count);
                    if (imageDataArr.count > 0 && [modeValue isEqualToString:@"new"])
                    {
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [self insertMeasurement_image_tolocalDb:imageDataArr];
                    }
                    
                    else if ((imageDataArr.count>=0) &&[modeValue isEqualToString:@"edit"])
                    {
                        //                        //////NSLog(@"imageDataArr.count=%i",imageDataArr.count);
                        [dbSingleton() removeFile:[NSString stringWithFormat:@"measurement_%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]]];
                        
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteMeasurement_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                        [[NSUserDefaults standardUserDefaults]setValue:[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]  forKey:@"localMeasurementIDform_one"];
                        
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [self insertMeasurement_image_tolocalDb:imageDataArr];
                    }
                    
                    if (sketch_imagedataArr_tab1.count>0 && [modeValue isEqualToString:@"new"]) {
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue]];
                        for(int i=0;i<[sketch_imagedataArr_tab1 count];i++){
                            [self insertMeasurement_sketchimage_tolocalDb:[sketch_imagedataArr_tab1 objectAtIndex:i] image_num:[NSString stringWithFormat:@"%i",i+1]];
                        }
                    }
                    else{
                        [dbSingleton() removeFile:[NSString stringWithFormat:@"sketch_%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]]];
                        
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                        for(int i=0;i<[sketch_imagedataArr_tab1 count];i++){
                            [self insertMeasurement_sketchimage_tolocalDb:[sketch_imagedataArr_tab1 objectAtIndex:i] image_num:[NSString stringWithFormat:@"%i",i+1]];
                        }
                    }
                    //added 11 march
                    if (appdelObj.arr_presketch_images.count > 0 && [modeValue isEqualToString:@"new"]) {
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [self insertMeasurement_preset_sketch_tolocalDb:appdelObj.arr_presketch_images];
                    }
                    else if (appdelObj.arr_presketch_images.count>=0 &&[modeValue isEqualToString:@"edit"]){
                        [dbSingleton() removeFile:[NSString stringWithFormat:@"preset_sketch_%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]]];
                        
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteMeasurement_preset_sketch_image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [self insertMeasurement_preset_sketch_tolocalDb:appdelObj.arr_presketch_images];
                    }
                    //                    NSData *sketchData = [[NSUserDefaults standardUserDefaults]objectForKey:@"sketchimagedt"];
                    
                    
                    //                    if ([sketchData length] != 0) {
                    //                        //////NSLog(@"sketch data is not null");
                    //                        if ([modeValue isEqualToString:@"new"]) {
                    //                            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    //                            [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue]];
                    //                            [self insertMeasurement_sketchimage_tolocalDb:sketchData];
                    //
                    //                        }
                    //                        else{
                    //                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    //                        [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                    //                            [self insertMeasurement_sketchimage_tolocalDb:sketchData];
                    //
                    //                        }
                    //                    }
                    //                    else{
                    //                         //////NSLog(@"sketch data is not null");
                    //                    }
                }
                
            }
            
            
            // [[NSUserDefaults standardUserDefaults]setValue:@"YES"forKey:@"localDatabase"];
        }
    }
    else
    {
        ////////NSLog(@"An error has occured.");
        return;
    }
    
    
}

-(void)addDatatoDatabase_form2
{
  
    
    
    
    NSString *mes_id=[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"];
    NSString *lead_id=[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"];
    NSInteger total_count=0;
    
    if (sqlite3_open([databasePath UTF8String], &database) == SQLITE_OK)
    {
        
        NSLog(@"databse opened");
        
        const char *sql= "SELECT count(*)  FROM rst_lead_measurement_info where localMeasurementID=? and localLeadID=? and offlineDeletionFlag!=?";
        
        sqlite3_stmt *selectstmt=Nil;
        
        if(sqlite3_prepare_v2(database, sql, -1, &selectstmt, NULL) == SQLITE_OK)
        {
            
            sqlite3_bind_text(selectstmt, 1, [mes_id  UTF8String], -1, SQLITE_TRANSIENT);
            sqlite3_bind_text(selectstmt, 2, [lead_id UTF8String], -1, SQLITE_TRANSIENT);
            sqlite3_bind_int(selectstmt, 3, 1);
            
            while(sqlite3_step(selectstmt) == SQLITE_ROW )
            {
                
                if (sqlite3_column_text(selectstmt, 0)!= nil)
                {
                    total_count = sqlite3_column_int(selectstmt, 0);
                }
                else
                    total_count=0;
                
            }
            // sqlite3_reset(selectstmt);
            // sqlite3_finalize(selectstmt);
        }
        sqlite3_finalize(selectstmt);
    }
    else
        sqlite3_close(database);
    
    NSLog(@"2total_count......%i",total_count);
    
    if([modeValue isEqualToString:@"edit"]&&total_count==0)
    {
        
        leadMeasObj3.mID=leadMeasObj.mID;
    }
    
    
    //NSLog(@"addDatatoDatabase_form2.....");
  
    ////////NSLog(@"selllee=%@",selectedTreatmentType_two);
    NSDate *currDate = [NSDate date];
    NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
    dateFormatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
    NSString *date1String = [dateFormatter stringFromDate:currDate];
    ////////NSLog(@"date1String=%@",date1String);
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        
        
        ////////NSLog(@"IN DATABASE");
        
        ////////NSLog(@"localMeasurementID=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementID"]);
        ////////NSLog(@"localLeadID=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]);
        leadMeasObj3.localMeasurementID = [[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"];
        ////NSLog(@"leadsfdf =%@",selectedTreatmentType_two );
        if (arrTab1.count>0 && arrTab2.count>0)
        {
            leadMeasurementInfotab2 *lee = [[leadMeasurementInfotab2 alloc]init];
            lee = [arrTab2 objectAtIndex:0];
            leadMeasObj3.webMeasurementID = lee.webMeasurementID;
        }
        
        leadMeasObj3.notes = [leadMeasObj3.notes stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
        leadMeasObj3.installationNote = [leadMeasObj3.installationNote stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
        
        noteText_tab2= [noteText_tab2 stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
        if([selectedTreatmentType_two isEqualToString:@"3"])
        {
            selectedTreatmentType_two=@"9";
            //NSLog(@"type 3-1");
            if([modeValue isEqualToString:@"new"]||total_count==0)
            {
                
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,finishedLengthFt,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidthFt,topFt,topInch,heightFt,heightInch,ceilingtoFloor,mountType2,cordSide,extentionBracket,oldTreatment,installationNote,Notes,MID,functionality,rollType,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,bootomOfCrownFloorFt,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,hardwareWidthInch,bootomOfCrownFloorInch)VALUES(0,2,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,productnameTF_tab2.text, leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj3.mID,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch];
                
              
                
                
                
            }
            else
            {
                
               
                insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set formType='2', productName='XL Vertical',finishedLengthFt='0', productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',pairorSingle='%@',leftFt='%@',leftInch='%@',widthFt='%@',widthInch='%@',rightFt='%@',rightInch='%@',hardwareWidthFt='%@',topFt='%@',topInch='%@',heightFt='%@',heightInch='%@',ceilingtoFloor='%@',mountType2='%@',cordSide='%@',extentionBracket='%@',oldTreatment='%@',updationDate='%@',installationNote='%@', Notes='%@',functionality='',rollType='',poleTopFt='%@',poleTopInch='%@',poleHeightFt='%@',poleHeightInch='%@',bootomOfCrownFloorFt='%@',Quantity='%@',CtoFValue='%@'      ,cfleftFt='%@',cfleftInch='%@',cfcenterFt='%@',cfcenterInch='%@',cfrightFt='%@',cfrightInch='%@',hardwareWidthInch='%@',bootomOfCrownFloorInch='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType_two, leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,date1String,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch,[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                
                
                
            }
            
        }
        else if([selectedTreatmentType_two isEqualToString:@"4"])
        {
            
            if(((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:93]).selected==YES)
            {
                leadMeasObj3.str_offthefloor_inch=@"";
                leadMeasObj3.oftheFloor=@"";
            }
            if(((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:94]).selected==YES)
            {
                leadMeasObj3.puddle=@"";
                leadMeasObj3.str_puddle_inch=@"";
            }
            if(((UIButton *)[self.viewfortabtwo_Controlls viewWithTag:92]).selected==YES)
            {
                leadMeasObj3.returnn=@"";
                leadMeasObj3.str_return_inch=@"";
            }
            
            selectedTreatmentType_two=@"7";
            if([modeValue isEqualToString:@"new"]||total_count==0)
            {
                
               
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidthFt,topFt,topInch,heightFt,heightInch,finishedLengthFt,ceilingtoFloor,mountType2,functionality,extentionBracket,oldTreatment,returnFt,puddleFt,offtheFloorFt,installationNote,Notes,MID,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,bootomOfCrownFloorFt,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,hardwareWidthInch,bootomOfCrownFloorInch,puddleInch,returnInch,offtheFloorInch,finishedLengthInch)VALUES(0,2,'%@','%@','%@','%@','Drapery','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.finishedLength, leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.functionality,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.returnn,leadMeasObj3.puddle,leadMeasObj3.oftheFloor,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj3.mID,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch,leadMeasObj3.str_puddle_inch,leadMeasObj3.str_return_inch,leadMeasObj3.str_offthefloor_inch,leadMeasObj3.str_finished_inch];
                
                
            }
            else
            {
                
                insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set formType='2', productName='Drapery',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',pairorSingle='%@',leftFt='%@',leftInch='%@',widthFt='%@',widthInch='%@',rightFt='%@',rightInch='%@',hardwareWidthFt='%@',topFt='%@',topInch='%@',heightFt='%@',heightInch='%@',finishedLengthFt='%@',ceilingtoFloor='%@',mountType2='%@',functionality='%@',extentionBracket='%@',oldTreatment='%@',returnFt='%@',puddleFt='%@',offtheFloorFt='%@',updationDate='%@',installationNote='%@',Notes='%@',poleTopFt='%@',poleTopInch='%@',poleHeightFt='%@',poleHeightInch='%@',bootomOfCrownFloorFt='%@',Quantity='%@',CtoFValue='%@',cfleftFt='%@',cfleftInch='%@',cfcenterFt='%@',cfcenterInch='%@',cfrightFt='%@',cfrightInch='%@',hardwareWidthInch='%@',bootomOfCrownFloorInch='%@',puddleInch='%@',returnInch='%@',offtheFloorInch='%@',finishedLengthInch='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType_two, leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.finishedLength, leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.functionality,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.returnn,leadMeasObj3.puddle,leadMeasObj3.oftheFloor,date1String,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch,leadMeasObj3.str_puddle_inch,leadMeasObj3.str_return_inch,leadMeasObj3.str_offthefloor_inch,leadMeasObj3.str_finished_inch,[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                //           ////NSLog(@"update_query=%@",insertSQL);
                
            }
        }
        else if ([selectedTreatmentType_two isEqualToString:@"9"]){
            selectedTreatmentType_two = @"8";
            
            if([modeValue isEqualToString:@"new"]||total_count==0)
            {
                
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,finishedLengthFt,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidthFt,topFt,topInch,heightFt,heightInch,ceilingtoFloor,mountType2,tiltType,cordSide,extentionBracket,oldTreatment,installationNote,Notes,MID,functionality,rollType,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,bootomOfCrownFloorFt,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,hardwareWidthInch,bootomOfCrownFloorInch)VALUES(0,2,0,'%@','%@','%@','%@','Panel Systems','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.tiltType,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj3.mID,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch];
                
            }
            else
            {

                
                 //NSLog(@"we are to here.....");
                 insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set  formType='2', productName='Panel Systems',finishedLengthFt='0',productID='%@',roomLabel='%@',windowSidemark='%@',layer='%@',material='%@',pairorSingle='%@',leftFt='%@',leftInch='%@',widthFt='%@',widthInch='%@',rightFt='%@',rightInch='%@',hardwareWidthFt='%@',topFt='%@',topInch='%@',heightFt='%@',heightInch='%@',ceilingtoFloor='%@',mountType2='%@',tiltType='%@',cordSide='%@',extentionBracket='%@',oldTreatment='%@',updationDate='%@',installationNote='%@',Notes='%@',functionality='',rollType='',poleTopFt='%@',poleTopInch='%@',poleHeightFt='%@',poleHeightInch='%@',bootomOfCrownFloorFt='%@',Quantity='%@',CtoFValue='%@',cfleftFt='%@',cfleftInch='%@',cfcenterFt='%@',cfcenterInch='%@',cfrightFt='%@',cfrightInch='%@',hardwareWidthInch='%@',bootomOfCrownFloorInch='%@',offlineUpdatedFlag= 1 where localMeasurementID=%@ and localLeadID=%@",selectedTreatmentType_two, leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.tiltType,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,date1String,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch,[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"]];
                
                
            }
            
            
        }
         NSLog(@"...query////%@",insertSQL);
        const char *sql = [insertSQL UTF8String];
        sqlite3_stmt *sqlStatement1;
        if(sqlite3_prepare_v2(database, sql, -1, &sqlStatement1, NULL) != SQLITE_OK)
        {
            
               NSLog(@"Problem with prepare statement////");
               return;
            
        }
        else{
            //            ////NSLog(@"form2inset=%@",insertSQL);
            if(sqlite3_step(sqlStatement1)==SQLITE_DONE)
            {
                if([modeValue isEqualToString:@"new"]||total_count==0)
                {
                 
                    //NSLog(@"successfully.......%@",leadMeasObj3.ctof_right_inch);
                    ////////NSLog(@"lastInsertId    %lli",sqlite3_last_insert_rowid(database));
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"localMeasurementIDform_two"];
                    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"lastinsetedrow"];
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"lastinsetedrow"];
                    [[NSUserDefaults standardUserDefaults]setValue:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"]  forKey:@"formtwoMeasid"];
                    [[NSUserDefaults standardUserDefaults] synchronize];
                    
                    
                }
                sqlite3_finalize(sqlStatement1);
                sqlite3_close(database);
                NSLog(@"imageDataArr_tab2 count...%i",imageDataArr_tab2.count);
                 NSLog(@"formtwoMeasid...%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]);
                 NSLog(@"localMeasurementIDform_two...%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"]);
                
                if (imageDataArr_tab2.count > 0 && [modeValue isEqualToString:@"new"]) {
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [self insertMeasurement_image_tolocalDbfor_formTwo:imageDataArr_tab2];
                }
                
                else if (imageDataArr_tab2.count >= 0 && [modeValue isEqualToString:@"edit"])
                {
                    NSLog(@"......deleteMeasurement_Image_fromlocalDb");
                    [dbSingleton() removeFile:[NSString stringWithFormat:@"measurement_%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]]];
                    
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteMeasurement_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                    [[NSUserDefaults standardUserDefaults]setValue:[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]  forKey:@"localMeasurementIDform_two"];
                    
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [self insertMeasurement_image_tolocalDbfor_formTwo:imageDataArr_tab2];
                }
                
                if (sketch_imagedataArr_tab2.count>0 && [modeValue isEqualToString:@"new"]) {
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"]intValue]];
                    for(int i=0;i<[sketch_imagedataArr_tab2 count];i++){
                        [self insertMeasurement_sketchimage_tolocalDbfor_formTwo:[sketch_imagedataArr_tab2 objectAtIndex:i] image_num:[NSString stringWithFormat:@"%i",i+1]];
                    }
                }
                else{
                    [dbSingleton() removeFile:[NSString stringWithFormat:@"sketch_%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]]];
                    
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                    for(int i=0;i<[sketch_imagedataArr_tab2 count];i++){
                        [self insertMeasurement_sketchimage_tolocalDbfor_formTwo:[sketch_imagedataArr_tab2 objectAtIndex:i] image_num:[NSString stringWithFormat:@"%i",i+1]];
                    }
                }
                //                NSData *sketchData2 = [[NSUserDefaults standardUserDefaults]objectForKey:@"sketchimagedtformtwo"];
                
                if (appdelObj.arr_presketch_images_tab2.count > 0 && [modeValue isEqualToString:@"new"]) {
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [self insertMeasurement_preset_sketch_tolocalDb_formTwo:appdelObj.arr_presketch_images_tab2];
                }
                else if (appdelObj.arr_presketch_images_tab2.count>=0 &&[modeValue isEqualToString:@"edit"]){
                    [dbSingleton() removeFile:[NSString stringWithFormat:@"preset_sketch_%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]]];
                    
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteMeasurement_preset_sketch_image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [self insertMeasurement_preset_sketch_tolocalDb_formTwo:appdelObj.arr_presketch_images_tab2];
                }
                
            }
            
        }
        
        
        
    }
    else
    {
        //NSLog(@"An error has occured...");
        return;
    }
}

-(void)addDataToDatabase_forNewMeasurementInEdit_form1
{
    NSDate *currDate = [NSDate date];
    NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
    dateFormatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
    NSString *date1String = [dateFormatter stringFromDate:currDate];
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        
        
        leadMeasObj2.localMeasurementID = [[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"];
        ////////NSLog(@"leadMeasObj2.localMeasurementID =%@",leadMeasObj2.localMeasurementID );
        if (productnameTF.text.length == 0) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Please choose Product name." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
            if ([modeValue isEqualToString:@"edit"]) {
                
            }
            else{
                [alert show];
            }
            dbupdateFlage = 0;
        }
        
        else{
            dbupdateFlage = 1;
            leadMeasObj2.notes = [leadMeasObj2.notes stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
            leadMeasObj2.installationNote= [leadMeasObj2.installationNote stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
            if([selectedTreatmentType isEqualToString:@"1" ]  &&((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                //NSLog(@"here come again....");
                
                /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,leadID,localLeadID,productID,product,formType,status,mountType,rollType, material,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,controlPosition,creationDate,windowSidemark,layer, optionalFeatures,extentionBracket,oldTreatment,roomLabel,installationNote, Notes,MID,Quantity) VALUES(0,'%@',%@,%@,'Roller Shade',1,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID, [[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];*/
                
                
                
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,mountType,rollType, material,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,controlPosition,creationDate,windowSidemark,layer, optionalFeatures,extentionBracket,oldTreatment,roomLabel,installationNote,Notes,MID,Quantity) VALUES(0,'%@',%@,%@,'Roller Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID, [[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
                
                
            }
            
            else if([selectedTreatmentType isEqualToString:@"1" ]  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
                
                
                /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,leadID,localLeadID,productID,product,formType,status,mountType,rollType, material,controlPosition,creationDate,windowsideMark,layer, optionalFeatures,extentionBracket,oldTreatment,roomLabel,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,totalWidth,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,totalHeight,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,Quantity)VALUES(0,'%@','%@','%@','Roller Shade',1,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.totalWidth,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.totalHeight,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.totalHeightFt,leadMeasObj2.totalHeightInch,leadMeasObj2.totalWidthFt,leadMeasObj2.totalWidthInch,leadMeasObj2.quantity];*/
                
                
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,mountType,rollType, material,controlPosition,creationDate,windowsideMark,layer, optionalFeatures,extentionBracket,oldTreatment,roomLabel,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,'%@','%@','%@','Roller Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.mountType,leadMeasObj2.rollType,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.roomLabel,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
                
                
                
                
            }
            
            
            else if([selectedTreatmentType isEqualToString:@"2" ] &&((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
                
                
                selectedTreatmentType = @"3";
                
              /*  insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,leadID,localLeadID,productID,product,formType,status,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity,leadMeasObj2.lining];*/
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Woven Wood',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                
            }
            else if([selectedTreatmentType isEqualToString:@"2" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
                
                
                selectedTreatmentType = @"3";
                
               /* insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,leadID,localLeadID,productID,product,formType,status,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,totalWidth,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,totalHeight,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,Quantity,Lining)VALUES(0,'%@','%@','%@','Woven Wood',1,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.totalWidth,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.totalHeight,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.totalHeightFt,leadMeasObj2.totalHeightInch,leadMeasObj2.totalWidthFt,leadMeasObj2.totalWidthInch,leadMeasObj2.quantity,leadMeasObj2.lining];*/
                
                
                 insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Woven Wood',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                
                
            }
            
            
            else if([selectedTreatmentType isEqualToString:@"5" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                
                 selectedTreatmentType = @"2";
                
                /*
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,leadID,localLeadID,productID,product,formType,status,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.quantity,leadMeasObj2.lining];*/
                
                
                    insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                
                
                
            }
            else if([selectedTreatmentType isEqualToString:@"5" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO)
            {
                selectedTreatmentType = @"2";
                /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,leadID,localLeadID,productID,product,formType,status,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,totalWidth,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,totalHeight,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.totalWidth,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.totalHeight,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.totalHeightFt,leadMeasObj2.totalHeightInch,leadMeasObj2.totalWidthFt,leadMeasObj2.totalWidthInch,leadMeasObj2.quantity,leadMeasObj2.lining];*/
                
                
               insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,webleadID,localLeadID,productID,productName,formType,roomLabel,windowSidemark,layer,material,controlPosition,creationDate,type,optionalFeatures,extentionBracket,mountType2,oldTreatment,headrailSize,cordType,mountType,TDBU,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity,Lining)VALUES(0,'%@','%@','%@','Roman Shade',1,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[NSUserDefaults standardUserDefaults]valueForKey:@"leadID"],[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,date1String,leadMeasObj2.type,leadMeasObj2.optionalFeatures,leadMeasObj2.extentionBracket,leadMeasObj2.mountType2,leadMeasObj2.oldTreatment,leadMeasObj2.headrailSize,leadMeasObj2.cordType,leadMeasObj2.mountType,leadMeasObj2.tdbu,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity,leadMeasObj2.lining];
                
                
                
                
                
                
            }
            
            
            else if([selectedTreatmentType isEqualToString:@"6" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES)
            {
                
                selectedTreatmentType = @"4";
                
                /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,0,'%@','%@','%@','%@','Wood Blinds','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];*/
                
                
                //NSLog(@"selectedTreatmentType 3");
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,tiltType,controlType,optionalFeatures,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Wood Blinds','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.tiltType,leadMeasObj2.controlType, leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
                
                
                
            }
            else if([selectedTreatmentType isEqualToString:@"6" ] && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
                
                selectedTreatmentType = @"4";
                
               /* insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,controlPosition,controlType,tiltType,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,totalWidth,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,totalHeight,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,Quantity)VALUES(0,1,0,'%@','%@','%@','%@','Wood Blinds','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@'','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition, leadMeasObj2.controlType, leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.totalWidth,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.totalHeight,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.totalHeightFt,leadMeasObj2.totalHeightInch,leadMeasObj2.totalWidthFt,leadMeasObj2.totalWidthInch,leadMeasObj2.quantity];*/
                
                
                 insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,controlType,tiltType,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Wood Blinds','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType, leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition, leadMeasObj2.controlType, leadMeasObj2.tiltType,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
                
            }
            else if (([selectedTreatmentType isEqualToString:@"7"] )  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
                selectedTreatmentType = @"5";
                /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,0,'%@','%@','%@','%@','XL Pleat','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];*/
                
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','XL Pleat','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
            }
            
            else if (([selectedTreatmentType isEqualToString:@"7"] )  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO){
                selectedTreatmentType = @"5";
                
               /* insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,totalWidth,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,totalHeight,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,Quantity)VALUES(0,1,0,'%@','%@','%@','%@','XL Pleat','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.totalWidth,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.totalHeight,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.totalHeightFt,leadMeasObj2.totalHeightInch,leadMeasObj2.totalWidthFt,leadMeasObj2.totalWidthInch,leadMeasObj2.quantity];*/
                
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','XL Pleat','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
                
            }
            
            else if (([selectedTreatmentType isEqualToString:@"8"])  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == YES){
                selectedTreatmentType = @"6";
                
                
                /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,spacerNeeded,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,0,'%@','%@','%@','%@','Cellular Shade','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.spacerNeeded,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];*/
                
                insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,widthFt,widthInch,heightFt,heightInch,depthFt,depthInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Cellular Shade','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.depthFt,leadMeasObj2.depthInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
            }
            
            else if (([selectedTreatmentType isEqualToString:@"8"])  && ((UIButton *)[self.viewforControlls viewWithTag:10]).selected == NO)
            {
                selectedTreatmentType = @"6";
              /*  insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,totalWidth,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,totalHeight,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,Quantity)VALUES(0,1,0,'%@','%@','%@','%@','Cellular Shade','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.totalWidth,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.totalHeight,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj2.mID,leadMeasObj2.totalHeightFt,leadMeasObj2.totalHeightInch,leadMeasObj2.totalWidthFt,leadMeasObj2.totalWidthInch,leadMeasObj2.quantity];*/
                
                
                
                 insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,controlPosition,optionalFeatures,mountType2,cordType,TDBU,extentionBracket,oldTreatment,mountType,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,bracketFt,bracketInch,topFt,topInch,heightFt,heightInch,bottomFt,bottomInch,installationNote,Notes,MID,Quantity)VALUES(0,1,'%@','%@','%@','%@','Cellular Shade','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj2.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType,leadMeasObj2.roomLabel,leadMeasObj2.windowSidemark,leadMeasObj2.laye,leadMeasObj2.material,leadMeasObj2.controlPosition,leadMeasObj2.optionalFeatures,leadMeasObj2.mountType2,leadMeasObj2.cordType,leadMeasObj2.tdbu,leadMeasObj2.extentionBracket,leadMeasObj2.oldTreatment,leadMeasObj2.mountType, leadMeasObj2.leftFt,leadMeasObj2.leftInch,leadMeasObj2.widthFt,leadMeasObj2.widthInch,leadMeasObj2.rightFt,leadMeasObj2.rightInch,leadMeasObj2.bracketFt,leadMeasObj2.bracketInch,leadMeasObj2.topFt,leadMeasObj2.topInch,leadMeasObj2.heightFt,leadMeasObj2.heightInch,leadMeasObj2.bottomFt,leadMeasObj2.bottomInch,leadMeasObj2.installationNote, leadMeasObj2.notes,leadMeasObj.mID,leadMeasObj2.quantity];
                
                
                
                
            }
            //////NSLog(@"insert_inedit_form1=%@",insertSQL);
            
            const char *sql = [insertSQL UTF8String];
            sqlite3_stmt *sqlStatement1;
            if(sqlite3_prepare_v2(database, sql, -1, &sqlStatement1, NULL) != SQLITE_OK)
            {
                //////NSLog(@"Problem with prepare statement////");
                return;
            }
            else{
                
                if(sqlite3_step(sqlStatement1)==SQLITE_DONE)
                {
                    if([modeValue isEqualToString:@"new"]){
                        ////////NSLog(@"lastInsertId    %lli",sqlite3_last_insert_rowid(database));
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"localMeasurementIDform_one"];
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"formoneMeasid"];
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"lastinsetedrow"];
                        
                    }
                    if ([modeValue isEqualToString:@"edit"]) {
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"localMeasurementIDform_one"];
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"formoneMeasid"];
                        [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"lastinsetedrow"];
                    }
                    
                    sqlite3_finalize(sqlStatement1);
                    sqlite3_close(database);
                    
                    if (imageDataArr.count>0 &&[modeValue isEqualToString:@"edit"]){
                        //                        //////NSLog(@"imageDataArr.count=%i",imageDataArr.count);
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteMeasurement_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                        //                        //////NSLog(@"imageDataArr.count3=%i",imageDataArr.count);
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [self insertMeasurement_image_tolocalDb:imageDataArr];
                    }
                    
                    
                    
                    if (sketch_imagedataArr_tab1.count == 0) {
                        //////NSLog(@"sketch data is null");
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue]];
                    }
                    else{
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                        for(int i=0;i<[sketch_imagedataArr_tab1 count];i++){
                            [self insertMeasurement_sketchimage_tolocalDb:[sketch_imagedataArr_tab1 objectAtIndex:i] image_num:[NSString stringWithFormat:@"%i",i+1]];
                        }
                        
                    }
                    //added 11 march
                    if (appdelObj.arr_presketch_images.count == 0) {
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteMeasurement_preset_sketch_image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue]];
                    }
                    else  {
                        
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [dbSingleton() deleteMeasurement_preset_sketch_image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue]];
                        
                        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                        [self insertMeasurement_preset_sketch_tolocalDb:appdelObj.arr_presketch_images];
                    }
                }
                
            }
            
            
        }
    }
    else
    {
        ////////NSLog(@"An error has occured.");
        return;
    }
    
    
}

-(void)addDatatoDatabase_forNewMeasurementInEdit_form2{
   //NSLog(@"selllee=%@",selectedTreatmentType_two);
    NSDate *currDate = [NSDate date];
    NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
    dateFormatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
    NSString *date1String = [dateFormatter stringFromDate:currDate];
    ////////NSLog(@"date1String=%@",date1String);
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        
        
        leadMeasObj3.notes = [leadMeasObj3.notes stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
        noteText_tab2= [noteText_tab2 stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
        //////NSLog(@"leadMeasObj3.localMeasurementID =%@",leadMeasObj3.localMeasurementID );
        leadMeasObj3.notes = [leadMeasObj2.notes stringByReplacingOccurrencesOfString:@"'" withString:@"''"];
        if([selectedTreatmentType_two isEqualToString:@"3"]){
            selectedTreatmentType_two=@"9";
            
           /*insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,finishedLength,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidth,topFt,topInch,heightFt,heightInch,topofPole,ceilingtoFloor,mountType2,cordSide,extentionBracket,oldTreatment,installationNote,Notes,MID,functionality,rollType,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,topofpoleFt,topofpoleInch,bootomOfCrownFloor,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,str_hard_inch,str_bottum_inch)VALUES(0,2,0,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,productnameTF_tab2.text, leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.topofPole,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj.mID,leadMeasObj3.totalHeightFt,leadMeasObj3.totalHeightInch,leadMeasObj3.totalWidthFt,leadMeasObj3.totalWidthInch,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,       leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch];*/
            
            
            insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,finishedLengthFt,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidthFt,topFt,topInch,heightFt,heightInch,ceilingtoFloor,mountType2,cordSide,extentionBracket,oldTreatment,installationNote,Notes,MID,functionality,rollType,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,bootomOfCrownFloorFt,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,hardwareWidthInch,bootomOfCrownFloorInch)VALUES(0,2,0,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,productnameTF_tab2.text, leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj.mID,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch];
            
            
        }
        else if([selectedTreatmentType_two isEqualToString:@"4"]){
            selectedTreatmentType_two=@"7";
            
           /* insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidth,topFt,topInch,heightFt,heightInch,topofPole,finishedLength,ceilingtoFloor,mountType2,functionality,extentionBracket,oldTreatment,return,puddle,offtheFloor,installationNote,Notes,MID,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,topofpoleFt,topofpoleInch,bootomOfCrownFloor,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,str_hard_inch,str_bottum_inch,str_puddle_inch,str_return_inch,str_offthefloor_inch,str_finished_inch)VALUES(0,2,0,'%@','%@','%@','%@','Drapery','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@',%@,'%@','%@','%@','%@','%@','%@',%@,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.topofPole,leadMeasObj3.finishedLength, leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.functionality,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.returnn,leadMeasObj3.puddle,leadMeasObj3.oftheFloor,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj.mID,leadMeasObj3.totalHeightFt,leadMeasObj3.totalHeightInch,leadMeasObj3.totalWidthFt,leadMeasObj3.totalWidthInch,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch,leadMeasObj3.str_puddle_inch,leadMeasObj3.str_return_inch,leadMeasObj3.str_offthefloor_inch,leadMeasObj3.str_finished_inch];*/
            
            
            
            
            
             insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidthFt,topFt,topInch,heightFt,heightInch,finishedLengthFt,ceilingtoFloor,mountType2,functionality,extentionBracket,oldTreatment,returnFt,puddleFt,offtheFloorFt,installationNote,Notes,MID,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,bootomOfCrownFloorFt,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,hardwareWidthInch,bootomOfCrownFloorInch,puddleInch,returnInch,offtheFloorInch,finishedLengthInch)VALUES(0,2,'%@','%@','%@','%@','Drapery','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@',%@,'%@','%@','%@','%@','%@','%@',%@,'%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.finishedLength, leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.functionality,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.returnn,leadMeasObj3.puddle,leadMeasObj3.oftheFloor,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj.mID,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch,leadMeasObj3.str_puddle_inch,leadMeasObj3.str_return_inch,leadMeasObj3.str_offthefloor_inch,leadMeasObj3.str_finished_inch];
            
        }
        else if ([selectedTreatmentType_two isEqualToString:@"9"]){
            selectedTreatmentType_two = @"8";
            
          /* insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,status,finishedLength,creationDate,leadID,localLeadID,productID,product,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidth,topFt,topInch,heightFt,heightInch,topofPole,ceilingtoFloor,mountType2,tiltType,cordSide,extentionBracket,oldTreatment,installationNote,Notes,MID,functionality,rollType,totalHeightFt,totalHeightInch,totalWidthFt,totalWidthInch,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,topofpoleFt,topofpoleInch,bootomOfCrownFloor,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,str_hard_inch,str_bottum_inch)VALUES(0,2,0,0,'%@','%@','%@','%@','Panel Systems','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.topofPole,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.tiltType,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj.mID,leadMeasObj3.totalHeightFt,leadMeasObj3.totalHeightInch,leadMeasObj3.totalWidthFt,leadMeasObj3.totalWidthInch,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch];*/
            
            
             insertSQL = [NSString stringWithFormat:@"INSERT INTO rst_lead_measurement_info (webMesurementID,formType,finishedLengthFt,creationDate,webleadID,localLeadID,productID,productName,roomLabel,windowSidemark,layer,material,pairorSingle,leftFt,leftInch,widthFt,widthInch,rightFt,rightInch,hardwareWidthFt,topFt,topInch,heightFt,heightInch,ceilingtoFloor,mountType2,tiltType,cordSide,extentionBracket,oldTreatment,installationNote,Notes,MID,functionality,rollType,poleTopFt,poleTopInch,poleHeightFt,poleHeightInch,bootomOfCrownFloorFt,Quantity,CtoFValue,cfleftFt,cfleftInch,cfcenterFt,cfcenterInch,cfrightFt,cfrightInch,hardwareWidthInch,bootomOfCrownFloorInch)VALUES(0,2,0,'%@','%@','%@','%@','Panel Systems','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",date1String,leadMeasObj3.leadID,[[NSUserDefaults standardUserDefaults]valueForKey:@"localLeadID"],selectedTreatmentType_two,leadMeasObj3.roomLabel,leadMeasObj3.windowSidemark,leadMeasObj3.laye,leadMeasObj3.material,leadMeasObj3.pairorSingle,leadMeasObj3.leftFt,leadMeasObj3.leftInch,leadMeasObj3.widthFt,leadMeasObj3.widthInch,leadMeasObj3.rightFt,leadMeasObj3.rightInch,leadMeasObj3.hardwareWidth,leadMeasObj3.topFt,leadMeasObj3.topInch,leadMeasObj3.heightFt,leadMeasObj3.heightInch,leadMeasObj3.ceilingtofloor,leadMeasObj3.mountType2,leadMeasObj3.tiltType,leadMeasObj3.cordSide,leadMeasObj3.extentionBracket,leadMeasObj3.oldTreatment,leadMeasObj3.installationNote, noteText_tab2,leadMeasObj.mID,leadMeasObj3.poleTopFt,leadMeasObj3.poleTopInch,leadMeasObj3.poleHeightFt,leadMeasObj3.poleHeightInch,leadMeasObj3.bootomOfCrownFloor,leadMeasObj3.quantity,leadMeasObj3.ctofValue,leadMeasObj3.ctof_left_ft,leadMeasObj3.ctof_left_inch,leadMeasObj3.ctof_center_ft,leadMeasObj3.ctof_center_inch,leadMeasObj3.ctof_right_ft,leadMeasObj3.ctof_right_inch,leadMeasObj3.str_hard_inch,leadMeasObj3.str_bottum_inch];
            
            
            
        }
         //NSLog(@"insert_inEdit_form2=%@",insertSQL);
        const char *sql = [insertSQL UTF8String];
        sqlite3_stmt *sqlStatement1;
        if(sqlite3_prepare_v2(database, sql, -1, &sqlStatement1, NULL) != SQLITE_OK)
        {
            ////////NSLog(@"Problem with prepare statement////");
            return;
        }
        else{
           
            if(sqlite3_step(sqlStatement1)==SQLITE_DONE)
            {
                if([modeValue isEqualToString:@"new"]){
                    ////////NSLog(@"lastInsertId    %lli",sqlite3_last_insert_rowid(database));
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"localMeasurementIDform_two"];
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"formtwoMeasid"];
                    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"lastinsetedrow"];
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"lastinsetedrow"];
                    
                }
                if ([modeValue isEqualToString:@"edit"]) {
                    ////////NSLog(@"lastInsertId    %lli",sqlite3_last_insert_rowid(database));
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"localMeasurementIDform_two"];
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"formtwoMeasid"];
                    [[NSUserDefaults standardUserDefaults]removeObjectForKey:@"lastinsetedrow"];
                    [[NSUserDefaults standardUserDefaults]setValue:[NSString stringWithFormat:@"%lli",sqlite3_last_insert_rowid(database)]  forKey:@"lastinsetedrow"];
                }
                sqlite3_finalize(sqlStatement1);
                sqlite3_close(database);
                
                if (imageDataArr_tab2.count > 0 && [modeValue isEqualToString:@"edit"])
                {
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteMeasurement_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [self insertMeasurement_image_tolocalDbfor_formTwo:imageDataArr_tab2];
                }
                
                if (sketch_imagedataArr_tab2.count == 0) {
                    //////NSLog(@"sketch image data form2 is null");
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                }else{
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteSketch_Image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                    for(int i=0;i<[sketch_imagedataArr_tab2 count];i++){
                        [self insertMeasurement_sketchimage_tolocalDbfor_formTwo:[sketch_imagedataArr_tab2 objectAtIndex:i] image_num:[NSString stringWithFormat:@"%i",i+1]];
                    }
                    
                }
                
                //added 11 march
                if (appdelObj.arr_presketch_images_tab2.count == 0) {
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteMeasurement_preset_sketch_image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                }
                
                else  {
                    
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [dbSingleton() deleteMeasurement_preset_sketch_image_fromlocalDb:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue]];
                    
                    [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
                    [self insertMeasurement_preset_sketch_tolocalDb_formTwo:appdelObj.arr_presketch_images_tab2];
                }
                
            }
            
        }
        
        
        
    }
    else
    {
        ////////NSLog(@"An error has occured.");
        return;
    }
}
//added 11 march
-(void)insertMeasurement_preset_sketch_tolocalDb:(NSMutableArray *)imagearr{
    //////NSLog(@"inti1");
    for (int i = 0; i<[imagearr count]; i++) {
        //        ////NSLog(@"inti1=%i",i);
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"preset_sketch" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"] image_num:[NSString stringWithFormat:@"%i",i+1] imageData:[imagearr objectAtIndex:i]];
        NSLog(@"image_path = %@",image_path);
        if ([modeValue isEqualToString:@"new"])
        {
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurement_preset_sketch_image_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue] image_path:image_path];
        }
        else{
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurement_preset_sketch_image_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue] image_path:image_path];
        }
    }
}
//added 11 march
-(void)insertMeasurement_preset_sketch_tolocalDb_formTwo:(NSMutableArray *)imagearr{
    //////NSLog(@"inti2");
    for (int i = 0; i<[imagearr count]; i++) {
        //        ////NSLog(@"inti2=%i",i);
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"preset_sketch" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"] image_num:[NSString stringWithFormat:@"%i",i+1] imageData:[imagearr objectAtIndex:i]];
        NSLog(@"image_path222 = %@",image_path);
        if([modeValue isEqualToString:@"new"])
        {
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurement_preset_sketch_image_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"]intValue] image_path:image_path];
            
        }
        else
        {
            
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurement_preset_sketch_image_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue] image_path:image_path];
            
        }
    }
    
}


-(void)insertMeasurement_image_tolocalDb:(NSMutableArray *)imagearr
{
    
   
    for (int i = 0; i<[imagearr count]; i++)
    {
        
        NSLog(@"local mes id=%@",[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]);
        //        //////NSLog(@"inti1=%i",i);
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"measurement" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"] image_num:[NSString stringWithFormat:@"%i",i+1] imageData:[imagearr objectAtIndex:i]];
        //NSLog(@"image_path = %@",image_path);
        if ([modeValue isEqualToString:@"new"])
        {
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurementImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue] image_path:image_path];
        }
        else{
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurementImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue] image_path:image_path];
        }
    }
}
//added 11 march
-(void)execute_image_request
{
    
    NSLog(@"imageDataArr count...%i",imageDataArr.count);
    
    dispatch_async(dispatch_get_main_queue(), ^{
        dispatch_async(kBgQueue, ^{
            for(int i=0; i<[imageDataArr count];i++)
            {
                
                NSLog(@"measurment images syncing1..");
                
                if ([modeValue isEqualToString:@"new"])
                {
                    [self uploadImageinServer:i imagesAerr:imageDataArr webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                }
                else
                {
                    
                    if([leadMeasObj2.webMeasurementID intValue]<=0)
                    {
                        
                        
                         [self uploadImageinServer:i imagesAerr:imageDataArr webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                    }
                    else
                    {
                        
                         [self uploadImageinServer:i imagesAerr:imageDataArr webMeasurementId:leadMeasObj2.webMeasurementID];
                        
                    }
                    
                }
            }
            for(int i=0; i<[imageDataArr_tab2 count];i++)
            {
                
                NSLog(@"measurment images syncing2..");
                
                if ([modeValue isEqualToString:@"new"])
                {
                    if(webMeasureIdArr.count ==1){
                        [self uploadImageinServer:i imagesAerr:imageDataArr_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                    }
                    else if (webMeasureIdArr.count ==2){
                        [self uploadImageinServer:i imagesAerr:imageDataArr_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:1]];
                    }
                }
                else
                {
                    if([leadMeasObj3.webMeasurementID intValue]<=0)
                    {
                        
                        if(webMeasureIdArr.count ==1)
                        {
                            [self uploadImageinServer:i imagesAerr:imageDataArr_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                        }
                        else if (webMeasureIdArr.count ==2){
                            [self uploadImageinServer:i imagesAerr:imageDataArr_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:1]];
                        }
                    }
                    else
                    {
                        
                           [self uploadImageinServer:i imagesAerr:imageDataArr_tab2 webMeasurementId:leadMeasObj3.webMeasurementID];
                    }
                }
            }
            
            //        [self sendimageUrltoServer];
            if(webMeasureIdArr.count ==1){
                //        NSData *dt = [[NSUserDefaults standardUserDefaults]objectForKey:@"sketchimagedt"];
                if(sketch_imagedataArr_tab1.count > 0){
                    for (int i=0; i<[sketch_imagedataArr_tab1 count]; i++) {
                        
                        NSLog(@"sketch images syncing1..");
                        [self uploadSketchImage:i imageData:[sketch_imagedataArr_tab1 objectAtIndex:i] webMid:[[webMeasureIdArr objectAtIndex:0]intValue]];
                    }
                }
                if(sketch_imagedataArr_tab2.count > 0){
                    
                    
                    for (int i=0; i<[sketch_imagedataArr_tab2 count]; i++) {
                        NSLog(@"sketch images syncing2..");
                        [self uploadSketchImage:i imageData:[sketch_imagedataArr_tab2 objectAtIndex:i] webMid:[[webMeasureIdArr objectAtIndex:0]intValue]];
                    }
                }
                
            }
            if(webMeasureIdArr.count ==2){
                if(sketch_imagedataArr_tab1.count >0){
                    for (int i=0; i<[sketch_imagedataArr_tab1 count]; i++) {
                        [self uploadSketchImage:i imageData:[sketch_imagedataArr_tab1 objectAtIndex:i] webMid:[[webMeasureIdArr objectAtIndex:0]intValue]];
                    }
                }
                if(sketch_imagedataArr_tab2.count >0){
                    for (int i=0; i<[sketch_imagedataArr_tab2 count]; i++) {
                        [self uploadSketchImage:i imageData:[sketch_imagedataArr_tab2 objectAtIndex:i] webMid:[[webMeasureIdArr objectAtIndex:1]intValue]];
                        
                    }
                }
            }
            
            for(int i=0; i<[appdelObj.arr_presketch_images count];i++)
            {
              
                 NSLog(@"preset sketch images syncing1..");
                
                if ([modeValue isEqualToString:@"new"])
                {
                    [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                }
                else
                {
                    if([leadMeasObj2.webMeasurementID intValue]<=0)
                    {
                        
                        [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                    }
                    else
                    {
                        
                     [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images webMeasurementId:leadMeasObj2.webMeasurementID];
                        
                    }
                }
                
                
            }
            for(int i=0; i<[appdelObj.arr_presketch_images_tab2 count];i++)
            {
                NSLog(@"preset sketch images syncing2..");
                if ([modeValue isEqualToString:@"new"])
                {
                    if(webMeasureIdArr.count ==1)
                    {
                        
                        [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                    }
                    else if (webMeasureIdArr.count ==2)
                    {
                        
                        [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:1]];
                    }
                }
                else
                {
                    
                    if([leadMeasObj3.webMeasurementID intValue]<=0)
                    {
                        
                        
                        if(webMeasureIdArr.count ==1)
                        {
                            [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:0]];
                        }
                        else if (webMeasureIdArr.count ==2)
                        {
                            [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images_tab2 webMeasurementId:[webMeasureIdArr objectAtIndex:1]];
                        }
                        
                        
                    }
                    else
                    {
                        
                       [self upload_preset_sketch_ImageinServer:i imagesAerr:appdelObj.arr_presketch_images_tab2 webMeasurementId:leadMeasObj3.webMeasurementID];
                        
                    }
                    
                }
            }
            
            NSLog(@"image sending finished......");
            
            dispatch_async(dispatch_get_main_queue(), ^(void)
                           {
                               
                                [ovController.view removeFromSuperview];
                                [hud removeFromSuperview];
                                [self gotoCustomer_INfo_Page];
                                if (send_success == 1 && netwrok_fail==0)
                                {
                                    
                                 imgdupload_status=0;
                                 UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"Message" message:@"Uploaded on server successfully." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil];
                                 alertView.tag = 11;
                                 [alertView show];
                                    
                                    
                                }
                               
                           });
            
            
        });
    });
    
}



-(void)insertMeasurement_image_tolocalDbfor_formTwo:(NSMutableArray *)imagearr
{
    
    
    ////////NSLog(@"inti2");
    for (int i = 0; i<[imagearr count]; i++) {
        //        //////NSLog(@"inti2=%i",i);
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"measurement" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"] image_num:[NSString stringWithFormat:@"%i",i+1] imageData:[imagearr objectAtIndex:i]];
        //NSLog(@"image_path = %@",image_path);
        if([modeValue isEqualToString:@"new"])
        {
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurementImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"]intValue] image_path:image_path];
            
        }
        else
        {
            
            
            [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
            [dbSingleton() insertMeasurementImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue] image_path:image_path];
            
        }
    }
    
}


-(void)insertMeasurement_sketchimage_tolocalDb:(NSData *)imagedt image_num:(NSString *)num
{
    
    
    if ([modeValue isEqualToString:@"new"])
    {
        
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"sketch" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"] image_num:num  imageData:imagedt];
        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
        [dbSingleton() insertMeasurementsketchImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_one"]intValue] withPath:image_path];
        
    }
    else
    {
        
        
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"sketch" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"] image_num:num  imageData:imagedt];
        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
        [dbSingleton() insertMeasurementsketchImage_withMeasurementId:0  localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formoneMeasid"]intValue] withPath:image_path];
        
    }
}


-(void)insertMeasurement_sketchimage_tolocalDbfor_formTwo:(NSData *)imagedt image_num:(NSString *)num{
    if ([modeValue isEqualToString:@"new"]) {
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"sketch" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"] image_num:num  imageData:imagedt];
        
        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
        [dbSingleton() insertMeasurementsketchImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"localMeasurementIDform_two"]intValue] withPath:image_path];
    }
    else{
        NSString *image_path = [dbSingleton() save_image_to_doc_dir:@"sketch" measurement_id:[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"] image_num:num  imageData:imagedt];
        
        [dbSingleton() createEditableCopyOfDatabaseIfNeeded];
        [dbSingleton() insertMeasurementsketchImage_withMeasurementId:0 localMeasurementId:[[[NSUserDefaults standardUserDefaults]valueForKey:@"formtwoMeasid"]intValue] withPath:image_path];
    }
}

-(void)roomlabelAlert:(int)roomlabelVal{
    NSString *message;
    if (roomlabelVal == 1) {
        message =@"Please choose room label for Shades and Blinds.";
        //        textF_touch_flag_tab1 = 0;
        gotonextView =1;
    }
    if (roomlabelVal ==2) {
        message =@"Please choose room label for Drapery and Hardware.";
        //        textF_touch_flag_tab2 = 0;
        gotonextView_tab2 =1;
        tab2flag = 0;
    }
    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:message delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    alert.tag = 1;
    
    
    if (alert1 == 0){
        if ([modeValue isEqualToString:@"edit"]) {
            [self showalert:alert];
        }
        else{
            [self showalert:alert];
        }
        alert1++;
    }
    gotonextView =0;
    gotonextView_tab2 = 0;
}

-(void)lengthAlert:(int)lengthVal{
    NSString *message;
    if (lengthVal == 1) {
        message =@"Please enter feet and inch values for Shades and Blinds.";
        textF_touch_flag_tab1 = 0;
        gotonextView =0;
    }
    if (lengthVal ==2) {
        message =@"Please enter feet and inch values for Drapery and Hardware.";
        textF_touch_flag_tab2 = 0;
        gotonextView_tab2 =1;
        tab2flag = 0;
    }
    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:message delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    alert.tag = 2;
    if ((UIAlertView *)[self.view viewWithTag:1]) {
        [alert removeFromSuperview];
    }
    if (alert2 == 0){
        if ([modeValue isEqualToString:@"edit"]) {
            [self showalert:alert ]; 
        }
        else{
            [self showalert:alert ];
        }
        alert2++;
    }
    
}

-(void)showalert:(UIAlertView *)alrt{
    [alrt show];
}


-(void)checkConnection
{
    
    imgdupload_status=0;
    netwrok_fail=0;
    conalert_status=0;
    
    //NSLog(@"checkConnection........");
    Reachability* reachability;
    [[NSNotificationCenter defaultCenter] addObserver: self selector: @selector(reachabilityChanged:) name: kReachabilityChangedNotification object: nil];
    reachability = [Reachability reachabilityForInternetConnection];
    [reachability startNotifier];
    NetworkStatus remoteHostStatus = [reachability currentReachabilityStatus];
    if(remoteHostStatus == NotReachable)
    {
        
        /*if ([modeValue isEqualToString:@"edit"]) {
            NSString *localMid1, *localMid2;
            if (arrTab1.count>0) {
                leadMeasObj = [[leadMeasurementInfotab2 alloc]init];
                leadMeasObj = [arrTab1 objectAtIndex:0];
                localMid1 = leadMeasObj.localMeasurementID;
                [self update_offlineupdated_column:localMid1 flagValue:@"1"];
            }
            if (arrTab2.count>0) {
                leadMeasObj = [[leadMeasurementInfotab2 alloc]init];
                leadMeasObj = [arrTab2 objectAtIndex:0];
                localMid2 = leadMeasObj.localMeasurementID;
                [self update_offlineupdated_column:localMid2 flagValue:@"1"];
            }
        }*/
        
        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"Message" message:@"Saved locally." delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil];
        alertView.tag = 11;
        [alertView show];
        
        
    }
    else
    {
        
        if(ovController == nil)
            ovController = [self.storyboard instantiateViewControllerWithIdentifier:@"OverlayViewControllerVC"];
        //CGFloat yaxis = self.navigationController.navigationBar.frame.size.height;
        CGFloat width = self.view.frame.size.width;
        CGFloat height = self.view.frame.size.height;
        //Parameters x = origion on x-axis, y = origon on y-axis.
        CGRect frame = CGRectMake(0, 0, width, height);
        ovController.view.frame = frame;
        ovController.view.backgroundColor = [UIColor grayColor];
        ovController.view.alpha = 0.5;
        ovController.rvController = self;
        [self.view addSubview:ovController.view];
        bar_btn.enabled=NO;
        NSLog(@"ovController...%@",ovController);
       [self showProgressHud];
       [self sendingUpdatedMeasurementDeatilToWeb:leadMeasObj];
        
        
     }
}



-(void)update_offlineupdated_column:(NSString *)localmid flagValue:(NSString *)val2
{
    
    if (sqlite3_open([databasePath UTF8String], &database)==SQLITE_OK)
    {
        insertSQL = [NSString stringWithFormat:@"update rst_lead_measurement_info set offlineUpdatedFlag=%@ where localMeasurementID=%@",val2,localmid];
        //[[NSUserDefaults standardUserDefaults]setValue:webmsmtID forKey:@"measurementidforimage"];
        const char * sqlStatement = [insertSQL UTF8String];
        //////NSLog(@"queryw=%s", sqlStatement);
        sqlite3_stmt * compiledStatement;
        
        if (sqlite3_prepare_v2(database, sqlStatement, -1, &compiledStatement, NULL)==SQLITE_OK) {
            
            while (sqlite3_step(compiledStatement)==SQLITE_ROW) {
            }
            
        }
        else{
            ////////NSLog(@"Problem with prepare statement");
            return;
        }
        sqlite3_finalize(compiledStatement);
    }sqlite3_close(database);
}



-(void)reachabilityChanged:(NSNotification*)notee
{
    Reachability * reach = [notee object];
    
    if([reach isReachable])
    {
        ////////NSLog(@"connection available");
        
    }
    else
    {
        
        if(imgdupload_status==1)
        {
            NSLog(@"conalert_status...%i",conalert_status);
            if(conalert_status==0)
            {
                
                
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"Error in connection, data not uploaded on server successfully." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
                [alert show];
                [hud removeFromSuperview];
                 conalert_status=1;
                 netwrok_fail=1;
                 [ovController.view removeFromSuperview];
                bar_btn.enabled=YES;
                [self gotoCustomer_INfo_Page];
                
            }
  
           
            
            
        }
        
    }
}
-(void)clear_userDefault_Values
{
    
   
     NSUserDefaults *prefs = [NSUserDefaults standardUserDefaults];
     [prefs removeObjectForKey:@"imageDataArr"];
     [prefs removeObjectForKey:@"sketchimagedt"];
     [prefs removeObjectForKey:@"sketchimagedtformtwo"];
     [prefs removeObjectForKey:@"formoneMeasid"];
     [prefs removeObjectForKey:@"formtwoMeasid"];
     [prefs removeObjectForKey:@"localMeasurementIDform_one"];
     [prefs removeObjectForKey:@"localMeasurementIDform_two"];
     [prefs synchronize];
     
    
}

-(NSString *)getInchesValues:(NSString *)str1
{
    
    
    NSString *str=str1;
    
    if ([str1 isEqualToString:@"2/8"])
    {
        str = @"1/4";
    }
    
    if ([str1 isEqualToString:@"4/8"])
    {
        str = @"1/2";
    }
    
    if ([str1 isEqualToString:@"6/8"])
    {
        str = @"3/4";
    }
    return  str;
    
}

- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text
{
    
        NSUInteger newLength = [textView.text length] + [text length] - range.length;
        return (newLength > 500) ? NO : YES;
        return YES;
    
}

-(void)showProgressHud
{
    
    
    hud =  [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSString *strloadingText = [NSString stringWithFormat:@"Uploading on server..."];
    hud.labelText = strloadingText;
    hud.frame = CGRectMake(224, 376, 320, 242);
    hud.mode = MBProgressHUDModeIndeterminate;
    
    
    
}

@end
